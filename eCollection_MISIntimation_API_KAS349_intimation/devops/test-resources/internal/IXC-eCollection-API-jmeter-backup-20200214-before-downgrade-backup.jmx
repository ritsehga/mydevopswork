<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IXC-eCollectionAPI-pristine-pre-20200214" enabled="true">
      <stringProp name="TestPlan.comments">Original pristine API. Before API was downgraded with changes to the boolean and integer datatypes for certain fields to suit Profunds were made. [13-Feb-2020]</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HostName_OpenShift" elementType="Argument">
            <stringProp name="Argument.name">HostName_OpenShift</stringProp>
            <stringProp name="Argument.value">ace-ecollection-sit-7800-non-production.13.71.81.159.nip.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port_OpenShift" elementType="Argument">
            <stringProp name="Argument.name">Port_OpenShift</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HostName" elementType="Argument">
            <stringProp name="Argument.name">HostName</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">7800</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Node: Local: 8080, Container: 8835 (V 3.5), 8834 (V 3.4), 8833 (V 3.3), IBM ACE Local: 7800</stringProp>
          </elementProp>
          <elementProp name="APIBasePath" elementType="Argument">
            <stringProp name="Argument.name">APIBasePath</stringProp>
            <stringProp name="Argument.value">/api/eCollection/mis</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ServiceURI_Intimation" elementType="Argument">
            <stringProp name="Argument.name">ServiceURI_Intimation</stringProp>
            <stringProp name="Argument.value">/api/eCollection/mis/intimate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api/eCollection/mis/ACME/remitter-validation-intermediary-account/intimate</stringProp>
          </elementProp>
          <elementProp name="ServiceURI_BatchIntimation" elementType="Argument">
            <stringProp name="Argument.name">ServiceURI_BatchIntimation</stringProp>
            <stringProp name="Argument.value">/api/eCollection/mis/intimate-batch</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ServiceURI_RefundIntimation" elementType="Argument">
            <stringProp name="Argument.name">ServiceURI_RefundIntimation</stringProp>
            <stringProp name="Argument.value">/api/eCollection/mis/refund-intimate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api/eCollection/mis/ACME/remitter-validation-intermediary-account/refund-intimate</stringProp>
          </elementProp>
          <elementProp name="ServiceURI_RefundBatchIntimation" elementType="Argument">
            <stringProp name="Argument.name">ServiceURI_RefundBatchIntimation</stringProp>
            <stringProp name="Argument.value">/api/eCollection/mis/refund-intimate-batch</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="source_data_filepath" elementType="Argument">
            <stringProp name="Argument.name">source_data_filepath</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Error Simulation" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="401" elementType="Argument">
            <stringProp name="Argument.name">401</stringProp>
            <stringProp name="Argument.value">Invalid Client Code</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="402" elementType="Argument">
            <stringProp name="Argument.name">402</stringProp>
            <stringProp name="Argument.value">Invalid VAN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="403" elementType="Argument">
            <stringProp name="Argument.name">403</stringProp>
            <stringProp name="Argument.value">Client Code, VAN Mismatch:</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="404" elementType="Argument">
            <stringProp name="Argument.name">404</stringProp>
            <stringProp name="Argument.value">Duplicate Transaction ID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="405" elementType="Argument">
            <stringProp name="Argument.name">405</stringProp>
            <stringProp name="Argument.value">Client Account Number Mismatch</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="406" elementType="Argument">
            <stringProp name="Argument.name">406</stringProp>
            <stringProp name="Argument.value">Invalid Sender IFSC Code</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="407" elementType="Argument">
            <stringProp name="Argument.name">407</stringProp>
            <stringProp name="Argument.value">Client IFSC code note found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="408" elementType="Argument">
            <stringProp name="Argument.name">408</stringProp>
            <stringProp name="Argument.value">Client Code not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="409" elementType="Argument">
            <stringProp name="Argument.name">409</stringProp>
            <stringProp name="Argument.value">Payment method not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="410" elementType="Argument">
            <stringProp name="Argument.name">410</stringProp>
            <stringProp name="Argument.value">Payment method is not valid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="431" elementType="Argument">
            <stringProp name="Argument.name">431</stringProp>
            <stringProp name="Argument.value">Remitter Account Number not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="432" elementType="Argument">
            <stringProp name="Argument.name">432</stringProp>
            <stringProp name="Argument.value">Refund rejection reason not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="433" elementType="Argument">
            <stringProp name="Argument.name">433</stringProp>
            <stringProp name="Argument.value">Refund status is invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="434" elementType="Argument">
            <stringProp name="Argument.name">434</stringProp>
            <stringProp name="Argument.value">Refund code not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="435" elementType="Argument">
            <stringProp name="Argument.name">435</stringProp>
            <stringProp name="Argument.value">Refund rejection reason not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Common Transaction IDs &amp; Formats" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="transaction_id_accept" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_accept</stringProp>
            <stringProp name="Argument.value">202020000441</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
          </elementProp>
          <elementProp name="transaction_id_reject" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_reject</stringProp>
            <stringProp name="Argument.value">202020000442</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Internal_Server_Error" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Internal_Server_Error</stringProp>
            <stringProp name="Argument.value">202020000500</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Bad_Gateway" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Bad_Gateway</stringProp>
            <stringProp name="Argument.value">202020000502</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Service_Unavailable" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Service_Unavailable</stringProp>
            <stringProp name="Argument.value">202020000503</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Gateway_Timeout" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Gateway_Timeout</stringProp>
            <stringProp name="Argument.value">202020000504</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_client_code" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_client_code</stringProp>
            <stringProp name="Argument.value">202020000401</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only. Client Code Invalid response from the client service itself.</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_virtual_account_number" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_virtual_account_number</stringProp>
            <stringProp name="Argument.value">202020000402</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_client_code_virtual_account_number_mismatch" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_client_code_virtual_account_number_mismatch</stringProp>
            <stringProp name="Argument.value">202020000403</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_duplicate_transaction_id" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_duplicate_transaction_id</stringProp>
            <stringProp name="Argument.value">202020000404</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_sender_ifsc_code" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_sender_ifsc_code</stringProp>
            <stringProp name="Argument.value">202020000406</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_remitter_account_number" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_remitter_account_number</stringProp>
            <stringProp name="Argument.value">202020000431</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_rejection_reason_not_provided" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_rejection_reason_not_provided</stringProp>
            <stringProp name="Argument.value">202020000432</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only (Warning)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iso8601_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rfc822_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timeshift_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InvalidStatusCode" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InvalidStatusCode</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}401</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InvalidVAN" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InvalidVAN</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}402</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_ClientCodeVANMismatch" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_ClientCodeVANMismatch</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}403</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RemitterAccountNumberNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RemitterAccountNumberNotFound</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}399</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RefundRejectionReasonNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RefundRejectionReasonNotFound</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}397</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RefundCodeNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RefundCodeNotFound</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}405</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InternalServerError" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InternalServerError</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_BadGateway" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_BadGateway</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}502</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_ServiceUnavailable" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_ServiceUnavailable</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}503</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_GatewayTimeout" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_GatewayTimeout</stringProp>
            <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}504</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_neft" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_neft</stringProp>
            <stringProp name="Argument.value">NEFT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_rtgs" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_rtgs</stringProp>
            <stringProp name="Argument.value">RTGS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_ft" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_ft</stringProp>
            <stringProp name="Argument.value">FT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_imps" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_imps</stringProp>
            <stringProp name="Argument.value">IMPS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_utr" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_utr</stringProp>
            <stringProp name="Argument.value">UTR</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_rrn" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_rrn</stringProp>
            <stringProp name="Argument.value">RRN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_tranId" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_tranId</stringProp>
            <stringProp name="Argument.value">TRANID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Intimation-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="test_reports_filepath_initmation" elementType="Argument">
              <stringProp name="Argument.name">test_reports_filepath_initmation</stringProp>
              <stringProp name="Argument.value">C:\Workspaces\workspace-sts\ixc-ecollection-profunds-api-v3.5-swaggerhub-nodejs-server-acme\test-resources\test-reports\intimation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testdata_filename" elementType="Argument">
              <stringProp name="Argument.name">testdata_filename</stringProp>
              <stringProp name="Argument.value">eCollection_intimation.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="montran_testdata_filename" elementType="Argument">
              <stringProp name="Argument.name">montran_testdata_filename</stringProp>
              <stringProp name="Argument.value">eCollectionAPI-TestData-Montran_20200202-jmeter.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data &amp; Formats" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode" elementType="Argument">
              <stringProp name="Argument.name">payment_mode</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt_ADAN" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;ADANJUPI00014&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request_ADAN" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;ADANJUPI00014&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Invalid VAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_invalid_virtual_account_number}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-NEFT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-RTGS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-IMPS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-FT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-Remote Client Service 5XX Simulation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt- No Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: 1,&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: 1,&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request Timestamp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No API Version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${invalid_payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Currency" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;USD&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode-Transaction ID Type" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;jane.doe@nobody.ibm.com&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: &quot;email&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${transaction_datetime}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: false,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request-ICICI-UAT-20200210-1040" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;api_version&quot;:&quot;1.0&quot;,&#xd;
&quot;request_id&quot;:&quot;PRO202002070000045&quot;,&#xd;
&quot;request_datetime&quot;:&quot;2020-02-07T18:13:07:610+05:30&quot;,&#xd;
&quot;sender_system_id&quot;:&quot;profunds&quot;,&#xd;
&quot;sender_user_id&quot;:&quot;raman.kumar@icicibank.com&quot;,&#xd;
&quot;sender_user_id_type&quot;:&quot;email&quot;,&#xd;
&quot;request_priority&quot;:1,&#xd;
&quot;resent_indicator&quot;:&quot;false&quot;,&#xd;
&quot;original_request_id&quot;:&quot;&quot;,&#xd;
&quot;original_request_datetime&quot;:&quot;&quot;,&#xd;
&quot;original_sender_system_id&quot;:&quot;&quot;,&#xd;
&quot;original_sender_user_id&quot;:&quot;&quot;,&#xd;
&quot;original_sender_user_id_type&quot;:&quot;&quot;,&#xd;
&quot;original_request_priority&quot;:,&#xd;
&quot;test_indicator&quot;:&quot;false&quot;,&#xd;
&quot;client_code&quot;:&quot;ADAN&quot;,&#xd;
&quot;virtual_account_number&quot;:&quot;ADAN2541845659&quot;,&#xd;
&quot;transaction_amount&quot;:&quot;600000&quot;,&#xd;
&quot;currency_code&quot;:&quot;null&quot;,&#xd;
&quot;payment_mode&quot;:&quot;NEFT&quot;,&#xd;
&quot;transaction_id&quot;:&quot;N85942515569&quot;,&#xd;
&quot;transaction_id_type&quot;:&quot;ECOLL&quot;,&#xd;
&quot;transaction_datetime&quot;:&quot;07022020&quot;,&#xd;
&quot;sender_name&quot;:&quot;MUNMUN CHAKRABORTTY&quot;,&#xd;
&quot;sender_account_number&quot;:&quot;916010023040835&quot;,&#xd;
&quot;sender_bank_name&quot;:&quot;AXIS BANK&quot;,&#xd;
&quot;sender_ifsc_code&quot;:&quot;UTIB0000148&quot;,&#xd;
&quot;client_account_number&quot;:&quot;000705000255&quot;,&#xd;
&quot;informational_message&quot;:&quot;URGENT&quot;,&#xd;
&quot;client_ext_data&quot;:{&quot;profunds_int_request_id&quot;:&quot;PRO202002071813076&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Mixed Requests XML" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-swaggerhub" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;api_version&gt;1.0&lt;/api_version&gt;&#xd;
	&lt;request_id&gt;7C615D36-1529-4B0C-A1E6-C5C67D5FA353&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;2019-11-26T12:28:56.321+05:30&lt;/request_datetime&gt;&#xd;
	&lt;parent_request_id&gt;30F14673-BF37-4C55-89E3-AD7ED78BFB14&lt;/parent_request_id&gt;&#xd;
	&lt;parent_request_datetime&gt;2019_11_26T12:28:56.321+05:30&lt;/parent_request_datetime&gt;&#xd;
	&lt;channel_id&gt;Profunds&lt;/channel_id&gt;&#xd;
	&lt;sender_system_id&gt;Profunds&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;raman.kumar@icicibank.com&lt;/sender_system_user_id&gt;&#xd;
	&lt;sender_system_user_id_type&gt;email&lt;/sender_system_user_id_type&gt;&#xd;
	&lt;request_priority&gt;1&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;131280011&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;2019-11-26T12:28:56.321+05:30&lt;/original_request_datetime&gt;&#xd;
	&lt;original_channel_id&gt;Profunds&lt;/original_channel_id&gt;&#xd;
	&lt;original_sender_system_id&gt;profunds&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;raman.kumar@icicibank.com&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_sender_system_user_id_type&gt;email&lt;/original_sender_system_user_id_type&gt;&#xd;
	&lt;original_request_priority&gt;1&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;false&lt;/test_indicator&gt;&#xd;
	&lt;application_context&gt;&#xd;
	&lt;/application_context&gt;&#xd;
	&lt;client_code&gt;ARNC&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;ARNCMJOM104&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;110&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;INR&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;NEFT&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;N266190934399380&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;UTR&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;2019-11-26T11:48:46.331+05:30&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;RAMAN KUMAR&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;601270000750&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;HDFC&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;HDFC0000001&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;RAMAN KUMAR&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;601270000750&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;ICICI&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;ICIC0000001&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;string&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;string&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;string&lt;/informational_message&gt;&#xd;
	&lt;external_system_reference_1&gt;string&lt;/external_system_reference_1&gt;&#xd;
	&lt;external_system_reference_2&gt;string&lt;/external_system_reference_2&gt;&#xd;
	&lt;client_data_ext&gt;&#xd;
	&lt;/client_data_ext&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;application_context/&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${unsubscribed_client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${invalid_payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="TestCases-BusinessData-Set1-Intimation" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">24</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV-Test-DataSet-Configuration" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">./${testdata_filename}</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-First-Attempt" enabled="true">
            <stringProp name="IfController.condition">&quot;${__changeCase(${resent_indicator},UPPER,)}&quot; == &quot;FALSE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New-Request-${client_code}-${test_case_id}-${__javaScript(&apos;${transaction_id}&apos;.substr((&apos;${transaction_id}&apos;.length)-3\,3))}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${request_id}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: &quot;${sender_system_user_id_type}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: ${__changeCase(${resent_indicator},LOWER,)},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-Resent-Attempt" enabled="true">
            <stringProp name="IfController.condition">&quot;${__changeCase(${resent_indicator},UPPER,)}&quot; == &quot;TRUE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent-Request-${client_code}-${test_case_id}-${__javaScript(&apos;${transaction_id}&apos;.substr((&apos;${transaction_id}&apos;.length)-3\,3))}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${request_id}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: ${__changeCase(${resent_indicator},LOWER,)},&#xd;
  &quot;original_request_id&quot;: &quot;${original_request_id}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${original_sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-2H,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="TestCases-BusinessData-Montran-Intimation" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV-Test-DataSet-Configuration" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">./${montran_testdata_filename}</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-First-Attempt" enabled="true">
            <stringProp name="IfController.condition">&quot;${__changeCase(${resent_indicator},UPPER,)}&quot; == &quot;FALSE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TestCase-${test_case}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: ${__changeCase(${resent_indicator},LOWER,)},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-Resent-Attempt" enabled="true">
            <stringProp name="IfController.condition">&quot;${__changeCase(${resent_indicator},UPPER,)}&quot; == &quot;TRUE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TestCase-${test_case}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: ${__changeCase(${resent_indicator},LOWER,)},&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${original_sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-2H,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ServiceURI_Intimation}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${test_reports_filepath_initmation}\result-tree-intimation-${__time(yyyyMMddHHmmssSSS,)}.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Refund Intimation-MainThreadGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="source_data_filename_refund_intimation" elementType="Argument">
              <stringProp name="Argument.name">source_data_filename_refund_intimation</stringProp>
              <stringProp name="Argument.value">eCollection_refund_intimation.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_reports_filepath_refund" elementType="Argument">
              <stringProp name="Argument.name">test_reports_filepath_refund</stringProp>
              <stringProp name="Argument.value">C:\Workspaces\workspace-sts\ixc-ecollection-profunds-api-v3.5-swaggerhub-nodejs-server-acme\test-resources\test-reports\refund-intimation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data &amp; Formats" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode" elementType="Argument">
              <stringProp name="Argument.name">payment_mode</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Refund Business Field Data &amp; Formats Only" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="remitter_account_number" elementType="Argument">
              <stringProp name="Argument.name">remitter_account_number</stringProp>
              <stringProp name="Argument.value">01802204033366</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cms_reference_number" elementType="Argument">
              <stringProp name="Argument.name">cms_reference_number</stringProp>
              <stringProp name="Argument.value">CMS-202001-3899</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_paid" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_paid</stringProp>
              <stringProp name="Argument.value">P</stringProp>
              <stringProp name="Argument.desc">P if the refund was Paid. C if the refund was Cancelled.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_cancelled" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_cancelled</stringProp>
              <stringProp name="Argument.value">C</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_code" elementType="Argument">
              <stringProp name="Argument.name">refund_code</stringProp>
              <stringProp name="Argument.value">ADANR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_rejection_code" elementType="Argument">
              <stringProp name="Argument.name">refund_rejection_code</stringProp>
              <stringProp name="Argument.value">XC00701I</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt_ADAN" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;ADANJUPI00014&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request_ADAN" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;ADANJUPI00014&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Rejection Reason" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_rejection_reason_not_provided}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-NEFT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-RTGS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-IMPS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-FT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-Remote Client Service 5XX Simulation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt- No Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: 1,&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: 1,&#xd;
  &quot;test_indicator&quot;: false,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request Timestamp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No API Version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${invalid_payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Currency" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;USD&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode-Transaction ID Type" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;jane.doe@nobody.ibm.com&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: &quot;email&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${transaction_datetime}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: false,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Refund Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Rejection Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${test_reports_filepath_refund}\result-tree-refund-intimation-${__time(yyyyMMddHHmmssSSS,)}.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Intimation-Batch-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="test_reports_filepath_batch" elementType="Argument">
              <stringProp name="Argument.name">test_reports_filepath_batch</stringProp>
              <stringProp name="Argument.value">C:\Workspaces\workspace-sts\ixc-ecollection-profunds-api-v3.5-swaggerhub-nodejs-server-acme\test-resources\test-reports\intimation-batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data &amp; Formats" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_code_1</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 1 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_1</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">currency_code_1</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_1</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_1</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_1</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_1</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_1</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_1</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_1</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_1</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_name_1</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_1</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_1</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_1</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_1</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_1</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1_1</stringProp>
              <stringProp name="Argument.value">Narration 1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_1" elementType="Argument">
              <stringProp name="Argument.name">narration_2_1</stringProp>
              <stringProp name="Argument.value">Narration 2_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_1" elementType="Argument">
              <stringProp name="Argument.name">informational_message_1</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_code_2</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 2 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_2</stringProp>
              <stringProp name="Argument.value">ARCC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">currency_code_2</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_2</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_2</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_2</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_2</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_2</stringProp>
              <stringProp name="Argument.value">ADAN031192388</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_2</stringProp>
              <stringProp name="Argument.value">288.88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_2</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_2</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_name_2</stringProp>
              <stringProp name="Argument.value">Khal Drogo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_2</stringProp>
              <stringProp name="Argument.value">0222107666600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_2</stringProp>
              <stringProp name="Argument.value">Canara Bank</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">CNRB0000222</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_2</stringProp>
              <stringProp name="Argument.value">Adani Metals &amp; Ore Mining</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_2</stringProp>
              <stringProp name="Argument.value">0081202280776</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_2</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">ICIC0000009</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_2" elementType="Argument">
              <stringProp name="Argument.name">narration_1_2</stringProp>
              <stringProp name="Argument.value">Narration 1_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2_2</stringProp>
              <stringProp name="Argument.value">Narration 2_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_2" elementType="Argument">
              <stringProp name="Argument.name">informational_message_2</stringProp>
              <stringProp name="Argument.value">A quick brown dog jumped over the lazy fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_code_3</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 3 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_3</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">currency_code_3</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_3</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_3</stringProp>
              <stringProp name="Argument.value">IMPS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_3</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_3</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_3</stringProp>
              <stringProp name="Argument.value">ADANX031192377</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_3</stringProp>
              <stringProp name="Argument.value">28888.44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_3</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_3</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_name_3</stringProp>
              <stringProp name="Argument.value">John Snow</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_3</stringProp>
              <stringProp name="Argument.value">0444007844444</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_3</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">HDFC0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_3</stringProp>
              <stringProp name="Argument.value">Adani Logistics</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_3</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_3</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">ICIC0000007</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_3" elementType="Argument">
              <stringProp name="Argument.name">narration_1_3</stringProp>
              <stringProp name="Argument.value">Narration 1_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_3" elementType="Argument">
              <stringProp name="Argument.name">narration_2_3</stringProp>
              <stringProp name="Argument.value">Narration 2_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_3" elementType="Argument">
              <stringProp name="Argument.name">informational_message_3</stringProp>
              <stringProp name="Argument.value">A lazy brown fox jumped over the quick dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_code_4</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 4 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_4</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">currency_code_4</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_4</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_4</stringProp>
              <stringProp name="Argument.value">FT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_4</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_4</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_4</stringProp>
              <stringProp name="Argument.value">ADANX031192396</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_4</stringProp>
              <stringProp name="Argument.value">4544448488.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_4</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_4</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_name_4</stringProp>
              <stringProp name="Argument.value">Daenerys Targaryen</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_4</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_4</stringProp>
              <stringProp name="Argument.value">Bank Of Baroda</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">BOBN005555</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_4</stringProp>
              <stringProp name="Argument.value">Adani Heavy Industries</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_4</stringProp>
              <stringProp name="Argument.value">001110222226</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_4</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">ICIC0000005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_4" elementType="Argument">
              <stringProp name="Argument.name">narration_1_4</stringProp>
              <stringProp name="Argument.value">Narration 1_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_4" elementType="Argument">
              <stringProp name="Argument.name">narration_2_4</stringProp>
              <stringProp name="Argument.value">Narration 2_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_4" elementType="Argument">
              <stringProp name="Argument.name">informational_message_4</stringProp>
              <stringProp name="Argument.value">A lazy brown dog jumped over the quick fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD END ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-Split-OK" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split-Multi Status" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_BadGateway}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_BadGateway}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_GatewayTimeout}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InternalServerError}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InternalServerError}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-1-Bad-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidVAN}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-3-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_BatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${test_reports_filepath_batch}\result-tree-intimation-batch-${__time(yyyyMMddHHmmssSSS,)}.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Refund Intimation-Batch-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="source_data_filename_refund_intimation" elementType="Argument">
              <stringProp name="Argument.name">source_data_filename_refund_intimation</stringProp>
              <stringProp name="Argument.value">eCollection_refund_intimation.csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_reports_filepath_refund_batch" elementType="Argument">
              <stringProp name="Argument.name">test_reports_filepath_refund_batch</stringProp>
              <stringProp name="Argument.value">C:\Workspaces\workspace-sts\ixc-ecollection-profunds-api-v3.5-swaggerhub-nodejs-server-acme\test-resources\test-reports\refund-intimation-batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data &amp; Formats" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_code_1</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 1 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_1</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">currency_code_1</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_1</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_1</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_1</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_1</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_1</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_1</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_1</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_1</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_name_1</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_1</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_1</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_1</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_1</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_1</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1_1</stringProp>
              <stringProp name="Argument.value">Narration 1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_1" elementType="Argument">
              <stringProp name="Argument.name">narration_2_1</stringProp>
              <stringProp name="Argument.value">Narration 2_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_1" elementType="Argument">
              <stringProp name="Argument.name">informational_message_1</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_code_2</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 2 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_2</stringProp>
              <stringProp name="Argument.value">ARCC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">currency_code_2</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_2</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_2</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_2</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_2</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_2</stringProp>
              <stringProp name="Argument.value">ADAN031192388</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_2</stringProp>
              <stringProp name="Argument.value">288.88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_2</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_2</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_name_2</stringProp>
              <stringProp name="Argument.value">Khal Drogo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_2</stringProp>
              <stringProp name="Argument.value">0222107666600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_2</stringProp>
              <stringProp name="Argument.value">Canara Bank</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">CNRB0000222</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_2</stringProp>
              <stringProp name="Argument.value">Adani Metals &amp; Ore Mining</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_2</stringProp>
              <stringProp name="Argument.value">0081202280776</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_2</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">ICIC0000009</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_2" elementType="Argument">
              <stringProp name="Argument.name">narration_1_2</stringProp>
              <stringProp name="Argument.value">Narration 1_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2_2</stringProp>
              <stringProp name="Argument.value">Narration 2_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_2" elementType="Argument">
              <stringProp name="Argument.name">informational_message_2</stringProp>
              <stringProp name="Argument.value">A quick brown dog jumped over the lazy fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_code_3</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 3 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_3</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">currency_code_3</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_3</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_3</stringProp>
              <stringProp name="Argument.value">IMPS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_3</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_3</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_3</stringProp>
              <stringProp name="Argument.value">ADANX031192377</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_3</stringProp>
              <stringProp name="Argument.value">28888.44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_3</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_3</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_name_3</stringProp>
              <stringProp name="Argument.value">John Snow</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_3</stringProp>
              <stringProp name="Argument.value">0444007844444</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_3</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">HDFC0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_3</stringProp>
              <stringProp name="Argument.value">Adani Logistics</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_3</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_3</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">ICIC0000007</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_3" elementType="Argument">
              <stringProp name="Argument.name">narration_1_3</stringProp>
              <stringProp name="Argument.value">Narration 1_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_3" elementType="Argument">
              <stringProp name="Argument.name">narration_2_3</stringProp>
              <stringProp name="Argument.value">Narration 2_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_3" elementType="Argument">
              <stringProp name="Argument.name">informational_message_3</stringProp>
              <stringProp name="Argument.value">A lazy brown fox jumped over the quick dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_code_4</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 4 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_4</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">currency_code_4</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_4</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_4</stringProp>
              <stringProp name="Argument.value">FT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_4</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_4</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_4</stringProp>
              <stringProp name="Argument.value">ADANX031192396</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_4</stringProp>
              <stringProp name="Argument.value">4544448488.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_4</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_4</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_name_4</stringProp>
              <stringProp name="Argument.value">Daenerys Targaryen</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_4</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_4</stringProp>
              <stringProp name="Argument.value">Bank Of Baroda</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">BOBN005555</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_4</stringProp>
              <stringProp name="Argument.value">Adani Heavy Industries</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_4</stringProp>
              <stringProp name="Argument.value">001110222226</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_4</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">ICIC0000005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_4" elementType="Argument">
              <stringProp name="Argument.name">narration_1_4</stringProp>
              <stringProp name="Argument.value">Narration 1_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_4" elementType="Argument">
              <stringProp name="Argument.name">narration_2_4</stringProp>
              <stringProp name="Argument.value">Narration 2_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_4" elementType="Argument">
              <stringProp name="Argument.name">informational_message_4</stringProp>
              <stringProp name="Argument.value">A lazy brown dog jumped over the quick fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD END ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Refund Business Field Data &amp; Formats Only" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="remitter_account_number" elementType="Argument">
              <stringProp name="Argument.name">remitter_account_number</stringProp>
              <stringProp name="Argument.value">01802204033366</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cms_reference_number" elementType="Argument">
              <stringProp name="Argument.name">cms_reference_number</stringProp>
              <stringProp name="Argument.value">CMS-202001-3899</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_paid" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_paid</stringProp>
              <stringProp name="Argument.value">P</stringProp>
              <stringProp name="Argument.desc">P if the refund was Paid. C if the refund was Cancelled.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_cancelled" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_cancelled</stringProp>
              <stringProp name="Argument.value">C</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_code" elementType="Argument">
              <stringProp name="Argument.name">refund_code</stringProp>
              <stringProp name="Argument.value">ADANR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_rejection_code" elementType="Argument">
              <stringProp name="Argument.name">refund_rejection_code</stringProp>
              <stringProp name="Argument.value">XC00701I</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-Split-OK" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;	  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split-Multi Status" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data-Multi Status" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="transaction_id_InvalidStatusCode" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InvalidStatusCode</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}401</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_InvalidVAN" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InvalidVAN</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}402</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_ClientCodeVANMismatch" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_ClientCodeVANMismatch</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}403</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RemitterAccountNumberNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RemitterAccountNumberNotFound</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}399</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RefundRejectionReasonNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RefundRejectionReasonNotFound</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}397</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RefundCodeNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RefundCodeNotFound</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}405</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_InternalServerError" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InternalServerError</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_BadGateway" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_BadGateway</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}502</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_ServiceUnavailable" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_ServiceUnavailable</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}503</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_GatewayTimeout" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_GatewayTimeout</stringProp>
                <stringProp name="Argument.value">PRO${__time(yyyyMMdd,)}${__counter(FALSE,)}504</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;	  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_BadGateway}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_BadGateway}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_GatewayTimeout}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InternalServerError}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InternalServerError}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-1-Bad-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidVAN}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-3-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HostName}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ServiceURI_RefundBatchIntimation}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${test_reports_filepath_refund_batch}\result-tree-refund-intimation-batch-${__time(yyyyMMddHHmmssSSS,)}.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
