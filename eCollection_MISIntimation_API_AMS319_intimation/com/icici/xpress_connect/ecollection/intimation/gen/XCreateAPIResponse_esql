BROKER SCHEMA com.icici.xpress_connect.ecollection.intimation.gen

DECLARE API_COMPLETION_CODE_SUCCESSFUL CONSTANT INTEGER 0;
DECLARE API_COMPLETION_CODE_WARNING CONSTANT INTEGER 1;
DECLARE API_COMPLETION_CODE_ERROR CONSTANT INTEGER 2;

-- Reason codes to be used whatever be the logic on the Client API end.
-- These codes decide the Accept (Fund Transfer) / Reject (Refund) Payment Instruction logic.

DECLARE API_REASON_CODE_REQUEST_ACCEPTED CONSTANT CHARACTER 'XC00211I';
DECLARE API_REASON_CODE_REQUEST_PROVISIONALLY_ACCEPTED CONSTANT CHARACTER 'XC00212I';
DECLARE API_REASON_CODE_REQUEST_REJECTED  CONSTANT CHARACTER 'XC00221E';

-- [20-Jan-2020]
DECLARE API_REASON_CODE_OK 	CONSTANT CHARACTER 'XC00202I';

DECLARE API_REASON_MESSAGE_REQUEST_ACCEPTED CONSTANT CHARACTER 'Request accepted.';
DECLARE API_REASON_MESSAGE_REQUEST_REJECTED CONSTANT CHARACTER 'Request rejected.';

DECLARE API_REASON_CODE_TRANSACTION_ACCEPTED CONSTANT CHARACTER 'XC00441I';									-- [20-Jan-2020]
DECLARE API_REASON_CODE_TRANSACTION_REJECTED CONSTANT CHARACTER 'XC00442E';									-- [20-Jan-2020]

-- Overriding default messages
DECLARE API_REASON_MESSAGE_TRANSACTION_ACCEPTED CONSTANT CHARACTER 'Client has confirmed this transaction to be a valid one.';		-- [20-Jan-2020]
DECLARE API_REASON_MESSAGE_TRANSACTION_REJECTED  CONSTANT CHARACTER 'Client has rejected this transaction.';		-- [20-Jan-2020]

-- [20-Jan-2020]: We already had business data related reason codes and messages in CommonAPIMessageBuilder ESQL module.
-- Hence we removed it from here. Add new client specific reason codes and messages in this extention module.
-- Example: 	API_REASON_CODE_VALID_CLIENT_CODE, API_REASON_CODE_INVALID_CLIENT_CODE,
-- 						API_REASON_CODE_INVALID_VIRTUAL_ACCOUNT_NUMBER
-- OK
DECLARE API_HTTP_STATUS_CODE_OK CONSTANT INTEGER 200;
--Bad Request	
DECLARE API_HTTP_STATUS_CODE_BAD_REQUEST CONSTANT INTEGER 400;
--Unprocessable Entity	
DECLARE API_HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY CONSTANT INTEGER 422;

--		CREATE COMPUTE MODULE XCreateAPIResponse
--			CREATE FUNCTION Main() RETURNS BOOLEAN
--			BEGIN
--				-- CALL CopyMessageHeaders();
--				-- CALL CopyEntireMessage();
--				RETURN TRUE;
--			END;
--		
--			CREATE PROCEDURE CopyMessageHeaders() BEGIN
--				DECLARE I INTEGER 1;
--				DECLARE J INTEGER;
--				SET J = CARDINALITY(InputRoot.*[]);
--				WHILE I < J DO
--					SET OutputRoot.*[I] = InputRoot.*[I];
--					SET I = I + 1;
--				END WHILE;
--			END;
--		
--			CREATE PROCEDURE CopyEntireMessage() BEGIN
--				SET OutputRoot = InputRoot;
--			END;
--		END MODULE;

-- Perform business data validation.
CREATE FUNCTION performResponseBusinessDataValidation(IN refClientAPIResponse REFERENCE, INOUT refValidationResult REFERENCE) 
BEGIN
	-- Validate rest of the message fields.
	-- @@IXC.AutoGenerateESQL
END;

-- Map / Build API response body (data / payload).
CREATE FUNCTION mapAPIResponse(IN refClientAPIResponse REFERENCE, INOUT refAPIResponse REFERENCE, IN refAPIRequest REFERENCE)
BEGIN
	-- Profunds Mock Service
		CALL mapAPIResponse_ProfundsMock(refClientAPIResponse, refAPIResponse, refAPIRequest);
	-- Adani
	-- CALL mapAPIResponse_Adani(refClientAPIResponse, refAPIResponse, refAPIRequest);
	-- RNVP
	-- CALL mapAPIResponse_RNVP(refClientAPIResponse, refAPIResponse, refAPIRequest);
	-- RNVP
	-- CALL mapAPIRespone_PhillipCapital(refClientAPIResponse, refAPIResponse, refAPIRequest);
	
END;

-- Map / Build API response body (data / payload).
CREATE FUNCTION mapAPIResponse_ProfundsMock(IN refClientAPIResponse REFERENCE, INOUT refAPIResponse REFERENCE, IN refAPIRequest REFERENCE)
BEGIN
	-- Uses API field map on Customer On-Boarding Portal to produce ESQL code.
	-- @@IXC.AutoGenerateESQL
	
		-- [14-Feb-2020]: API Downgraded for Profunds datatype issue.
		IF COALESCE(refClientAPIResponse.request_priority, -1) <> -1 THEN
			SET refAPIResponse.request_priority = CAST(refClientAPIResponse.request_priority AS CHARACTER);
		END IF;
		IF COALESCE(refClientAPIResponse.resent_indicator, FALSE) THEN
			SET refAPIResponse.resent_indicator = CAST(refClientAPIResponse.resent_indicator AS CHARACTER);
		END IF;
		IF COALESCE(refClientAPIResponse.original_request_priority, -1) <> -1 THEN
			SET refAPIResponse.original_request_priority = CAST(refClientAPIResponse.original_request_priority AS CHARACTER);
		END IF;
		IF COALESCE(refClientAPIResponse.test_indicator, FALSE) THEN
			SET refAPIResponse.test_indicator = CAST(refClientAPIResponse.test_indicator AS CHARACTER);
		END IF;
	
	IF refClientAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_ACCEPTED OR
		 refClientAPIResponse.reason_code = API_REASON_CODE_REQUEST_ACCEPTED  OR 
		 refClientAPIResponse.reason_code = API_REASON_CODE_OK THEN
		
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_SUCCESSFUL;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_ACCEPTED;
		
	ELSEIF refClientAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_REJECTED THEN
		
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_ERROR;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_REJECTED;
		
	ELSE 
		SET refAPIResponse.completion_code = refClientAPIResponse.completion_code;
		SET refAPIResponse.reason_code = refClientAPIResponse.reason_code;
	END IF;
	
	SET refAPIResponse.message = lookupReasonMessage(refAPIResponse.reason_code);
END;

-- Map / Build API response body (data / payload).
CREATE FUNCTION mapAPIResponse_Adani(IN refClientAPIResponse REFERENCE, INOUT refAPIResponse REFERENCE, IN refAPIRequest REFERENCE)
BEGIN
	-- Uses API field map on Customer On-Boarding Portal to produce ESQL code.
	-- @@IXC.AutoGenerateESQL
	-- Adani case.
	IF refClientAPIResponse.status = 'Success' THEN
		SET refAPIResponse.client_data_ext.client_client_name = refClientAPIResponse.message.message.userName;
		SET refAPIResponse.client_data_ext.client_valid_indicator = refClientAPIResponse.message.message.validUser;

		SET refAPIResponse.completion_code = API_COMPLETION_CODE_SUCCESSFUL;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_ACCEPTED;
	ELSE	-- "status": "Error"
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_ERROR;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_REJECTED;
	END IF;
	
	SET refAPIResponse.message = lookupReasonMessage(refAPIResponse.reason_code);
	
END;


-- Map / Build API response body (data / payload).
CREATE FUNCTION mapAPIResponse_PhillipCapital(IN refClientAPIResponse REFERENCE, INOUT refAPIResponse REFERENCE, IN refAPIRequest REFERENCE)
BEGIN
	-- Uses API field map on Customer On-Boarding Portal to produce ESQL code.
	-- @@IXC.AutoGenerateESQL
	
--		SET refAPIResponse.client_code = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].ClientCode; 														-- "3044",
--		SET refAPIResponse.virtual_account_number = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].VirtualAccountNumber; 		-- "30450000000000245376",
--		SET refAPIResponse.transaction_amount = 
--			CAST(refClientAPIResponse."Virtual Account Number Verification IN".Item[1].TransactionAmount  AS DECIMAL); 															-- "22222.22",
--		SET refAPIResponse.payment_mode =  
--			com.icici.xpress_connect.rules.core.DefaultPaymentModeMatcher_getValue(refClientAPIResponse."Virtual Account Number Verification IN".Item[1].Mode);
--		SET refAPIResponse.transaction_id = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].UTRNumber; 												-- "00015632002150000123",
--		SET refAPIResponse.sender_name = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].RemitterName; 											-- "John Doe",
--		SET refAPIResponse.sender_account_number = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].RemitterAccountNumber; -- "0001563001969",
--		SET refAPIResponse.sender_ifsc_code = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].RemitterIFSC_Code; 							-- "HDFC0001563",
--		SET refAPIResponse.transaction_datetime = 
--			CAST(CAST(refClientAPIResponse."Virtual Account Number Verification IN".Item[1].Date AS TIMESTAMP FORMAT 'dd-MM-yyyy') AS CHARACTER FORMAT 'IU'); 																																					-- 31-01-2020",
--		SET refClientAPIRequest.informational_message = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].ReceiverInformation; 	-- "A/c 00003993 EMI 2/12"
	
	IF refClientAPIResponse."Virtual Account Number Verification IN".Item[1].Status = 'ACCEPT' THEN
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_SUCCESSFUL;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_ACCEPTED;
	ELSE	-- "Status": "REJECT"
		SET refAPIResponse.client_data_ext."reject_reason" = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].RejectReason;
		SET refAPIResponse.client_data_ext."refund_code" = refClientAPIResponse."Virtual Account Number Verification IN".Item[1].Refundcode;
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_ERROR;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_REJECTED;
	END IF;
	
	SET refAPIResponse.message = lookupReasonMessage(refAPIResponse.reason_code);
	
END;

-- Map / Build API response body (data / payload).
CREATE FUNCTION mapAPIResponse_RNVP(IN refClientAPIResponse REFERENCE, INOUT refAPIResponse REFERENCE, IN refAPIRequest REFERENCE)
BEGIN
	-- Uses API field map on Customer On-Boarding Portal to produce ESQL code.
	-- @@IXC.AutoGenerateESQL

	IF refClientAPIResponse.Status = 'ACCEPT' THEN
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_SUCCESSFUL;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_ACCEPTED;
	ELSE	-- "Status": "REJECT"
		SET refAPIResponse.client_data_ext."Reject Reason" = refClientAPIResponse."Reject Reason";
		SET refAPIResponse.completion_code = API_COMPLETION_CODE_ERROR;
		SET refAPIResponse.reason_code = API_REASON_CODE_TRANSACTION_REJECTED;
	END IF;
	
	SET refAPIResponse.message = lookupReasonMessage(refAPIResponse.reason_code);
	
END;


-- Map the Reason Code with the HTTP Status Code.
CREATE FUNCTION mapHTTPStatusCode (IN chReasonCode CHARACTER)  RETURNS INTEGER
BEGIN
	-- Default.
	DECLARE intMappedHTTPStatusCode INTEGER com.icici.xpress_connect.common.api.mapHTTPStatusCode(chReasonCode);
	
	-- Override defaults. 
	-- Uses HTTP Status Code to Customer Error Code map on Customer On-Boarding Portal to produce ESQL code.
	-- @@IXC.AutoGenerateESQL

	IF chReasonCode = API_REASON_CODE_REQUEST_ACCEPTED THEN
		RETURN API_HTTP_STATUS_CODE_OK;
	END IF;

	IF chReasonCode = API_REASON_CODE_REQUEST_REJECTED THEN
		RETURN API_HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY;
	END IF;

	RETURN intMappedHTTPStatusCode;
END;

--  Returns a descriptive message for the given code.
CREATE FUNCTION lookupReasonMessage (IN reasonCode CHARACTER) RETURNS CHARACTER
BEGIN
	DECLARE chReasonMessage CHARACTER  NULL;
	
	IF reasonCode = API_REASON_CODE_REQUEST_ACCEPTED THEN
		SET chReasonMessage = API_REASON_MESSAGE_REQUEST_ACCEPTED;
	END IF;
	IF reasonCode = API_REASON_CODE_REQUEST_REJECTED THEN
		SET chReasonMessage =  API_REASON_MESSAGE_REQUEST_REJECTED;
	END IF;
	
	IF reasonCode = API_REASON_CODE_TRANSACTION_ACCEPTED THEN
		SET chReasonMessage =  API_REASON_MESSAGE_TRANSACTION_ACCEPTED;
	END IF;
	IF reasonCode = API_REASON_CODE_TRANSACTION_REJECTED THEN
		SET chReasonMessage =  API_REASON_MESSAGE_TRANSACTION_REJECTED;
	END IF;
	
	-- Fallback on the common reason codes and messages. Applies when API_OPTIMIZATION is true.
	RETURN COALESCE(chReasonMessage, 	com.icici.xpress_connect.common.api.lookupReasonMessage(reasonCode));
END;