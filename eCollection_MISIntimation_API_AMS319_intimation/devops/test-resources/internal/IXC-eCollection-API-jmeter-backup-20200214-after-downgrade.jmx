<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IXC-eCollectionAPI-pristine-pre-20200214" enabled="true">
      <stringProp name="TestPlan.comments">Original pristine API. Before API was downgraded with changes to the boolean and integer datatypes for certain fields to suit Profunds were made. [13-Feb-2020]</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ixc_api_gateway_mode" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_gateway_mode</stringProp>
            <stringProp name="Argument.value">false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_endpoint_hostname" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_endpoint_hostname</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_endpoint_hostname, localhost)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_endpoint_port_number" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_endpoint_port_number</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_endpoint_port_number, 7800)}</stringProp>
            <stringProp name="Argument.desc">Node: Local: 8080, Container: 8835 (V 3.5), 8834 (V 3.4), 8833 (V 3.3), IBM ACE Local: 7800</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_base_uri" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_base_uri</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_base_uri, api/eCollection/mis)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Unused</stringProp>
          </elementProp>
          <elementProp name="ixc_api_intimation_uri" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_intimation_uri</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, /api/eCollection/mis/EAF2/intimation/intimate)}</stringProp>
            <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/intimate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_refund_intimation_uri" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_refund_intimation_uri</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_refund_intimation_uri, /api/eCollection/mis/refund-intimate)}</stringProp>
            <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/refund-intimate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_batch_intimation_uri" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_batch_intimation_uri</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_batch_intimation_uri, /api-gateway/profunds)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api/eCollection/mis/&lt;Client Code&gt;/&lt;Message Type&gt;/batch-initmate</stringProp>
          </elementProp>
          <elementProp name="ixc_api_batch_refund_intimation_uri" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_batch_refund_intimation_uri</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_batch_refund_intimation_uri, /api-gateway/profunds)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api/eCollection/mis/&lt;Client Code&gt;/&lt;Message Type&gt;/batch-initmate-refund</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_organization_code" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_organization_code</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_organization_code, ACME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_code" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_code</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_code, ACME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_project_id" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_project_id</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_project_id, 00000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_subscription_product_name" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_subscription_product_name</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_subscription_product_name, eCollection/mis)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_subscription_business_scenario_name" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_subscription_business_scenario_name</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_subscription_business_scenario_name, remitter-validation-intermediary-account)}</stringProp>
            <stringProp name="Argument.desc">Valid Values: Intimation, Remitter-Validation-Current-Account, Remitter-Validation-Intermediary-Account, Remitter-Validation-2-Levels, Refund-Intimation</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_virtual_account_number" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_virtual_account_number</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_virtual_account_number, 0000000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_deployment_build_id" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_deployment_build_id</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_deployment_build_id, NA)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_deployment_target_env" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_deployment_target_env</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_deployment_target_env, NA)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_client_deployment_validation_userId" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_client_deployment_validation_userId</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_client_deployment_validation_userId, ixc_system)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_user_thread_count" elementType="Argument">
            <stringProp name="Argument.name">ixc_user_thread_count</stringProp>
            <stringProp name="Argument.value">${__P(ixc_user_thread_count, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_user_thread_ramp_up_period_secs" elementType="Argument">
            <stringProp name="Argument.name">ixc_user_thread_ramp_up_period_secs</stringProp>
            <stringProp name="Argument.value">${__P(ixc_user_thread_ramp_up_period_secs, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_test_reports_basepath" elementType="Argument">
            <stringProp name="Argument.name">ixc_test_reports_basepath</stringProp>
            <stringProp name="Argument.value">${__P(ixc_test_reports_basepath,.)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_test_reports_nameprefix" elementType="Argument">
            <stringProp name="Argument.name">ixc_test_reports_nameprefix</stringProp>
            <stringProp name="Argument.value">${__P(ixc_test_reports_nameprefix, eCollection-mis-ACME-BVR)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">eCollection-mis-build-verification-report</stringProp>
          </elementProp>
          <elementProp name="ixc_api_build_id" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_build_id</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_build_id, CONFIGRITY)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_testdata_filename_intimation" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_testdata_filename_intimation</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_testdata_filename_intimation, eCollection-jmeter-build-verification-testdata-intimation.csv)}</stringProp>
            <stringProp name="Argument.desc">eCollection-jmeter-build-verification-testdata-intimation.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_testdata_filename_refund_intimation" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_testdata_filename_refund_intimation</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_testdata_filename_refund_intimation, eCollection-jmeter-build-verification-testdata-refund-intimation.csv)}</stringProp>
            <stringProp name="Argument.desc">eCollection-jmeter-build-verification-testdata-refund-intimation.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ixc_api_product_type" elementType="Argument">
            <stringProp name="Argument.name">ixc_api_product_type</stringProp>
            <stringProp name="Argument.value">${__P(ixc_api_product_type, eCollection/mis)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connect_timeout_ms" elementType="Argument">
            <stringProp name="Argument.name">connect_timeout_ms</stringProp>
            <stringProp name="Argument.value">${__P(connect_timeout_ms, 2000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="response_timeout_ms" elementType="Argument">
            <stringProp name="Argument.name">response_timeout_ms</stringProp>
            <stringProp name="Argument.value">${__P(response_timeout_ms, 5000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">/api/eCollection/mis*</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Error-Simulation" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="401" elementType="Argument">
            <stringProp name="Argument.name">401</stringProp>
            <stringProp name="Argument.value">Invalid Client Code</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="402" elementType="Argument">
            <stringProp name="Argument.name">402</stringProp>
            <stringProp name="Argument.value">Invalid VAN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="403" elementType="Argument">
            <stringProp name="Argument.name">403</stringProp>
            <stringProp name="Argument.value">Client Code, VAN Mismatch:</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="404" elementType="Argument">
            <stringProp name="Argument.name">404</stringProp>
            <stringProp name="Argument.value">Duplicate Transaction ID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="405" elementType="Argument">
            <stringProp name="Argument.name">405</stringProp>
            <stringProp name="Argument.value">Client Account Number Mismatch</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="406" elementType="Argument">
            <stringProp name="Argument.name">406</stringProp>
            <stringProp name="Argument.value">Invalid Sender IFSC Code</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="407" elementType="Argument">
            <stringProp name="Argument.name">407</stringProp>
            <stringProp name="Argument.value">Client IFSC code note found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="408" elementType="Argument">
            <stringProp name="Argument.name">408</stringProp>
            <stringProp name="Argument.value">Client Code not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="409" elementType="Argument">
            <stringProp name="Argument.name">409</stringProp>
            <stringProp name="Argument.value">Payment method not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="410" elementType="Argument">
            <stringProp name="Argument.name">410</stringProp>
            <stringProp name="Argument.value">Payment method is not valid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="431" elementType="Argument">
            <stringProp name="Argument.name">431</stringProp>
            <stringProp name="Argument.value">Remitter Account Number not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="432" elementType="Argument">
            <stringProp name="Argument.name">432</stringProp>
            <stringProp name="Argument.value">Refund rejection reason not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="433" elementType="Argument">
            <stringProp name="Argument.name">433</stringProp>
            <stringProp name="Argument.value">Refund status is invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="434" elementType="Argument">
            <stringProp name="Argument.name">434</stringProp>
            <stringProp name="Argument.value">Refund code not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="435" elementType="Argument">
            <stringProp name="Argument.name">435</stringProp>
            <stringProp name="Argument.value">Refund rejection reason not found</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Transaction-ID-Test-Cases" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="transaction_id_accept" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_accept</stringProp>
            <stringProp name="Argument.value">202020000441</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
          </elementProp>
          <elementProp name="transaction_id_reject" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_reject</stringProp>
            <stringProp name="Argument.value">202020000442</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Internal_Server_Error" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Internal_Server_Error</stringProp>
            <stringProp name="Argument.value">202020000500</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Bad_Gateway" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Bad_Gateway</stringProp>
            <stringProp name="Argument.value">202020000502</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Service_Unavailable" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Service_Unavailable</stringProp>
            <stringProp name="Argument.value">202020000503</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_5XX_Gateway_Timeout" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_5XX_Gateway_Timeout</stringProp>
            <stringProp name="Argument.value">202020000504</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_client_code" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_client_code</stringProp>
            <stringProp name="Argument.value">202020000401</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only. Client Code Invalid response from the client service itself.</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_virtual_account_number" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_virtual_account_number</stringProp>
            <stringProp name="Argument.value">202020000402</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_client_code_virtual_account_number_mismatch" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_client_code_virtual_account_number_mismatch</stringProp>
            <stringProp name="Argument.value">202020000403</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_duplicate_transaction_id" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_duplicate_transaction_id</stringProp>
            <stringProp name="Argument.value">202020000404</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_sender_ifsc_code" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_sender_ifsc_code</stringProp>
            <stringProp name="Argument.value">202020000406</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_invalid_remitter_account_number" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_invalid_remitter_account_number</stringProp>
            <stringProp name="Argument.value">202020000431</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_rejection_reason_not_provided" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_rejection_reason_not_provided</stringProp>
            <stringProp name="Argument.value">202020000432</stringProp>
            <stringProp name="Argument.desc">Profund Mock Simulation Only (Warning)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iso8601_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rfc822_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timeshift_datetime_format" elementType="Argument">
            <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
            <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InvalidStatusCode" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InvalidStatusCode</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}401</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InvalidVAN" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InvalidVAN</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}402</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_ClientCodeVANMismatch" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_ClientCodeVANMismatch</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}403</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RemitterAccountNumberNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RemitterAccountNumberNotFound</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}399</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RefundRejectionReasonNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RefundRejectionReasonNotFound</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}397</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_RefundCodeNotFound" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_RefundCodeNotFound</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}405</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_InternalServerError" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_InternalServerError</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_BadGateway" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_BadGateway</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}502</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_ServiceUnavailable" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_ServiceUnavailable</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}503</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_GatewayTimeout" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_GatewayTimeout</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}504</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_neft" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_neft</stringProp>
            <stringProp name="Argument.value">NEFT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_rtgs" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_rtgs</stringProp>
            <stringProp name="Argument.value">RTGS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_ft" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_ft</stringProp>
            <stringProp name="Argument.value">FT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payment_mode_imps" elementType="Argument">
            <stringProp name="Argument.name">payment_mode_imps</stringProp>
            <stringProp name="Argument.value">IMPS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_utr" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_utr</stringProp>
            <stringProp name="Argument.value">UTR</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_rrn" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_rrn</stringProp>
            <stringProp name="Argument.value">RRN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transaction_id_type_tranId" elementType="Argument">
            <stringProp name="Argument.name">transaction_id_type_tranId</stringProp>
            <stringProp name="Argument.value">TRANID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="internal_test_run_id" elementType="Argument">
            <stringProp name="Argument.name">internal_test_run_id</stringProp>
            <stringProp name="Argument.value">${__time(yyMMdd-HHmm,)}-${__RandomString(8,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">${__RandomString(20,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Intimation-MainThreadGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="API-Gateway-Context-Adder" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">var api_gateway = vars.get(&quot;ixc_api_gateway_mode&quot;);

if(api_gateway == &quot;true&quot;) {
	var request_body = sampler.getArguments().getArgument(0).getValue();
	var request_json = JSON.parse(request_body);
	
	var product_type = vars.get(&quot;ixc_api_product_type&quot;);
	var message_type = vars.get(&quot;ixc_api_subscription_business_scenario_name&quot;);
	var operation_name = &quot;intimate&quot;;
	/*
	request_json.application_context = {
		&quot;message_type&quot; : message_type,
		&quot;operation_name&quot; : operation_name
	};
	*/

	request_json.product_type = product_type;
	request_json.message_type = message_type;
	request_json.operation_name = operation_name;
	
	sampler.getArguments().getArgument(0).setValue(JSON.stringify(request_json,null,1));
	
	// log.info(JSON.stringify(request_json, null, 4));	
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default-Business-Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">EAF2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode" elementType="Argument">
              <stringProp name="Argument.name">payment_mode</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="DevOps-HTTP-Header-Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">IXC-DevOps-Test-Indicator</stringProp>
              <stringProp name="Header.value">true</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">IXC-DevOps-Test-Run-Id</stringProp>
              <stringProp name="Header.value">${__P(test_run_id, ${internal_test_run_id})}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">IXC-DevOps-Test-Sample-Id</stringProp>
              <stringProp name="Header.value">${__P(test_sample_id, ${__counter(FALSE,)})}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Litmus" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Forbidden Client Code" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Without Test Indicator" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request - Without Test Indicator" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Invalid VAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_invalid_virtual_account_number}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Client Data Extension" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Client Data Extension" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Invalid VAN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_invalid_virtual_account_number}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-NEFT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-RTGS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-IMPS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-FT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-Remote Client Service 5XX Simulation" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Service Unavailable Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Service_Unavailable}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt- No Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request Timestamp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No API Version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${invalid_payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Currency" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;USD&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode-Transaction ID Type" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;jane.doe@nobody.ibm.com&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: &quot;email&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${transaction_datetime}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request-ICICI-UAT-20200210-1040" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;api_version&quot;:&quot;1.0&quot;,&#xd;
&quot;request_id&quot;:&quot;PRO202002070000045&quot;,&#xd;
&quot;request_datetime&quot;:&quot;2020-02-07T18:13:07:610+05:30&quot;,&#xd;
&quot;sender_system_id&quot;:&quot;profunds&quot;,&#xd;
&quot;sender_user_id&quot;:&quot;raman.kumar@icicibank.com&quot;,&#xd;
&quot;sender_user_id_type&quot;:&quot;email&quot;,&#xd;
&quot;request_priority&quot;:1,&#xd;
&quot;resent_indicator&quot;:&quot;false&quot;,&#xd;
&quot;original_request_id&quot;:&quot;&quot;,&#xd;
&quot;original_request_datetime&quot;:&quot;&quot;,&#xd;
&quot;original_sender_system_id&quot;:&quot;&quot;,&#xd;
&quot;original_sender_user_id&quot;:&quot;&quot;,&#xd;
&quot;original_sender_user_id_type&quot;:&quot;&quot;,&#xd;
&quot;original_request_priority&quot;:,&#xd;
&quot;test_indicator&quot;:&quot;false&quot;,&#xd;
&quot;client_code&quot;:&quot;ADAN&quot;,&#xd;
&quot;virtual_account_number&quot;:&quot;ADAN2541845659&quot;,&#xd;
&quot;transaction_amount&quot;:&quot;600000&quot;,&#xd;
&quot;currency_code&quot;:&quot;null&quot;,&#xd;
&quot;payment_mode&quot;:&quot;NEFT&quot;,&#xd;
&quot;transaction_id&quot;:&quot;N85942515569&quot;,&#xd;
&quot;transaction_id_type&quot;:&quot;ECOLL&quot;,&#xd;
&quot;transaction_datetime&quot;:&quot;07022020&quot;,&#xd;
&quot;sender_name&quot;:&quot;MUNMUN CHAKRABORTTY&quot;,&#xd;
&quot;sender_account_number&quot;:&quot;916010023040835&quot;,&#xd;
&quot;sender_bank_name&quot;:&quot;AXIS BANK&quot;,&#xd;
&quot;sender_ifsc_code&quot;:&quot;UTIB0000148&quot;,&#xd;
&quot;client_account_number&quot;:&quot;000705000255&quot;,&#xd;
&quot;informational_message&quot;:&quot;URGENT&quot;,&#xd;
&quot;client_ext_data&quot;:{&quot;profunds_int_request_id&quot;:&quot;PRO202002071813076&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only-Downgrade" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Resent-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: false,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request -Resent-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Test-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Test-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Original Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Resent-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;yes&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request -Resent-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;yes&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Test-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;no&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Test-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;no&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Original Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${ixc_api_build_id}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Test Results-Collator" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ixc_api_endpoint_hostname" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_endpoint_hostname</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_endpoint_hostname, localhost)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_elasticsearch_endpoint_uri_jmeter_testreport" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_elasticsearch_endpoint_uri_jmeter_testreport</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_elasticsearch_endpoint_uri_jmeter_testreport, http://localhost:port/path/index)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_subscription_product_name" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_subscription_product_name</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_subscription_product_name, eCollection)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_elasticsearch_endpoint_uri_operational" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_elasticsearch_endpoint_uri_operational</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_elasticsearch_endpoint_uri_operational, http://localhost:port/path/index)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_gateway_mode" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_gateway_mode</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_virtual_account_number" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_virtual_account_number</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_virtual_account_number, 0000000000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_deployment_target_env" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_deployment_target_env</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_deployment_target_env, NA)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_subscription_business_scenario_name" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_subscription_business_scenario_name</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_subscription_business_scenario_name, remitter-validation-intermediary-account)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_deployment_build_id" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_deployment_build_id</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_deployment_build_id, NA)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_endpoint_port_number" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_endpoint_port_number</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_endpoint_port_number, 7800)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_base_uri" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_base_uri</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_base_uri, api/eCollection/mis)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_organization_code" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_organization_code</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_organization_code, ADAN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_elasticsearch_endpoint_uri_business" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_elasticsearch_endpoint_uri_business</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_elasticsearch_endpoint_uri_business, http://localhost:port/path/index)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_code" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_code</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_code, ADAN)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_project_id" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_project_id</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_project_id, 00000000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ixc_api_client_deployment_validation_userId" elementType="Argument">
                <stringProp name="Argument.name">ixc_api_client_deployment_validation_userId</stringProp>
                <stringProp name="Argument.value">${__P(ixc_api_client_deployment_validation_userId, ixc_system)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.icici.xpress_connect.api.jmeter.test.IXC_HTTP_API_CommonJMeterBackendListener</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Refund Intimation-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="API-Gateway-Context-Adder" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">var api_gateway = vars.get(&quot;ixc_api_gateway_mode&quot;);

if(api_gateway == &quot;true&quot;) {
	var request_body = sampler.getArguments().getArgument(0).getValue();
	var request_json = JSON.parse(request_body);
	
	var product_type = vars.get(&quot;ixc_api_product_type&quot;);
	var message_type = vars.get(&quot;ixc_api_subscription_business_scenario_name&quot;);
	var operation_name = &quot;refund-intimate&quot;;
	/*
	request_json.application_context = {
		&quot;message_type&quot; : message_type,
		&quot;operation_name&quot; : operation_name
	};
	*/

	request_json.product_type = product_type;
	request_json.message_type = message_type;
	request_json.operation_name = operation_name;
	
	sampler.getArguments().getArgument(0).setValue(JSON.stringify(request_json,null,1));
	
	// log.info(JSON.stringify(request_json, null, 4));	
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default-Business-Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ACME</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode" elementType="Argument">
              <stringProp name="Argument.name">payment_mode</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default-Refund-Business-Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="remitter_account_number" elementType="Argument">
              <stringProp name="Argument.name">remitter_account_number</stringProp>
              <stringProp name="Argument.value">01802204033366</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cms_reference_number" elementType="Argument">
              <stringProp name="Argument.name">cms_reference_number</stringProp>
              <stringProp name="Argument.value">CMS-202001-3899</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_paid" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_paid</stringProp>
              <stringProp name="Argument.value">P</stringProp>
              <stringProp name="Argument.desc">P if the refund was Paid. C if the refund was Cancelled.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_cancelled" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_cancelled</stringProp>
              <stringProp name="Argument.value">C</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_code" elementType="Argument">
              <stringProp name="Argument.name">refund_code</stringProp>
              <stringProp name="Argument.value">ACMER</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_rejection_code" elementType="Argument">
              <stringProp name="Argument.name">refund_rejection_code</stringProp>
              <stringProp name="Argument.value">XC00701I</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Litmus" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Forbidden Client Code" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Client Data Extension" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Application Context" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Rejection Reason" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_rejection_reason_not_provided}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-NEFT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-RTGS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-IMPS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-FT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-Remote Client Service 5XX Simulation" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_5XX_Internal_Server_Error}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt- No Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;client_code&quot;: &quot;${unsubscribed_client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request Timestamp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No API Version" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${invalid_payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Currency" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;USD&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode-Transaction ID Type" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;jane.doe@nobody.ibm.com&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: &quot;email&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${transaction_datetime}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;,  &#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Refund Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-No Rejection Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Empty Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Broken Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;&#xd;
  { }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Invalid-Requests-IBM-ACE-Only-Downgrade" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Resent-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;false&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request -Resent-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Test-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Test-Indicator-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Original Request Priority-DataType-Mismatch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Resent-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;yes&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request -Resent-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;yes&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Test-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;no&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Test-Indicator-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;no&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Original Request Priority-Bad Value" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;X&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Mixed Requests SOAP / XML (Web Services)" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">http://www.icicibank.com/api/acme/refund-intimation</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Refund Paid" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Refund Paid" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;	</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Refund Cancelled" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_cancelled}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_rejection_code&gt;${refund_rejection_code}&lt;/refund_rejection_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Refund Cancelled" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_cancelled}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_rejection_code&gt;${refund_rejection_code}&lt;/refund_rejection_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;	</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Service Unavailable" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Service Unavailable" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Forbidden Client Code" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${unsubscribed_client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="No Request ID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invalid Payment Mode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${invalid_payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Resent Indicator-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Refund Status-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_cancelled}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_code&gt;${client_code}R&lt;/refund_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inconsistent Refund Status-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;refund_intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	   &lt;remitter_account_number&gt;${remitter_account_number}&lt;/remitter_account_number&gt;&#xd;
	   &lt;cms_reference_number&gt;${cms_reference_number}&lt;/cms_reference_number&gt;&#xd;
	   &lt;refund_payment_status&gt;${refund_payment_status_paid}&lt;/refund_payment_status&gt;&#xd;
	   &lt;refund_rejection_code&gt;${refund_rejection_code}&lt;/refund_rejection_code&gt;&#xd;
	&lt;/refund_intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Intimation-Batch-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="API-Gateway-Context-Adder" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">var api_gateway = vars.get(&quot;ixc_api_gateway_mode&quot;);

if(api_gateway == &quot;true&quot;) {
	var request_body = sampler.getArguments().getArgument(0).getValue();
	var request_json = JSON.parse(request_body);
	
	var message_type = vars.get(&quot;ixc_api_subscription_business_scenario_name&quot;);
	var operation_name = &quot;batch-intimate&quot;;
	
	request_json.application_context = {
		&quot;message_type&quot; : message_type,
		&quot;operation_name&quot; : operation_name
	};
	
	sampler.getArguments().getArgument(0).setValue(JSON.stringify(request_json,null,1));
	
	log.info(JSON.stringify(request_json, null, 4));	
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_code_1</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 1 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_1</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">currency_code_1</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_1</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_1</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_1</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_1</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_1</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_1</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_1</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_1</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_name_1</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_1</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_1</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_1</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_1</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_1</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1_1</stringProp>
              <stringProp name="Argument.value">Narration 1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_1" elementType="Argument">
              <stringProp name="Argument.name">narration_2_1</stringProp>
              <stringProp name="Argument.value">Narration 2_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_1" elementType="Argument">
              <stringProp name="Argument.name">informational_message_1</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_code_2</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 2 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_2</stringProp>
              <stringProp name="Argument.value">ARCC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">currency_code_2</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_2</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_2</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_2</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_2</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_2</stringProp>
              <stringProp name="Argument.value">ADAN031192388</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_2</stringProp>
              <stringProp name="Argument.value">288.88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_2</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_2</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_name_2</stringProp>
              <stringProp name="Argument.value">Khal Drogo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_2</stringProp>
              <stringProp name="Argument.value">0222107666600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_2</stringProp>
              <stringProp name="Argument.value">Canara Bank</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">CNRB0000222</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_2</stringProp>
              <stringProp name="Argument.value">Adani Metals &amp; Ore Mining</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_2</stringProp>
              <stringProp name="Argument.value">0081202280776</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_2</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">ICIC0000009</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_2" elementType="Argument">
              <stringProp name="Argument.name">narration_1_2</stringProp>
              <stringProp name="Argument.value">Narration 1_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2_2</stringProp>
              <stringProp name="Argument.value">Narration 2_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_2" elementType="Argument">
              <stringProp name="Argument.name">informational_message_2</stringProp>
              <stringProp name="Argument.value">A quick brown dog jumped over the lazy fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_code_3</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 3 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_3</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">currency_code_3</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_3</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_3</stringProp>
              <stringProp name="Argument.value">IMPS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_3</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_3</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_3</stringProp>
              <stringProp name="Argument.value">ADANX031192377</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_3</stringProp>
              <stringProp name="Argument.value">28888.44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_3</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_3</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_name_3</stringProp>
              <stringProp name="Argument.value">John Snow</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_3</stringProp>
              <stringProp name="Argument.value">0444007844444</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_3</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">HDFC0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_3</stringProp>
              <stringProp name="Argument.value">Adani Logistics</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_3</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_3</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">ICIC0000007</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_3" elementType="Argument">
              <stringProp name="Argument.name">narration_1_3</stringProp>
              <stringProp name="Argument.value">Narration 1_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_3" elementType="Argument">
              <stringProp name="Argument.name">narration_2_3</stringProp>
              <stringProp name="Argument.value">Narration 2_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_3" elementType="Argument">
              <stringProp name="Argument.name">informational_message_3</stringProp>
              <stringProp name="Argument.value">A lazy brown fox jumped over the quick dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_code_4</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 4 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_4</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">currency_code_4</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_4</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_4</stringProp>
              <stringProp name="Argument.value">FT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_4</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_4</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_4</stringProp>
              <stringProp name="Argument.value">ADANX031192396</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_4</stringProp>
              <stringProp name="Argument.value">4544448488.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_4</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_4</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_name_4</stringProp>
              <stringProp name="Argument.value">Daenerys Targaryen</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_4</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_4</stringProp>
              <stringProp name="Argument.value">Bank Of Baroda</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">BOBN005555</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_4</stringProp>
              <stringProp name="Argument.value">Adani Heavy Industries</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_4</stringProp>
              <stringProp name="Argument.value">001110222226</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_4</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">ICIC0000005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_4" elementType="Argument">
              <stringProp name="Argument.name">narration_1_4</stringProp>
              <stringProp name="Argument.value">Narration 1_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_4" elementType="Argument">
              <stringProp name="Argument.name">narration_2_4</stringProp>
              <stringProp name="Argument.value">Narration 2_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_4" elementType="Argument">
              <stringProp name="Argument.name">informational_message_4</stringProp>
              <stringProp name="Argument.value">A lazy brown dog jumped over the quick fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD END ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-Split-OK" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split-Multi Status" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_BadGateway}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_BadGateway}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_GatewayTimeout}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InternalServerError}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InternalServerError}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-1-Bad-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidVAN}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-3-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;&#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Refund Intimation-Batch-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="API-Gateway-Context-Adder" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">var api_gateway = vars.get(&quot;ixc_api_gateway_mode&quot;);

if(api_gateway == &quot;true&quot;) {
	var request_body = sampler.getArguments().getArgument(0).getValue();
	var request_json = JSON.parse(request_body);
	
	var message_type = vars.get(&quot;ixc_api_subscription_business_scenario_name&quot;);
	var operation_name = &quot;batch-refund-intimate&quot;;
	
	request_json.application_context = {
		&quot;message_type&quot; : message_type,
		&quot;operation_name&quot; : operation_name
	};
	
	sampler.getArguments().getArgument(0).setValue(JSON.stringify(request_json,null,1));
	
	log.info(JSON.stringify(request_json, null, 4));	
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_code_1</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 1 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_1</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">currency_code_1</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_1</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_1</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_1</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_1" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_1</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_1</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_1</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_1</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_1" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_1</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_name_1</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_1</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_1</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_1</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_1" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_1</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_1" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_1</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_1" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_1</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1_1</stringProp>
              <stringProp name="Argument.value">Narration 1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_1" elementType="Argument">
              <stringProp name="Argument.name">narration_2_1</stringProp>
              <stringProp name="Argument.value">Narration 2_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_1" elementType="Argument">
              <stringProp name="Argument.name">informational_message_1</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_code_2</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 2 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_2</stringProp>
              <stringProp name="Argument.value">ARCC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">currency_code_2</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_2</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_2</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_2</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_2" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_2</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_2</stringProp>
              <stringProp name="Argument.value">ADAN031192388</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_2</stringProp>
              <stringProp name="Argument.value">288.88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_2</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_2" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_2</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_name_2</stringProp>
              <stringProp name="Argument.value">Khal Drogo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_2</stringProp>
              <stringProp name="Argument.value">0222107666600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_2</stringProp>
              <stringProp name="Argument.value">Canara Bank</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">CNRB0000222</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_2</stringProp>
              <stringProp name="Argument.value">Adani Metals &amp; Ore Mining</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_2" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_2</stringProp>
              <stringProp name="Argument.value">0081202280776</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_2" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_2</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_2" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_2</stringProp>
              <stringProp name="Argument.value">ICIC0000009</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_2" elementType="Argument">
              <stringProp name="Argument.name">narration_1_2</stringProp>
              <stringProp name="Argument.value">Narration 1_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2_2</stringProp>
              <stringProp name="Argument.value">Narration 2_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_2" elementType="Argument">
              <stringProp name="Argument.name">informational_message_2</stringProp>
              <stringProp name="Argument.value">A quick brown dog jumped over the lazy fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_code_3</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 3 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_3</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">currency_code_3</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_3</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_3</stringProp>
              <stringProp name="Argument.value">IMPS</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_3</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_3" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_3</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_3</stringProp>
              <stringProp name="Argument.value">ADANX031192377</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_3</stringProp>
              <stringProp name="Argument.value">28888.44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_3</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_3" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_3</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_name_3</stringProp>
              <stringProp name="Argument.value">John Snow</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_3</stringProp>
              <stringProp name="Argument.value">0444007844444</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_3</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">HDFC0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_3</stringProp>
              <stringProp name="Argument.value">Adani Logistics</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_3" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_3</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_3" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_3</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_3" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_3</stringProp>
              <stringProp name="Argument.value">ICIC0000007</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_3" elementType="Argument">
              <stringProp name="Argument.name">narration_1_3</stringProp>
              <stringProp name="Argument.value">Narration 1_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_3" elementType="Argument">
              <stringProp name="Argument.name">narration_2_3</stringProp>
              <stringProp name="Argument.value">Narration 2_3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_3" elementType="Argument">
              <stringProp name="Argument.name">informational_message_3</stringProp>
              <stringProp name="Argument.value">A lazy brown fox jumped over the quick dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_code_4</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD # 4 ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code_4</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">currency_code_4</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code_4</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">payment_mode_4</stringProp>
              <stringProp name="Argument.value">FT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode_4</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode_4" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode_4</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number_4</stringProp>
              <stringProp name="Argument.value">ADANX031192396</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount_4</stringProp>
              <stringProp name="Argument.value">4544448488.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_4</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type_4" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type_4</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_name_4</stringProp>
              <stringProp name="Argument.value">Daenerys Targaryen</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number_4</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name_4</stringProp>
              <stringProp name="Argument.value">Bank Of Baroda</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">BOBN005555</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_name_4</stringProp>
              <stringProp name="Argument.value">Adani Heavy Industries</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number_4" elementType="Argument">
              <stringProp name="Argument.name">client_account_number_4</stringProp>
              <stringProp name="Argument.value">001110222226</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name_4" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name_4</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code_4" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code_4</stringProp>
              <stringProp name="Argument.value">ICIC0000005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1_4" elementType="Argument">
              <stringProp name="Argument.name">narration_1_4</stringProp>
              <stringProp name="Argument.value">Narration 1_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2_4" elementType="Argument">
              <stringProp name="Argument.name">narration_2_4</stringProp>
              <stringProp name="Argument.value">Narration 2_4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message_4" elementType="Argument">
              <stringProp name="Argument.name">informational_message_4</stringProp>
              <stringProp name="Argument.value">A lazy brown dog jumped over the quick fox !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">********** ********** ********** INTIMATION RECORD END ********** ********** **********</stringProp>
            </elementProp>
            <elementProp name="iso8601_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">iso8601_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rfc822_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">rfc822_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeshift_datetime_format" elementType="Argument">
              <stringProp name="Argument.name">timeshift_datetime_format</stringProp>
              <stringProp name="Argument.value">yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Refund Business Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="remitter_account_number" elementType="Argument">
              <stringProp name="Argument.name">remitter_account_number</stringProp>
              <stringProp name="Argument.value">01802204033366</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cms_reference_number" elementType="Argument">
              <stringProp name="Argument.name">cms_reference_number</stringProp>
              <stringProp name="Argument.value">CMS-202001-3899</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_paid" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_paid</stringProp>
              <stringProp name="Argument.value">P</stringProp>
              <stringProp name="Argument.desc">P if the refund was Paid. C if the refund was Cancelled.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_payment_status_cancelled" elementType="Argument">
              <stringProp name="Argument.name">refund_payment_status_cancelled</stringProp>
              <stringProp name="Argument.value">C</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_code" elementType="Argument">
              <stringProp name="Argument.name">refund_code</stringProp>
              <stringProp name="Argument.value">ADANR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="refund_rejection_code" elementType="Argument">
              <stringProp name="Argument.name">refund_rejection_code</stringProp>
              <stringProp name="Argument.value">XC00701I</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ADAN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-Split-OK" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;&#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: true,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;	  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;&#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Batch-Requests-No Split-Multi Status" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default Business Field Data-Multi Status" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="transaction_id_InvalidStatusCode" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InvalidStatusCode</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}401</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_InvalidVAN" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InvalidVAN</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}402</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_ClientCodeVANMismatch" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_ClientCodeVANMismatch</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}403</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RemitterAccountNumberNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RemitterAccountNumberNotFound</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}399</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RefundRejectionReasonNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RefundRejectionReasonNotFound</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}397</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_RefundCodeNotFound" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_RefundCodeNotFound</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}405</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_InternalServerError" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_InternalServerError</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_BadGateway" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_BadGateway</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}502</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_ServiceUnavailable" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_ServiceUnavailable</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}503</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="transaction_id_GatewayTimeout" elementType="Argument">
                <stringProp name="Argument.name">transaction_id_GatewayTimeout</stringProp>
                <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}504</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;	  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Single Record-No Split-${transaction_id_BadGateway}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_BadGateway}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_GatewayTimeout}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_3}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InvalidStatusCode}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Single Record-No Split-${transaction_id_InternalServerError}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InternalServerError}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-2-No Split-Good-1-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-1-Bad-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidVAN}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-2-Bad-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_InvalidStatusCode}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Multiple Records-4-No Split-Good-3-Bad-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;split_response_acceptable_indicator&quot;: false,  &#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;intimation_data&quot;: [&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_1}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_1}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_1},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_1}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_1}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_1}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_1}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_1}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_1}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_1}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_1}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_1}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_1}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_1}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_1}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_1}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_1}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_1}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_2}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_2}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_2},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_2}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_2}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_2}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_2}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_2}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_2}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_2}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_2}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_2}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_2}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_2}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_2}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_2}&quot;,&#xd;
	  &quot;narration_2&quot;: &quot;${narration_2_2}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_2}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_3}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_3}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_3},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_3}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_3}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_ServiceUnavailable}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_3}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_3}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_3}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_3}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_3}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_3}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_3}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_3}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_3}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_3}&quot;,&#xd;
	  &quot;narration_3&quot;: &quot;${narration_3_3}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_3}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	},&#xd;
	{&#xd;
	  &quot;application_context&quot; : {},&#xd;
	  &quot;client_code&quot;: &quot;${client_code_4}&quot;,&#xd;
	  &quot;virtual_account_number&quot;: &quot;${virtual_account_number_4}&quot;,&#xd;
	  &quot;transaction_amount&quot;: ${transaction_amount_4},&#xd;
	  &quot;currency_code&quot;: &quot;${currency_code_4}&quot;,&#xd;
	  &quot;payment_mode&quot;: &quot;${payment_mode_4}&quot;,&#xd;
	  &quot;transaction_id&quot;: &quot;${transaction_id_4}&quot;,&#xd;
	  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_4}&quot;,&#xd;
	  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
	  &quot;sender_name&quot;: &quot;${sender_name_4}&quot;,&#xd;
	  &quot;sender_account_number&quot;: &quot;${sender_account_number_4}&quot;,&#xd;
	  &quot;sender_bank_name&quot;: &quot;${sender_bank_name_4}&quot;,&#xd;
	  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code_4}&quot;,&#xd;
	  &quot;client_account_name&quot;: &quot;${client_account_name_4}&quot;,&#xd;
	  &quot;client_account_number&quot;: &quot;${client_account_number_4}&quot;,&#xd;
	  &quot;client_bank_name&quot;: &quot;${client_bank_name_4}&quot;,&#xd;
	  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code_4}&quot;,&#xd;
	  &quot;narration_1&quot;: &quot;${narration_1_4}&quot;,&#xd;
	  &quot;narration_4&quot;: &quot;${narration_4_4}&quot;,&#xd;
	  &quot;informational_message&quot;: &quot;${informational_message_4}&quot;,&#xd;
	  &quot;remitter_account_number&quot;: &quot;${remitter_account_number}&quot;,&#xd;
	  &quot;cms_reference_number&quot;: &quot;${cms_reference_number}&quot;,&#xd;
	  &quot;refund_payment_status&quot;: &quot;${refund_payment_status_paid}&quot;,&#xd;
	  &quot;refund_code&quot;: &quot;${client_code}R&quot;,&#xd;
	  &quot;refund_rejection_code&quot;: &quot;${refund_rejection_code}&quot;  &#xd;
  	}&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_batch_refund_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${ixc_api_build_id}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RNVP-Intimation-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Test Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">3044</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">3044, 3045</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">30440000000000245263</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">22222.22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">ARYA STARK</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">13511000052083</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">HDFC0001351</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">RNVP Technology Pvt. Ltd.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IT-Requests" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Direct" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apiv1.i2ifunding.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">post_icici_transaction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://apiv1.i2ifunding.com/post_icici_transaction</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Phillip-Capital-Intimation-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Add API Gateway Context" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">var api_gateway = vars.get(&quot;ixc_api_gateway_mode&quot;);

if(api_gateway == &quot;true&quot;) {
	var request_body = sampler.getArguments().getArgument(0).getValue();
	var request_json = JSON.parse(request_body);
	
	var product_type = vars.get(&quot;ixc_api_product_type&quot;);
	var message_type = vars.get(&quot;ixc_api_subscription_business_scenario_name&quot;);
	var operation_name = &quot;intimate&quot;;
	/*
	request_json.application_context = {
		&quot;message_type&quot; : message_type,
		&quot;operation_name&quot; : operation_name
	};
	*/

	request_json.product_type = product_type;
	request_json.message_type = message_type;
	request_json.operation_name = operation_name;
	
	sampler.getArguments().getArgument(0).setValue(JSON.stringify(request_json,null,1));
	
	// log.info(JSON.stringify(request_json, null, 4));	
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Test Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">3044</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">3044, 3045</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">30440000000000245263</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">ARYA STARK</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">13511000052083</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">HDFC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">HDFC0001351</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Phillip Capital</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sample Requests" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCAS-First Attempt-Accept" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCAS&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCAS000405004621&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCAS-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCAS&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCAS000405004621&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PFNO-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PFNO&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PFNO623505376585&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PFNO-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PFNO&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PFNO623505376585&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCUR-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCUR&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCUR000405070637&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCUR-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCUR&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCUR000405070637&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PPCM-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PPCM&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PPCM000405009016&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PPCM-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PPCM&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PPCM000405009016&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PNCD-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PNCD&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PNCD000405116802&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PNCD-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PNCD&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PNCD000405116802&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMCX-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PMCX&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PMCX000405117510&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMXC-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PMCX&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PMCX000405117510&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PDXP-First Attempt-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PDXP&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PDXP000405005378&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PDXP-Resent Request-Accept" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PDXP&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PDXP000405005378&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCAS-First Attempt-Reject" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${__changeCase(${test_indicator},LOWER,)}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCAS&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCAS00040500462X&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PCAS-Resent Request-Reject" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;api_version&quot;: &quot;${api_version}&quot;,&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: &quot;${request_priority}&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;true&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: &quot;${original_request_priority}&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;${test_indicator}&quot;,&#xd;
  &quot;client_code&quot;: &quot;PCAS&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;PCAS00040500462X&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mock-MainThreadGroup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${ixc_user_thread_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ixc_user_thread_ramp_up_period_secs}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Default-Business-Data" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="api_version" elementType="Argument">
              <stringProp name="Argument.name">api_version</stringProp>
              <stringProp name="Argument.value">1.2.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_id</stringProp>
              <stringProp name="Argument.value">Profunds</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">sender_system_user_id</stringProp>
              <stringProp name="Argument.value">raman.kumar@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="request_priority" elementType="Argument">
              <stringProp name="Argument.name">request_priority</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_request_priority" elementType="Argument">
              <stringProp name="Argument.name">original_request_priority</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="original_sender_system_user_id" elementType="Argument">
              <stringProp name="Argument.name">original_sender_system_user_id</stringProp>
              <stringProp name="Argument.value">prachi.j@icicibank.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test_indicator" elementType="Argument">
              <stringProp name="Argument.name">test_indicator</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_code" elementType="Argument">
              <stringProp name="Argument.name">client_code</stringProp>
              <stringProp name="Argument.value">ACME</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_client_code" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_client_code</stringProp>
              <stringProp name="Argument.value">CIGN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currency_code" elementType="Argument">
              <stringProp name="Argument.name">currency_code</stringProp>
              <stringProp name="Argument.value">INR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_currency_code" elementType="Argument">
              <stringProp name="Argument.name">invalid_currency_code</stringProp>
              <stringProp name="Argument.value">USD</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="payment_mode" elementType="Argument">
              <stringProp name="Argument.name">payment_mode</stringProp>
              <stringProp name="Argument.value">NEFT</stringProp>
              <stringProp name="Argument.desc">NEFT, RTGS, IMPS, FT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invalid_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">invalid_payment_mode</stringProp>
              <stringProp name="Argument.value">CASH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="unsubscribed_payment_mode" elementType="Argument">
              <stringProp name="Argument.name">unsubscribed_payment_mode</stringProp>
              <stringProp name="Argument.value">RTGS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="virtual_account_number" elementType="Argument">
              <stringProp name="Argument.name">virtual_account_number</stringProp>
              <stringProp name="Argument.value">ADANX031192399</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_amount" elementType="Argument">
              <stringProp name="Argument.name">transaction_amount</stringProp>
              <stringProp name="Argument.value">28800.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id" elementType="Argument">
              <stringProp name="Argument.name">transaction_id</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,)}${__counter(FALSE,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="transaction_id_type" elementType="Argument">
              <stringProp name="Argument.name">transaction_id_type</stringProp>
              <stringProp name="Argument.value">UTR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_name" elementType="Argument">
              <stringProp name="Argument.name">sender_name</stringProp>
              <stringProp name="Argument.value">Tryion Lannister</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_account_number" elementType="Argument">
              <stringProp name="Argument.name">sender_account_number</stringProp>
              <stringProp name="Argument.value">0710107844276</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_bank_name" elementType="Argument">
              <stringProp name="Argument.name">sender_bank_name</stringProp>
              <stringProp name="Argument.value">SBI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sender_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">sender_ifsc_code</stringProp>
              <stringProp name="Argument.value">SBIN0000710</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_name" elementType="Argument">
              <stringProp name="Argument.name">client_account_name</stringProp>
              <stringProp name="Argument.value">Adani Petrochemicals</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_account_number" elementType="Argument">
              <stringProp name="Argument.name">client_account_number</stringProp>
              <stringProp name="Argument.value">0081202280775</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_bank_name" elementType="Argument">
              <stringProp name="Argument.name">client_bank_name</stringProp>
              <stringProp name="Argument.value">ICICI</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_ifsc_code" elementType="Argument">
              <stringProp name="Argument.name">client_ifsc_code</stringProp>
              <stringProp name="Argument.value">ICIC0000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_1" elementType="Argument">
              <stringProp name="Argument.name">narration_1</stringProp>
              <stringProp name="Argument.value">Narration 1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="narration_2" elementType="Argument">
              <stringProp name="Argument.name">narration_2</stringProp>
              <stringProp name="Argument.value">Narration 2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="informational_message" elementType="Argument">
              <stringProp name="Argument.name">informational_message</stringProp>
              <stringProp name="Argument.value">A quick brown fox jumped over the lazy dog !</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ixc_api_endpoint_hostname" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_hostname</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_hostname, localhost)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_endpoint_port_number" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_port_number</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_port_number, 9836)}</stringProp>
              <stringProp name="Argument.desc">Tomcat: Local: 8080, Container: 8836 (V 3.6), IBM ACE Local: 7800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_base_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_base_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_base_uri, api/eCollection/mis)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/intimate)}</stringProp>
              <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/intimate</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_refund_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_refund_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/intimate-refund)}</stringProp>
              <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/refund-intimate</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_batch_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_batch_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/batch-intimate)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Format:    /api/eCollection/mis/&lt;Client Code&gt;/&lt;Message Type&gt;/batch-initmate</stringProp>
            </elementProp>
            <elementProp name="ixc_api_batch_refund_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_batch_refund_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/batch-refund-intimate)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Format:    /api/eCollection/mis/&lt;Client Code&gt;/&lt;Message Type&gt;/batch-initmate-refund</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">http://localhost:8080/ixc-ecollection-profunds-api-v3.6-java-soap-webservice-0.0.1-SNAPSHOT/ws/eCollection/ACME               http://localhost:8080/</stringProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Configrity" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ACME-Message-Checksum-Algo" elementType="Argument">
              <stringProp name="Argument.name">ACME-Message-Checksum-Algo</stringProp>
              <stringProp name="Argument.value">MD5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="secure_encoding" elementType="Argument">
              <stringProp name="Argument.name">secure_encoding</stringProp>
              <stringProp name="Argument.value">base64</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP-Authorization-Manager-Basic Authentication" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">mclaren</stringProp>
              <stringProp name="Authorization.password">pa55word@1</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_refund_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">tomcat</stringProp>
              <stringProp name="Authorization.password">pa55word@1</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="lenient-checksum" elementType="Header">
                <stringProp name="Header.name">lenient-checksum-x</stringProp>
                <stringProp name="Header.value">true</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-IntegrityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">IntegrityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, IntegrityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication|IntegrityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-HeaderOnly" enabled="false">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);


String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String regexPatternStr = &quot;[\\r\\n]*&quot;;
	String replacementStr = &quot;&quot;;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	String computePayload = request;
	
	if(foundNewLines) {
		log.info(&quot;[PASS-3] Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = computePayload.replaceAll(regexPatternStr, replacementStr);
		log.info(&quot;[PASS-3] Compute Payload: [&quot; + computePayload + &quot;]&quot;);
	}
	else {
		info(&quot;[PASS-3] No change in payload.&quot;);
		// computePayload = request;
	}

	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
 	sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));
	sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	sampler.getArguments().getArgument(0).setValue(request);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-Payload-Nested" enabled="false">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);


String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String regexPatternStr = &quot;[\\r\\n]*&quot;;
	String replacementStr = &quot;&quot;;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	String computePayload = request;
	
	if(foundNewLines) {
		log.info(&quot;[PASS-3] Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = computePayload.replaceAll(regexPatternStr, replacementStr);
		log.info(&quot;[PASS-3] Compute Payload: [&quot; + computePayload + &quot;]&quot;);
	}
	else {
		info(&quot;[PASS-3] No change in payload.&quot;);
		// computePayload = request;
	}

	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
 	// sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));
	// sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	String modifiedRequest = request.substring(0, request.lastIndexOf(&quot;}&quot;));
	modifiedRequest = modifiedRequest 	+ &quot;, \&quot;client_data_ext\&quot;: { \&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue 
								+ &quot;\&quot;, \&quot;ACME-Message-Checksum-Algo\&quot; : \&quot;&quot; + algo+ &quot;\&quot;}}&quot;;
//	modifiedRequest = modifiedRequest + &quot;, \&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue + &quot;\&quot;, \&quot;ACME-Message-Checksum-Algo\&quot; : \&quot;&quot; + algo+ &quot;\&quot;}&quot;;
//	modifiedRequest = modifiedRequest + &quot;, \&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue + &quot;\&quot;}&quot;;

	sampler.getArguments().getArgument(0).setValue(modifiedRequest);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-Payload-TopLevel" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);


String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String regexPatternStr = &quot;[\\r\\n]*&quot;;
	String replacementStr = &quot;&quot;;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	String computePayload = request;
	
	if(foundNewLines) {
		log.info(&quot;[PASS-3] Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = computePayload.replaceAll(regexPatternStr, replacementStr);
		log.info(&quot;[PASS-3] Compute Payload: [&quot; + computePayload + &quot;]&quot;);
	}
	else {
		info(&quot;[PASS-3] No change in payload.&quot;);
		// computePayload = request;
	}

	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
 	// sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));
	// sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	String modifiedRequest = request.substring(0, request.lastIndexOf(&quot;}&quot;));
//	modifiedRequest = modifiedRequest 	+ &quot;, \&quot;client_data_ext\&quot;: {\&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue 
//								+ &quot;\&quot;, \&quot;ACME-Message-Checksum-Algo\&quot; : \&quot;&quot; + algo+ &quot;\&quot;}}&quot;;
//	modifiedRequest = modifiedRequest + &quot;, \&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue + &quot;\&quot;, \&quot;ACME-Message-Checksum-Algo\&quot; : \&quot;&quot; + algo+ &quot;\&quot;}&quot;;
	modifiedRequest = modifiedRequest + &quot;, \&quot;ACME-Message-Checksum\&quot; : \&quot;&quot; + hashValue + &quot;\&quot;}&quot;;

	sampler.getArguments().getArgument(0).setValue(modifiedRequest);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Client Data Extension" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Client Data Extension" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;application_context&quot; : {&#xd;
  },&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
   &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Invalid VAN" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_invalid_virtual_account_number}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert-HTTP-Status-422" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51572">422</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Fail</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_accept}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;resent_indicator&quot;: true,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&quot;,&#xd;
  &quot;original_sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;${original_sender_system_user_id}&quot;,&#xd;
  &quot;original_request_priority&quot;: ${original_request_priority},&#xd;
  &quot;test_indicator&quot;: ${test_indicator},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id_reject}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-NEFT" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-RTGS" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_rtgs}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-IMPS" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_imps}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_rrn}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Valid Payment Mode-Transaction ID Type-FT" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: ${transaction_amount},&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_ft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;${transaction_id}&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_tranId}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;${sender_account_number}&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;${client_account_number}&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;,&#xd;
  &quot;client_data_ext&quot;: {&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">lenient-checksum-x</stringProp>
                <stringProp name="Header.value">true</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-IntegrityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">IntegrityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, IntegrityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication|IntegrityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-Header" enabled="false">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"> </stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);

// Hashing Algorithm in HTTP request header.
sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));

String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String replacementStr = &quot;&quot;;
	String regexPatternStr = &quot;(\\&lt;\\?xml.*\\?\\&gt;)|([\\r\\n]*)&quot;;
	String computePayload = null;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	if(foundNewLines) {
		log.info(&quot;Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = request.replaceAll(regexPatternStr, replacementStr);
	}

	log.info(&quot;Request for computing checksum: [&quot; + computePayload + &quot;]&quot;);
	
	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
	sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	sampler.getArguments().getArgument(0).setValue(request);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-Payload-Nested" enabled="false">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"> </stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);


String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String replacementStr = &quot;&quot;;
	String regexPatternStr = &quot;(\\&lt;\\?xml.*\\?\\&gt;)|([\\r\\n]*)&quot;;
	String computePayload = null;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	if(foundNewLines) {
		log.info(&quot;Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = request.replaceAll(regexPatternStr, replacementStr);
	}

	log.info(&quot;Request for computing checksum: [&quot; + computePayload + &quot;]&quot;);
	
	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
	// sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));
	// sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	String modifiedRequest = request.substring(0, request.lastIndexOf(&quot;&lt;/intimation_request&gt;&quot;));

	modifiedRequest = modifiedRequest + &quot;&lt;client_data_ext&gt;&lt;ACME-Message-Checksum-Algo&gt;&quot; + algo + 
				&quot;&lt;/ACME-Message-Checksum-Algo&gt;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/client_data_ext&gt;&lt;/intimation_request&gt;&quot;;

//	modifiedRequest = modifiedRequest + &quot;&lt;ACME-Message-Checksum-Algo&gt;&quot; + algo + 
//				&quot;&lt;/ACME-Message-Checksum-Algo&gt;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/intimation_request&gt;&quot;;

//	modifiedRequest = modifiedRequest + &quot;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/intimation_request&gt;&quot;;

	sampler.getArguments().getArgument(0).setValue(modifiedRequest);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-Compute-Request-Payload-Hash-Payload-TopLevel" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"> </stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.xml.security.c14n.CanonicalizationException;
import org.apache.xml.security.c14n.Canonicalizer;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.apache.xml.security.utils.XMLUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.jmeter.protocol.http.control.Header;

private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO 		= &quot;ACME-Message-Checksum-Algo&quot;;
private static final String MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_MESSAGE 		= &quot;ACME-Message-Checksum&quot;;

String request = sampler.getArguments().getArgument(0).getValue();
log.info(request);

// Hashing Algorithm from JMeter properties / variables.
String algo = vars.get(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO);


String hashValue = null;

try {
	MessageDigest md = MessageDigest.getInstance(algo);
	log.info(&quot;Message Digest: &quot; + md);

	String replacementStr = &quot;&quot;;
	String regexPatternStr = &quot;(\\&lt;\\?xml.*\\?\\&gt;)|([\\r\\n]*)&quot;;
	String computePayload = null;
	
	Matcher matcher = Pattern.compile(regexPatternStr).matcher(request);
	boolean foundNewLines = matcher.find();
	if(foundNewLines) {
		log.info(&quot;Pattern match: \&quot;&quot; + matcher.group(0) + &quot;\&quot;&quot;);
		computePayload = request.replaceAll(regexPatternStr, replacementStr);
	}

	log.info(&quot;Request for computing checksum: [&quot; + computePayload + &quot;]&quot;);
	
	byte[] hash = md.digest(computePayload.getBytes());
	hashValue = Hex.encodeHexString(hash);

	log.info(&quot;Hash computed using &quot; + algo + &quot;: &quot; + hashValue);
	
	// Hashing Algorithm in HTTP request header.
	// sampler.getHeaderManager().add(new Header(MESSAGE_INTEGRITY_FIELDNAME_CHECKSUM_ALGO, algo));
	// sampler.getHeaderManager().add(new Header(&quot;ACME-Message-Checksum&quot;, hashValue));

	String modifiedRequest = request.substring(0, request.lastIndexOf(&quot;&lt;/intimation_request&gt;&quot;));
	
//	modifiedRequest = modifiedRequest + &quot;&lt;client_data_ext&gt;&lt;ACME-Message-Checksum-Algo&gt;&quot; + algo 
//		+ &quot;&lt;/ACME-Message-Checksum-Algo&gt;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/client_data_ext&gt;&lt;/intimation_request&gt;&quot;;

//	modifiedRequest = modifiedRequest + &quot;&lt;ACME-Message-Checksum-Algo&gt;&quot; + algo + 
// 				&quot;&lt;/ACME-Message-Checksum-Algo&gt;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/intimation_request&gt;&quot;;

	modifiedRequest = modifiedRequest + &quot;&lt;ACME-Message-Checksum&gt;&quot; + hashValue + &quot;&lt;/ACME-Message-Checksum&gt;&lt;/intimation_request&gt;&quot;;

	sampler.getArguments().getArgument(0).setValue(modifiedRequest);

} 
catch (NoSuchAlgorithmException nsae) {
	log.log(Level.SEVERE, &quot;Failed to hash data. No such algorithm.&quot;, nsae);
}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;application_context/&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Service Unavailable" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Service Unavailable" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-SOAP / XML (Web Services)" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/xml</stringProp>
              </elementProp>
              <elementProp name="SOAPAction&#x9;http" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">http://www.icicibank.com/api/acme/intimation</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-With Application Context" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;application_context/&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
	</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_soap_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_soap_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_soap_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;	</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;false&lt;/resent_indicator&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Accepted" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_accept}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Transaction Rejected" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_reject}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Internal Server Error" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Internal Server Error" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Internal_Server_Error}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Service Unavailable" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-Service Unavailable" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
	&lt;intimation_request xmlns=&quot;http://www.icicibank.com/api/acme&quot;&gt;&#xd;
	   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
	   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
	   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
	   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
	   &lt;resent_indicator&gt;true&lt;/resent_indicator&gt;&#xd;
	   &lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	   &lt;original_request_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-1H,,)}&lt;/original_request_datetime&gt;&#xd;
	   &lt;original_sender_system_id&gt;${sender_system_id}&lt;/original_sender_system_id&gt;&#xd;
	   &lt;original_sender_system_user_id&gt;${original_sender_system_user_id}&lt;/original_sender_system_user_id&gt;&#xd;
	   &lt;original_request_priority&gt;${original_request_priority}&lt;/original_request_priority&gt;&#xd;
	   &lt;test_indicator&gt;${test_indicator}&lt;/test_indicator&gt;&#xd;
	   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
	   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
	   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
	   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
	   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
	   &lt;transaction_id&gt;${transaction_id_5XX_Service_Unavailable}&lt;/transaction_id&gt;&#xd;
	   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
	   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
	   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
	   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
	   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
	   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
	   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
	   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
	   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
	   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
	   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
	   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
	   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
	&lt;/intimation_request&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Secure-Requests-Payload-Confidentiality" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-PayloadConfidentialityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">PayloadConfidentialityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, PayloadConfidentialityValidator" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">UserAuthentication|PayloadConfidentialityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON-BASE64" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC-Clear Request-Encrypted Response" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;STATIC&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-aes-256&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;CBC&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME-Clear Request-Encrypted Response" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;RUNTIME&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-des-256&quot;,&#xd;
		&quot;secure_secret_key&quot;:&quot;20afd3718ef00256a2b2de31e2e...&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;cipher_iv&quot;:&quot;3483981280028292202393&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;ECB&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="STATIC" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;YpkNm3yBjEtjrqbPEy/OeMh8N9Fic9GE1jtfGkN+aKveBBUHAApHcT6EJ26yI71JIVmOl+K+R0sdmLKzgfBVIhYEhe2MI9j7XZn0srUzt6XziMoMQXqNumrbNQMgBrb0YEUdkIpFPG8gBqLW4FWwkFd95X7BFGhZBFyI0WKtTgp35wrYgwBMsmfWSaTHlkxqjFDHh7+I/XqtRWnSA2hPVGRf5w/A6Wmz4CQpb5hV2cfrZgcLP9QX2GNGvJFJwWnARLQMzGZxcgXiQ3/fSKkPx377Qhwjgn4UCxXGbkIbdeXuayE9CtEz9xC521+HZvqhT3dGPc1TtBWf17w3RS5b9FjKcjVXfjru9mG7MYcw7CKWk0eiXpIvgOfZvUAaR0KKQl+9NDzpajCO9y778Yrzmb0FlAdLe3DiI2Vnh+3w95/bdkb6xUJU7Q2/Qd2Npr3cr1oazJEzTXgqARRdWMgeLVLvGtQGUp0gCx/Z1hC/ZDE6yTiQdyFEE4gEvGISqJLSGk5sWDvM5CD2AZCWiXPsCnfMxcL7IRohf4KhgeQ0C5rI5xKltE0n5NkILAPWZDUwcOyjlD24xQmsri8jZI6ctJ/L8YqMjPRJ+QYH6u1cS5QzS2PvS/Cun8GPH6CWbWdLPnMjKbp5zSANSDHBVuby1rlDJcui7XPNavALBXmneiepMLjVyv5Y6ga9MFzwTV+HM+rPQ4auDt4SIQQkwWTdQ/Po7CdXsYApQgvqiJ+OnVZfK0c7wGweI97uq5ULexyCOqJ0TPu/ZgVA9/1MektQrvnYdPYdjqIbaesaqQHJ90kMExD16tcNnqNOOFRqzpJD7wLjqFMEW1MJB6mLE3s0oOznUfecm65W5oX/18EUeE8ScC+/s4vJXAIvboyrFUXJWTSsF6zp6KNi6mPB07X0WVfz5zyZ9uiuO4GDghom7HuU/SnLMzJ494Ic65wXlRzwo7OeqeYkHJJlFyo/aUCKZJJSFDsvvN8ADuV7y+kmW6rxjJBpmChwFMwO0JI6fuTEQb86TnRorH8ndXp1/QoaqWML4KCEqa6tpz+YTLo6SY7zYLveP/PAwovAAYUET+rFL2SMa/D/83dhWRPJ7r8Xmetjnp+5x5xEJQI0MJtdZotCzCZ3mRw/GhdIRN8veCDF5YCOPGP4BBolw195IRI/QpOS+lrSZNPUDlveQmjh+uHWaqveC0pU44/lPNkyBVXbbevwoHPSq0BdiR7jViN7MMnxArL2AgIq9Nv+e8c1o23xpnTKCzQ2hCth62zRF2JWsPsed1Yot4KmT+iOdiTXtpkEHjXPhcbVeAX2gjBXFE9VkN3SUEW5i8XLpQZ6FQn3oK5h34Sh9koX2j5HQbcCysYVReExGlbhK+wYXVTSjP9feoVym8bvyRYm8aQy50aDqdlqdqryW/FPxyxz2cIMs0jxXixBz5NbzGBKgr+09B7fVwOXL4/vT+gSmuM+no4hXS4On3WZeeqUNqosWng/Yw==&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;base64&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;okpvg2N6z8Y=&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;PgONgHM+84sq1PuYTG8zOrEfgb84k3Khlx9WpHbrmUlsvlUtnnz7CvXHQOsnSLDDDBGoSeKhyIsIfygBn48QXzzRyMOK4jNIp7vOM52Vug1Md4MnUo7HfaHP1GQXLBfKQGzI2ITxwGg5wQp1cfQ+62bEWmLRrO0jAZ6w46rlzzW9WvS01mZ2rgneT1EoWMR4gA5ucEQ6VA5bMwUhDmIntr8X4bNnkR6dLYqw/nZjJ+bp/j+rXoOWiLCOghlRKapJJkLS1leqjNyAa4GH+YA5/50qlMAgQVFZz51Ra/tgoj5VxKRjyI9Brcir17VxGb423QiBpiEWrsrWyAOL/oJX9c/0WNIy/mw7obHQzoyJI+s5YnM48q2F6KyaU25A/mDSX1nFDKEPlw8ktf1lgIbkfxY35ZrWZa9q4P9gXTREW8zChHBt4blCcqOF7lstBzxs6ViR8x1b/zo0/RNs27XvN4mkh2ZcaLCOXRSF4rvbo0IBAPVPXeMxtFjVh0xQUBWHVH3aXzdxnz5RKN5Ci3+Z58M202CyueOWVulYIfNtykP+50XkETdNwCiDjLeeJA7gaE9zkUmdK15zOl29fj21aCSuHVoaNJQnhp/E3OQgLBKJ9FvQ9a6n++N9KRoI3GrWd8Qd+xjel9tv4Mu86l+4BED8ZpYyIUamKAp8I3+52RxMQ3zIl9Slz+6VxKgpvtuDjwD8dDeFl3aoDVO5YBcU5mHIsUoA2r5xJHYnks12qp5fWlX4pGqewC3UA15hIBSifz+kaDZfnYZaMOclIMUl0BqNEOD+SsD/LV87xhySdOFWxDAGWjnfj1soxp+yxfXm1Ux8ZRgY7OZXnpYnhtRWbJuXstUsTj2uaNfN2+QfJSJHgpvofq6vZuijWP2EUuTkWyN0fY0R9YHA9qgFPWF/RFOyMsLw2YR0ixhl6bcfHt8oR7YDu/WFBlpdVgZjq2KkSdSle4mEYLpialGY/HkbGJ861oT4uV9vCdA+6CuDQQY2aif+RuD8a11/L2r3HyjXJCZClPzDdDAXesa9Ww/EUbE2P40VNWpvIBw//mquPrQGt9rWaVPi70EqBKGZCsGIL8lB+iLXNUXH7jKUtIzV9v8HPLmFLs8+vKZTeedYIcuaOFJgN3LzG6ttLb9TxKzAag2yTY46P7Kv0bms+Os6rqzs2FarCVWGPwOXKDMNQSrUAv4yMj48erobXxeOlYtqT1HW4ftTd6ib8Q4cZGnp3lMbAXPpLpQ2GTGl8SHzOvblSgPsWLbzGgfnuEaA2bhlw6Lw8jLuSpvsMzWtccE+JBHsQkekbqv3/tNu5kROEDW05bz7ksFzSLCSNXgs4H9T3vzCr4HgrHQMkTBhRkZDtYAIgLXbX4LST6/dMTRIlSGqPztbGtdV3vecFiu8Lt/nDy+qETD/Z365JihiMeD/Zr8VRVJgzdQOW/WdrUUcMO5lImD+5EaLDGa4GXoD2vNxaRaTA4DJ3IlQPNbytmNQsQ56XJ00agMuQBtyvsP+sHxvjkoKRRf/ASC0KQ+5vY+1buBRMXKWHClfF8xI7/I7Ag6QF/k+NzEd8vSz4+JUo70tP/ZoagnFqOWtHNQySwdfPIxjHY6fZgHxlTva308mB9FSrducLs2YK33ggMD7q6Ax1f2931zW42lRsMqdLP1Ub2kXWE0ulwGlRuNw8ltXKlvFja0y4cdUxe3qaQQS3it9xFKsLTqBZruK8YHIxySRZlqqRqvduXI=&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;base64&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;x48u4XqySIU=&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;eomO/1zteZqfRxI9NRDgdacbccWBFiGY7EGVVgcPxcZdFW06qJwXBn03IUAO/SSL9wQtJXypILv00Mj3qwV6DLuHiulhI5ktT4MJOCASMtEb58t+TZvALgIgHEQ5uyhjpnr8iYDSJ14E2EH3q/oyJmojlY9DhY2LOhDf71Yu+pfjPPphFr+tJ/UruNXCAiK2zMQhbni1iFwpXJhLczNOfN6bqgctSeUmpPrMg7j+yunVzscjLo8zne6yb2hZHUGkfuTJ3VtK1DIRus9brGysWDq0Tb+gQwphfK5SQqifmumRZ1KzfzW0cqvc5dXPg6d8dHqXwGzQ7t2984bRm4xhvXt2byCrVktMlosIapLMeCy0MOdzCt7waYJoW9hIYqlfWo52IJij1rPKrFcom4DoNLo2WN2dVmzmehHtmDiVANQnwbY1rq41LSepuc/ng6UgynJ2Yo3FtEoTFDr3eogZIZaFiQhxAPOUNTXDP0+iZqQqAymFMoBIwI/4evb4ssfn6wmw3Ufj9/F5K1YAVjvT5+6bEMsxBYz7I7TNHv9uF+6ex4WXtH4XAJkFk+T8ntRrD7ooinCBn3A+DrFOxan5QNmLzfZwcGbbJEuCVv24k4a9a7Fm4oHVHJMhx0Hyx/JNS79hEC1men0TUpLltcN1JACSfvBiHclXcST6ubWidL1eAoPhOSIqHZ6XYIbAEDr6U293lp38Hfg2oDpSdeyBP5+6QkfdoVHOxPWqS0WErQ/2MXwVUfle3Z5N+ERwCeVfmwG+3pr9K1Ms18P4k6gY4YseDW3P5CyGxsY1W1DtfIrJ9UL0qAKvyvw26DIUuzI2iF6KqZPBoRZlNNQalnP/rOW1hwqPEZCbQbkbApZEo5fGxkOVJ5VSfKDoEnKhKRaXTIkVA+Ojo/xVDW6NNmmXd6haJtmGokqCNHZxxs3zN9/6tKjHASgOgY9ZsrER4A/wTX56vj1sgnIKlvjrQU9J/7htZKqarfq1b1bf1QFCrppHBFzolyOp/6H8vMZIVysNcrekxrKw++c79RySHXG2uRmLwgDAyWKK4/5o2Y0Zp9VCWCJCWQDKuOrPgjCHzP6qAZy+3wUHxPgEMIRXhzfpLdprVbd48okusLxiuXKa+oRj50RIIXPRiM+8EM6lRJyKE5yee6E04oGtZEFYMetslkA2Gy4COK0fIzVBoOE7bJ82p+84CLYDsyaXXpujY6BbZ2+8avSVwYpsBUZrl2P3XuUCT8zuy4j779c9wWo9upTipVtCOt/tI/dX/+sijuEt+mh0vtfJgcMsMM6YnbjtkRj7iTyikb2b/kOWnCV7ozJ9NwU7Vp9aqPHsrrWcUrzyFw1R/mERSao=&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;base64&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;38zRKR9OPf0=&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;XS9EWqzKBvadyCk8cpZ8vhJS8shOefcF6Dbe4S6yMpsvvDnEMBBiv/ERhpnWIQ9Fx5wsLLmjHNIHlWS6lMyxdVJ8kls/1UvqhdslcnQjD5xvQ9VeWM/0ATjyc7svQxA2DWcKyr7ejDZyfnOlIQvBe42jEYEZA9WddvTDAbxi9ABYSACo7LS40OwAyG7XZVzB0JAaOX8c0ohc2P2lff4soyNQl/vJRSV+MrIbHscQtjKJk9QKD3ZB5TBwsbrwYAtL9SgIlAiFrEoZVwdsd3dsmtOAySJPSPgPi6kMc5PlzaLwRjlFo5XEdhav+xiesqY88+27crCkUd/AQ2kZ4upXgcaENfoe3G5PKZMqUZbjvXNTpz4KWPHSagayH9L4ymZgmUR3NZt66SiTEYzGuspdfJ1CnU5TsvxXfXqKyxQZNMRyULsancCgHFIRimPVFNAvmmigVwMPKNMcJTeS9dd0tmRA1YIPchrIg4YQ8EBjQQ9nZDQGyE2TidpDedkhTsRtoz1lFkpHFwZH48roVT0S/+5jssRmJBx5fkQpPZrdR8150f1hzk8nwAikPDINcRtLH9KIL8zK6NcHpqhuXAezZFC8DSytLWf4h92PW9WyZgTfXfCbcgZOvXWyx+UbQfg5C6EjXvASTKYGp0eqFwBjc13h1GyQDzg5uVEb6uOehIjf8vzH5syXUKQzsQgJqsE/ZfurPbNpS4z/M6n8j+73oCqqqxfM9DrrHmy2i7LmtxBc+KjvNLcV2s9FyNdrCwz/Ojyeo+J1GrQ+JCQqGFosdShDaqw1Hkvlh/FGIt2DQc0VHb0ca9npx2GEjDveYvDuqus8h4Oz+nabo2X5UrUp08H8H274/gBNPP8Wh7+wVEw8BSUdduuSHtEXk28PhUnTsDeEsnI2KhZ0wzm4wXJuOjAjrUM3nUH/lxuo9KigYFco/hlTE8aqsIH3KuP9q1TjMhW9GAfUoVdbHWZxU8IwIJ2pdk8xpEwDghnQ16cNn7HWicEhcSK0gtF/nJiscUbpl2QakuKjc/fC6VbYgE5vr/owIvfn/+I/kyRcKgWSeZLRJq2WZ+ADSJsWIM6UFZja9gG5TAMRdHikDFsm3S77/Uco8yyTgnsTmyLb2ueaXrYHxN+O7nou4NyIVk+0n2ZHcLZylEWeEHChgcjOhLbInU/0SLeC8jppaStLdwLGL+DFTKuI+IIqooLRFvfg3d/liKSQXwnMAYwVeY4MYHHN8hJhYBbfMgpbxfGVJZve3N6nVaLDn/+oA3BjlvejZjjtHstei+mCXuky2xBAvZNHFBGwFW1pYTHT5pdwBdAWEXRZKnUrEGQg9nTCtKlhTc3H&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;base64&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;Jg49OntVLVY=&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RUNTIME" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON-HEX" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;STATIC&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-aes-256&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;CBC&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;RUNTIME&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-des-256&quot;,&#xd;
		&quot;secure_secret_key&quot;:&quot;20afd3718ef00256a2b2de31e2e...&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;cipher_iv&quot;:&quot;3483981280028292202393&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;ECB&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="STATIC" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;a685e994295b526a45b55c76fa428193f5193f3ee3abc71ecd340f6f4bb38b4d1cfc4bccb4b618fe91c196921e74b54b10a402a222e8fcf3b057da3e52341dea41a40dadcbd10e9dcf7329847e7ec3b063bb6fdb2cc8369bca6876a7a194191ae2f1247315cf61f2376594c0b72d3c472dea6ca9aaf071ab79d9e020052c2af51d110f1bb8f94f45c8bd52e188cfb7f8968f4053828586e6a28c4831cf444fd5379406c533cb598fb3525f14a043c3e4ef7433710cae8e1cbed10340a0b922e8567a1609f1be58b514e39e2b6a2d26ffbad6f3c78c74681ea1fa65f66da41c9aa673c5fc8833d687132a2229d321fdf17b1febb19d8e226060780314464db1a614d86938a8240427280540410c797db2d6aafc4ce1df7e1e5b4869a57fa7a456f89f5427496123329e731c23cd38192c4b0d0c57ea562f616fe954a0b211902c4c6a0aed9260b131c4c309f10534c9359dd4658867fe81816434a2f19d772aeb5557637f49a33a811e50d5cbccd521848487ad4d082211e661fd0232cfd566ad800a48eae32de038076729f85cebd46bbd909c77fb89656bb6f7b01d5f1ac08b8f553314e707c71d2ec5a9774e4a750887219fbc63c1b9b3e8c68081602a6f951a58a1a8300508c1ef97f26b2dfb12df2d7cd9052f3ba8d1a933df7c92f71811b761a26e56da81760a6e57a855725b5d9040b4fd80b68e341bb1d0fe7ceef89a80d7436ab041ad2bb72c2aa6543e2ce74686411f47141157b8b7a147bc4e3d73f1abb27636cd62802b2ae9b91cc8ef932b90543dbe75a7b9c47d47c35c358cb05d4b4ea35e2769ef20768f0911cf5e9fbdde0dadd7b05e2536113519d8f759dcb304e7aa93997a6415f0fa6d490a206f6b937d1350631ff01d24d0a8b4ea7596dd6499d645d7680bf5584781329a779f2b9aee8d398e6e2192a084667bcef7476f2e6e9dc9b478d19c385f4c56525cfd32bde9f9e93a8321ad1ea0faea4cd13d36aed4923702e9b0526b8e61ce57d6108b0ba38380dbf6949d88cd1fe4e24396f01f9ff7824466e5325d43e2b0d178289cfc9ff5ed0c6f34787def423286c33cee1883864efb75f26f9ed5a9db590f254c0599ad575833fe5afe77fa57c9ab504049e5e7f488a5e1e08985d2c16676fdde636728ff2ede2fdbf109feea23ef9a5ea089e35ddbd729b9a8eb8f73dbd35c9140fe375c2d8244917b9a3e14b5b7106b122800af47b82ef73f77de8a2ba331912352902795d56ec0809b679701d1628c87856bc93f7efa2194d0c7bc1fd5c877e9dd101ebe87e654dc5c7cdb4e50990cee1acdf0967b1706c0a567e649adde4d6204618286fbb8fa785ba3355a7c92935df2b5f89ceef9fbb99549a109b04fccba5b8bad2cb478ba8b739ca989e906f0fb8bdc9b5be027004305f7606d5d5783260ccd30dc227747ca49371d5f3e5a1c264b683577ae09dc9a5c819b18f651d0e4459df022f167671d30410d491972a34d775b2a2ab68855b1a5b305859f7fd0cd2a7ca7d13cc9533468f55dec89f05e88b9ada7ac215b3ac83aa8b8aa9476c29a4b9fa00bc41d4ef8da6194b9bff2&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;hex&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;66024d9e9def8e82&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;e6d4ebb0c49ff5da23bb3c4f3e62825f3f0cf4a7f8f20256bfdeae1286c1f45d5e4a11e67c86685b2d42bff04c3da53cbb676838b6da729d14ce7e1ae84f040ed4fc9c9c020d4be4fa9058366d9f5731e413b2702923841dc3c629d58b5aad0d79f15045e2688bed2c5e04626045d54cdebc31ecf308c5935391d47275ae524c735b85be684f9dee676fbdbc5a5c8372455f1c9fdb9f236336a235cd8ef991c9dfba66dbd5046219ecc2a74cf269408bbafcb8399ecc364b2c4b666823b9f8a3886d6516719ae06ac80facc474d1cef3716e9267ce4fa56fb68ad6624c49b352adde199dc06c6c67086af2324a2abccc28c9f6569918a99e9d7de831fdef4fd3459dea6ffe227074322194945418ef17874d4f5c191c00cc61229683f157941e6dc9eca301e44fac952d81e5c1570cd8f3c9e9caa892f887e27bc314d7661e6336c03bad3e7a88b25181765e1c1012394453ff903e931bb4e6ac92fd7cd93bd9f8061ed26bcf0044e4dac37d7e695a8d68528a593257383be4131451679e5057931458fe10875b8810432586bd5e7426441212bf182158fcce3b6c488b951f81abd9717d3553591300bdc660d7d6be64e62bc131c61afb12ef80275ae4a3bfd5affe8b872faad86d31d5c4b86d43560b5a21f2718e85167a742190ceb1731e638d9de2c2a38952e4082e6a72aa9c7eea847e7c70ac9434d70deef8cea936e50e1423d9fbd41439bdb1b3b6a6e57dd20b1f99762f07089a8718c512b3228cd26e6e654b8159a2c79052e3e2a2f2c9e7a07cd247ff9c1fcacfed66b370d86c350e0839162ecf128d11d5eefbdd6f47bd1be9b082d0a1247a5dd0f58efc816d7a65bbb12514aac203b0d5f206fabe413397c4b8193c8cf9164240cbf49b46a38637163a9e7a61e3f127d4bd69f3a48dd320bff57aebed74417ab46dce1e5ad0702485224730b3047df065826bfa380d6f7f76fb4b7f8226efecc8872d10c0cd1845c6297b50f6e017d6fb5694582ebf13533bea94c85efbdce0c989d327e5ab1319e4ced306a315513b45a70fa5a82c7f2f09eab9e1b440372926122fdafed8639fdf87abf6efeeeb57a890d8beb8a289a7686965f594d6638fb117f5eb6763e92a9da13d87dabf800b20243ff7bc686f3f43365e4166aacf12461ae1e150d92f1bff0dc14432bbca6e89ec68bda9a50c426ccb2f4ed444dd224d3fd4dd1042433e2262f9422a75cac2fb39a90748595810b3d39c3eae0e16b4ca081ae767eb0133ee6eeceb160bb75754be1f07ce6f81769b7ad796ed8f4c07303a7c4e563fe0b0bbe18c36f71a13f9acfba75ca367d2c2544051094cfb909ddd14bf3d41946a6443f1098b8069970456db2422da566f0aca83cd344f82776ecb92b38c169e819021b7696dbfd7b40ca0d384a45a7961c2d4d3d3f183712ca9bcabccb35d221dd1110254fa3c74a122ccc65bf62fe1d15f4e8c6521192bf5cfc5866c3c5b654577c11bab9fe1c6ffecb87bcb0af2df3976619b2f762ea7a7abd5340952b08f00f373927a185f5ea835826adf7b0de34faf99b6ea37c58ac95c2103a82202d3b89d8913e6031df7c2fce697e879400b800092e27a030d0b128ff97f728a9e017e085f26143d1405bf7324e0b84d705b084c63173436e8469abb8297f4f68d09a04f4d6b726c94722019a11bd011f0917d2a17d7fb76660d6f92649950e3e43acd544d524b2996192101031517fd7762ba85b0599ce1a8f16f79bbfdf400c40cfd550821e8157f8df99cc329d4454b949e7c6d907de171ada93f8e8f0187982241aff5f16ed6bbac3f890de91c1697969296a78690ecc4ec3d82&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;hex&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;e75c0160b0ade807&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;14704213605792d9863253dce944c0875dcda702f12fca9218f29886c22e116b0b9c933b2b0be42ca5edeca5e52b07bd0c287d3ce238edd4a3cd5bc637988825821feac1368207a74d36c5ead8311b2fb84d98ef5c0115aa08dcb8f15146505aec91318d3641c434383b0bd4ff32deb020e595fb075aabf76a1a7c6ee38ab40500d32c68030f2e679f42e867c057bfa7479d5a9f2489ea4041bd115501f1033e1d6a97953f9d18d929d6b6b75332162b8cf52a2d17029871ed26f65f7226b58a9371d9f8e7bc1d211285328f20fbb8accb0a03a7f191a8de666d67d3a6e713637a5183a544928f1101a2e1f5997a9869a0f1ed9d753978c8bb67aaa0acacfa509f22d5d67a9c839467a0eab7c562e8a3783d0b3e669ed813f2a8dda288af97821a0837506d260a37ca021d2d0bbc6f473b373eb4763fcca4076da13c732aa698632b7e83a1d76f15d1fd17351d6c667c804d0380131ac49d63663617578480cdfbb8a8b0cdeedc3e57a339ebf4ee1e79b0612de8bf9c656e93683c3c110737cf1079c3c5bf40bf9a605b78fe3926b20ed16d6004113a38f55218d6216b771857d665bc6877902d26b47e6d17d87c792c364f75aaa3bf3e9638a3a7b2d965b9c4280048ef865aed9ec44b0a109ff9635d1a007b1057fe642a384a216ae9bb44a89ad143a75e79a54b80a88bc266b4102f0130df6197c78de0c432dedcc7c403b322c53a8f874f69296955832132c7343decece38e679c93ce0337c7895a0dd0eb731b0ca8e4930fcd6d15217cf20530f4feff007d50b553ed9bc4c675c450b949a8fb482e72d1ccd0594b3c71a2091842ba65c53bf790c92e0fc9fa2a457cd2dc7f22533b5772be5c1c9c6e2123e1ba66ae5d59a5d2f18007827a5445c9afe5c64b705cffaa9ffd73344fe9bd021f6f1ff5dc04700c82c7774bd38b8e658d448848524c7314dc0954d817ee7483ccd02eaf34653fff59c86a14f8e7ecb4da3859f82efaea709069b3df36464987e276f12cdac08c9deda8045a79ccba4de028f49307f842e1c3142921175accfef2831c9acc01ffd97c1794635be8c732e1211fd14cfa1b1898ed0e026d4f1f1c929ff16bbfc047e423808de6438325e822be956c6f57e45944970e939970e8800c6dae9d221f72b1f5d9e0473173f96bc2e76f4c80b0ffb04e7b2f5a37ba1bfaa7316902d62d2a167a4342aaa91565550a681dbc8f2881bacc3ce783035db3f9f5c1e9270f582ac168466498d6614d8185ff4b84c433bf9ccffddc29984d7c6d52282c53f279a5ca05edd2f98b0bb0bbe41623c5aca0ff59bad19ac735e06cef88359d516581efccde41e7191542cea7b4b2fbe1381cfd4be2de4603a822d1a139cc068dcc42eabefe2169303d7d1122813de6c683cceb385783ad7555814b9e2383f40639f33cf5278f49&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;hex&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;c9f18c43cec0c25b&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;secure_payload&quot; : &quot;438eaab679d85988955bfdb5c65d50fbf287a377f4e4aff026dd6072379c21ebabda7d32c45dca8a90d9dd0050afb280d0ae7460f27252fca1e4c61c34f7e50ca1b3ee08d4f6dddf97de07a3fa4924522cf00621e174fbacf38f8ca0a89d7e687b17c0403cf52d6da75a21415a2dd875216342585b1b015c29b93931622c6572bd7391cc53159a3157f0dfb9bc85b882a4440bfe016ed34de6e67deff456240f02b29f46cfc70f28099f96cf07f9f8e3413b5a6320ac0abd36340f71b75c38b7e7b0a06a2e217f3d928d9af8192b92ddd57d9a34604f07da3562cc62bbd8b8c18d9d04f980cb8345570f924ba0eafa3749da8b4474ab00291ffbb71e8e0527d03b1ca7f1157ef939af9eae599d14123d13e4e40c0c7291d1b0044565f1f00ff4d90e254be42adcf1608ea0d07df34be70e61da6f311745f6b16cf8ea1eac4035a6f484232519830470695bdf97742f2c4db55d6ccd565480e363ce28d4d9f82a854e7f62cc0c42f1cf72605cab7957b504a958c68d333a88395de13789620ce5873ef7e2d2f2b3f797826321efe580b7cc6c343b42771f59f1a58db6439eb5d8d49300a16c90ca74b48b7f51021f7086afdf036c086c922a706dd90e0c8ba81ed6731d9882143464046d2e96d2bedeba5c49aedb30e481448f4203bfce3a78d83f95f0145b5e21db588acbe6c5d3c6c9d934e9ea65f208987a1ab41c99804a5b170bdc2f177ffe66e5f40afbfbeb493f60222dff3147e5c8c3fd8817a4d5229ebf6c1b67eff4edfb2c50a645e9c67409273e988acd81c421453bed8a706f2e2403a8f08462aa1ce0c5ec124b96be01cdef6e174a2ad0c33b74e07cc2e9b2eec8b085e4d6dc35f6115596128d13337fb94392538f3df3470f79a7da0576ba7e748c4cf0e9a01b916b37056b1d11e00fbc0914fd85d6c6d4c371407041dff3c4159449728c9b37c7654cbd2849fb83687c69183aa9e5683b3e70345a681f545e3005edca686dd60ffcad7025ebb6d8e49ac8cf3cd5939341b455aaceb39b3a374831713e61e9cc746bac8f38d51208e7aada30060ece92d260edfab2af2e8a48f5a6977ce0eda6f25501c655c24f72b6419aed9b48229bbad68157e593950d5267cfbb36239c803fd49a2e1abeb5fc1a8b46d0a4296a45bacaf5cdc265f56d7f2249a3b3af933ae659088d940f60b5fb5ebd78281ff28d0e6e54ceee3c1da88255a985c9c87319760fec3f2f02ca9573e07d263f2b4dd4708d1911c2ec7013cef0ac9e6ba08ceccc889bfe9d4b138f1c3ee3e579c38d6e627bbb58d418b6b359d70ed37d5736f33d512087929ff0aa2b88ca0d0c7ac9830595e6c946af032860d1c8a06005974865781ca34945bdabaa7de22710214e0e039cad6324531fd6fa4ea071910e1bece2d5821637705c3c26d0&quot;,&#xd;
  &quot;secure_encoding&quot; : &quot;hex&quot;,&#xd;
  &quot;security_config&quot; : {&#xd;
    &quot;secret_gen&quot; : &quot;STATIC&quot;,&#xd;
    &quot;secret_key_alias&quot; : &quot;acme-aes-192&quot;,&#xd;
    &quot;secure_secret_key&quot; : null,&#xd;
    &quot;secret_security_config&quot; : null,&#xd;
    &quot;cipher_algo&quot; : &quot;DESede&quot;,&#xd;
    &quot;cipher_mode&quot; : &quot;CFB&quot;,&#xd;
    &quot;cipher_padding&quot; : &quot;PKCS7Padding&quot;,&#xd;
    &quot;cipher_iv&quot; : &quot;82b4eb157a584441&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RUNTIME" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-RUNTIME-Bad Padding Issue-Reencrypt Works" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML-BASE64" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
	&lt;secure_payload&gt;&#xd;
	&lt;![CDATA[&lt;intimation_request&gt;&#xd;
		   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
		   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
		   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
		   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
		   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
		   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
		   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
		   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
		   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
		   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
		   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
		   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
		   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
		   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
		   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
		   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
		   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
		   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
		   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
		   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
		   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
		   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
		   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
		   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
		   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
		   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
		&lt;/intimation_request&gt;]]&gt;&#xd;
	&lt;/secure_payload&gt;&#xd;
	&lt;secure_encoding&gt;${secure_encoding}&lt;/secure_encoding&gt;&#xd;
	&lt;security_config&gt;&#xd;
		&lt;secret_gen&gt;STATIC&lt;/secret_gen&gt; &lt;!-- STATIC or RUNTIME--&gt;&#xd;
		&lt;!-- Either secure_secret_key or secret_key_alias. Never both ! --&gt;&#xd;
		&lt;secret_key_alias&gt;acme-blowfish-448&lt;/secret_key_alias&gt;	&lt;!-- STATIC only --&gt;&#xd;
		&lt;cipher_algo&gt;Blowfish&lt;/cipher_algo&gt;&#xd;
		&lt;cipher_mode&gt;CBC&lt;/cipher_mode&gt;&#xd;
		&lt;cipher_padding&gt;PKCS5Padding&lt;/cipher_padding&gt;&#xd;
		&lt;cipher_iv&gt;&lt;/cipher_iv&gt;&#xd;
	&lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
	&lt;secure_payload&gt;&#xd;
	&lt;![CDATA[&lt;intimation_request&gt;&#xd;
		   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
		   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
		   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
		   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
		   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
		   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
		   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
		   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
		   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
		   &lt;transaction_id&gt;${transaction_id}&lt;/transaction_id&gt;&#xd;
		   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
		   &lt;transaction_amount&gt;${transaction_amount}&lt;/transaction_amount&gt;&#xd;
		   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
		   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
		   &lt;transaction_datetime&gt;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}&lt;/transaction_datetime&gt;&#xd;
		   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
		   &lt;sender_account_number&gt;${sender_account_number}&lt;/sender_account_number&gt;&#xd;
		   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
		   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
		   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
		   &lt;client_account_number&gt;${client_account_number}&lt;/client_account_number&gt;&#xd;
		   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
		   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
		   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
		   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
		   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
		&lt;/intimation_request&gt;]]&gt;&#xd;
	&lt;/secure_payload&gt;&#xd;
	&lt;secure_encoding&gt;${secure_encoding}&lt;/secure_encoding&gt;&#xd;
	&lt;security_config&gt;&#xd;
		&lt;secret_gen&gt;RUNTIME&lt;/secret_gen&gt; &lt;!-- STATIC or RUNTIME--&gt;&#xd;
		&lt;!-- Either secure_secret_key or secret_key_alias. Never both ! --&gt;&#xd;
		&lt;secret_key_alias&gt;acme-des-256&lt;/secret_key_alias&gt;	&lt;!-- STATIC only --&gt;&#xd;
&#xd;
		&lt;!-- RUNTIME only --&gt;&#xd;
		&lt;secure_secret_key&gt;20afd3718ef00256a2b2de31e2e...&lt;/secure_secret_key&gt; &#xd;
		&lt;secret_security_config&gt;&#xd;
			&lt;cipher_algo&gt;RSA&lt;/cipher_algo&gt;&#xd;
			&lt;cipher_mode&gt;None&lt;/cipher_mode&gt;&#xd;
			&lt;cipher_padding&gt;PKCS1Padding&lt;/cipher_padding&gt;&#xd;
			&lt;cipher_iv&gt;00256a2&lt;/cipher_iv&gt; &lt;!-- A secure random number in plain text. --&gt;&#xd;
			&lt;public_key_alias&gt;acme-rsa-1024&lt;/public_key_alias&gt;&#xd;
		&lt;/secret_security_config&gt;&#xd;
		&#xd;
		&lt;cipher_iv&gt;214348349218412&lt;/cipher_iv&gt; &lt;!-- A secure random number in plain text. --&gt;&#xd;
		&lt;cipher_algo&gt;AES&lt;/cipher_algo&gt;&#xd;
		&lt;cipher_mode&gt;ECB&lt;/cipher_mode&gt;&#xd;
		&lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
	&lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="STATIC" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;2FO0zxmmzNCUUlW8evgO5BDdOjTl1dTtSlk/w7oH1xg7d2LsdS46EJ6Vo9z3KMKsmNdMBw5GsX8/Q2C0Hkxy06LQ4EWr1G9XxBcfb8hxF5R+UbHiJGfSgvfZscPbLzNf+4H28m5hxn+ubt4AJai9Qd8CGwUWGeJC1KF6j+s9sDygaupffDSNj8HhS2SNZd0o130TxpxDyPxdjn6STSPCQ0qLKUDFzcOtmwtopDYXAf25nqjahtd57c2iV2Y73vXorHkZCfZ0dWxiteQGW99nOskPzobZAUt6jXh9KR1mmbsZOKLMXTO5FWUqvVuvG1ckIQTaGaKMwgUd7fU6XMeCF8x4dIqkfcNMXLZ0+Q8uTSkKxb0SfgHW2N6uMIWmW6+Y7uaRP9V9AUPMyNnTIoNxL71iLlFSEmnWq8j75X6sgcvv0JJOeITsxeDImKmMu99I6SZO2Sa4IllOWMzx0rA5s6v2SDYrSCkozxbHPF/p3m3XXqjBbiy977Ms7I7iiRi/F6EopTKDIF5nKgVs47UHdwB6Nx9srGqVP+5IWDJhEXQPMJhFxqqofZB+ltiMmTegxB17ehU5RlK0OO/OTEMgrwsW1SEtbOVJZMmln8Y37FK+aEZPU8PnV2jXHLdjyG9EwYQKLOI5h7zkHP87k6fQNmER9AcW6SfbJaHnKvzxwOMVRxGDYnfuGBszbikAShX9hj7K683J8bRZDfhOAM9skm4iRidcwOE8IBKsvy/pU5Z0Il3gEbWGG1rQ3zHZ6ArSwLOzSHoOk1XvycIJRvaM8UZS68GEqbBl3pJhT2nbxR6bg7pfkrZHqX16DO/Kry6Ur7b7v7Z9dFLEh5G470lPRtRV0X2u57k7hBTI7/ne02c3kX8W2d6DZAk6lHH/f93P52h20cde3CoL8wOQIHN7JE6IYhrvxO/B3BWyNdFPr68VjPlY5IaIzdZYwN+LdNO4H35mLxE3ywAIgdouXs1T1dCuJqshvyfmA++FVhjfZtw1rO1lqpnscw2mEnEgLgJv/ycw2Rxwxog6br1wge09P/YEKk8JICySPwqynmZt2Tj5vYq7ZgvEp0IeespDWeJT62QgVXnjzyjscf6XYk7uekLTyHrgvI6/dib8Yb5Tu5IP8NZkIqOXoup3Kb7wgD6ifc7he8/QhoZxgQecwAuNJXhwPoz3EijSDhpW8mSLlvLAu5nvcip2chBcsZWssq5rjEIddzL2njixUVW5SgeH7fODs/GtWMR1oeEp97YRu1dmG8Z3ChtI0omwJg+8ApIp+8dYzz8U5wIPAtKzV4fnXinwLfx3PvqJOLlxxCPaqQrBNESHMEoTrDLe4RAvp3jU+IQD0XhtlNIoLfxOXTcSSbVS1KLTc16y99pFn3DDJ9ybZhNEVHkxYzNjAsQXZUPSNw5EjwDHytXEdQ2C1NZ6eEx5gy/40ri8Kosr3cisNf12+3PtL7wSqaN7hBvw3dNyLfguPBfjUeq62n+EVwfrt8CBZqPiZQnGOP2Li8UMPbgHcP6DOoPGVy9lgTfWCTw9P/9t69rEoGMlkG46M0A14JBvEy+0mtHkYQLCVEhs/45BYIgVgBpcAarmBMta37crjPGXHGnNbRncchOsoODkpW2HE7i+dDyARLHttxZxxujhmt6DPPqmFM0ihpq5E46H3C4T4KI9XJFKlBWoqVJ1y8DhzzSUD5U4G4oRJtRTbrs1p93lKkELsqLWUZ/tBzt7D3uCzKr3yfmGsXQ1/d+fXLA5oKnJ73oPKL5LiVZE9qGToxXayB7tzo5+n2tLp+CB2TDvfWqGk+imq/h8GOAGXvpHSV0a9J61LyxaTaFUbg7sJ5QEEJaIeX7bZFMaZvHr4m54I2LlhUb2v9mGTXsXhAqmgVMZNpr/+G59Hp32LplU4fhPVx9CwF11w8RzOroLxvyg+yfcHRPh370Muj8U2rGRRtQmvul9b6Qd+CCysUSdexFjh/BdeWlM+76HIehg26DUUhau77FLVPYlmEYVJg==&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;base64&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;+XNWiNoNhK0=&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;Bh9+h0unHym+F6nXrG5cF/4x+wUvl7Yz18hBPqGgJwRdi4j/RE3YH9SasM5RR/kI+HJwJViyQQfTANpl4fnnw4nY1RduHUgbpgmJMC+lL/+aIY+SIqJctn+vmXEUOdeE66mavW/wu5soQnVwNLmDZaYP4u1TIfgVCR9bM8uToQmTeyEnBbC96mLDOwS9qIfpZVexkbHbf4NKkWjQyO5J9mV/qztKBISqMlC+87DV0WWRdEa/X3E5ViPB4cyplc3JUYlt1j7VeWaGiVN9VeYAh6MXY8fCnuYcMSraztqrpdPp8WdbS8PDFS/r+Jhp7datQaqjgl1Rc1EONhcyVWceTq18EDagWoCev2DG8Pva2HM+lKrp+aU3B+480CHHOd2b+UD56Z1ZZyfeYijFDY1FPpQMw/gz2N1JWl7uc1BZE6NwncP1MD/svNcDZaHlTrlGEuRPyf+D9yOvV6wTvcF1836BEe/HRryaNPfWjg+dO/DjUvZesNhE7X97FNBvhnmBrMkeQTYAihWsjcSAKwPK4Aq95OK0zVWGc50eJmMAi6qRWipaXd5rSZCpWze+3uZ3DdW1UwA5PBt/Fr6L3zF3mr/DD6Yti5zkELP24X9oRVdC/lDrfHtAdALZRc7sldDdYfIjntPqvvf9YzxUxs0HZLtfA6BasTnJgU6iv42ZIQxRpUKzXzmbrR5k7aF4m/mEyRJh+wHNQq5juS9svNFx/N0gINxCR3YvO1DW2NlcR5bXvjVk7aYC0DUcaOGYqnh9zrc0vzA0ypyzk0mkrQzDQsv1YrPFAaBrFxvxUgpnBQVAZ9/NbDti+BbcpxB5clVSc5fHEZBWMVmhZACvOzC6FRPW2bc7Ph2l7J7k//3PYJjS7zDEv1TmLWcxmGAGqT694hWtdqqwEZlaEAhmeluSG+yZIC69vaR2YhwsxqbGGpSAAK5EeSplbl4He/1pTfHrt+duef567JmEqsGeY00Ehx3ggipDzXYnzV+l9ips8ZMrBAX9+6DLe7OsmcdqRy35DO0UWjMPZ2KEG+y7zuf4/KZr/Ap6IU9jFla6XPlCA8tzqy5RtqDYBaoYQUKbdKgxINCR7heMy13yvh6fzux30W/TOjJfPyphOx+tZ6u4DBcU15RUJ3PYnrQYiefgBc6G/tf7JNWZfHkHjpCnlO2zGrKt/z6x4f77K9bMHvnshdMKXUxSlIxuBSz7+f+myRp3vguz69JBxoJdqdb9p7Fj5jorkClKr8umrmGIyZevbSKLvK/zTONOKEjjVEOmuVxx6qhYcJi7isKxdNZoitq8iCviOp3O+/wTPYRr7TOpL08LCg6nRet8GRf40OkXdA4RbiG+xBeQKRKxWj3QoJj0xvDHTy9ymCF1st+Ku12AlXRpBu0f16NopMy5Fkv1NRvhXFULFZeWOB73w8by+SQ3+R0HPKaZ64dQS56aws7u8bh7uHib2FVPA5Vd08Iul81IQ98vhjhxuag/ViOsSSbRACkl4FpxPY+V8jK0Tug3UuxzY5hqRDzrHBrGX+L1e8UFx3ZnvgNazrbGack8bJU9oYBIzcsPsbj7MvWpX0p2B/JnOX2XT/76Eg2GviVhASDEiH1NSb6chjrnZneU3KlRPbd9E5FQvh//PZRYorHiZpYiNYRISPsqF9wXWTLIBKsW1aieScgnpvvKyFBx/MVafwiYO1LGEW7KtqISL3sVNQAEZ8vNvlHTAItly80TrxuQSYCtbGCvcO6iSdoTogakVCIZZvJTFk00IS7YI180q6zzD5jCJe8YIEHkkz91zPxSd4oBBVyXf0wIePc1O22SB/VIDi66TKcxoY30w1e8vgUG+XCz8BARuYxbvRWVDIckMImrjJnOxamgt6EZgHdcCM9zx5ZOAWEp/TdUb9PLG4AqtbEgMYWVdTqka3aP90eU/+6AaCjMledgDDV5wggt4ZwPmec6riPz9rjDMRND+E6hnkwroSaAYRm6HnpH+dql+oNcU5M4QN3lqQy+4JJKLNOgZKsd8ZUtc66pgyxT43Di8pwo6EaUFap2kua7FtG08Rf4bos4/xhq2ceWOtHeqgikDnVYKB7Q8mr/ngex3avPWdmYZVneWF6ytQy8K3e0DnY68Nbt+cf+mC1tqur8gD3+7iABRjwd+sfAgUS6MhOx1lvYBtddAsr06DexG/NfjV9BMyxomTlKN8jnPCODn76kqhe0qdRWfkf3zAiZibhtWcKdLRIAZ82KR923/KQtXKjvGcB7kZAXlYC57kmNUPKuBWNc1Kt8sWtaUtj8oxmkWw7F21J2OXS+al4TdFTMOymD+sTj8HhFeQ1j2QwzXmrQcX7gPRE2gt0SvN7M1pzLWNIVrKEGDqbHov6y7DQUcA+o2Es0Wa/yFARDqz+FZafo2sjyt1Bqrv9GNEjdQLYEqtC8I8EPU9qUqOPCzqAg7ZxvHXp79eJuYeJiPoICWyjPBhLgpIX1kw/vuWma3Em8tRF0dP8ae5AdhhpZ0Hr/qcxTFYashaFe10ngT7is2ohzLKZ+dc8bAbflBL/NuQM/62iA3PJG53BlNfx0leyyAOqPbeacDGCl40Iy2kr1Z+B1FrO42Jej&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;base64&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;3jhgoP3BEWc=&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;5inrANtPXs4t60jdyTEKZawvr1aOmdG/S0ZSaXisa8SqcMTWyV71XxyWMgwa/lgK5GG6YQrGp4j++72+BarDCCQDDGEtK9p23XA7Bs2JwLNyrhNdIDBK1zszEJtPrDfkTCClrUwWilMaitOrqrNiTCwCo3i7cepqUFa+vdJUIJVJHGBo63rZ8USzQ3qq/MwBPgNU5Qbs/iIBQE7ktnA27TKrNVO/FrjDqtYVahaowRtvPGQIuzyKsjbKGxZE70Y5NrvT/q35EYMAdgLl6R4pMyAqVEqE6DJ53Qck+QXiccIMfW7yZwZHPCYo7gjXd97MffBEPtRzGppyt/hp+Q9c6ki6IU4cylhZvbSdgvDlbnInExDBH1r/cwSMX2JHmg3/nDFBsZ7tuK5/HEfNJyf+LQkynd22Z5fJZSaOzu/ZM9YXh4wFI8S7OummEQEwpbjlaNWWiFHkbwCkDJPkRfFSGBn3dAItPNGyXlDVg9KBuwYOlIggkF9Wi4pzdoAhXCPgKKSEZNH1At+jFFri9TsjjCz702X8Yhi2Mw2jtPqFZ3peLLH6Cn9c5nePd897/T7QfIYf+qXnGNAJT9b0RnGiD6ONFCX7WTBq3ARvHzxbi/zZJKsrQ1PFIXXAbtSEUmY9jlQBjLAF06gj3G1kmntT/xPuw9LMjuUF2jDoo4wB1vXfqZtxLEZljzKF/dW4//7Mef62fi4fVYmbGphiZ6I6sxyaVElFDKR3ft4btNjpDvwkWOZO0ddJlzEV3dl3ZuB6THeCdPoV7EUwv5COsp6uTNa2akx5Tqj1fmbCO67SMgBviUc1Hk7Qe8xT4GN6PtD5RNcHy4/ceGvee99pQbPJp5CVPSne5yh0cOZP/Q7btAOM9m1TDOzpAcOs/sH5LmT3TcT3S/+/MhJCbeDtc41gIL4XDUOofZEGofVIyePT8s0WOmpTMX85tfanYhtSfkr75CgO4hmqKzvOQGOpNL2Pf+PFdVhCge2oYgxy/mkyTnfjR83ArWxAUoXTob4I8iZNsTY4eDQIPi8Mgy1MqiZkMjelgMqnwOVzfst6+3SD+e2s5TUWZC4Ob/xv5/WIilLpdtRosiIa2Huz8H5uQBJNKyxJ9pdVntNlH+A5pephZbAvWOzPX3kHq4MkAYclBb5ClifkzydNKOYZFwi5aCulxFAgi9qVY0rDr3c/li3h2nS64fdZQddZ23tgVD1vXFEtbyV7dmsVFkTdq7Vqxu3DLtRU4UIz7c+TrQS7BmSRNuZJx/Zwv5BxKJrBPs4zqDfEmA9x6aOqrd/ZW9O9PuhF+aC/I7kAFzS7Te2FrcfOWI3uAQ8BST1ZhK12k5VQs9Y/ZZexJjj3uGsTAH5woeKGP2EkSLAuK5E+4JrJo00mhEzBiJ9YTu0eI2LBT47B4G4XNjVR4rpLRzwmhPo4n7+BC272j7Pr4CDPmUarhR7ehf5lYAHgQkNgKFgyuZdjQSVA2bTR1Sbb/ec5qoWiQ1v/zKA7PYogXve9GmpXJrAG1BGk7ywWcFtuGKbiFGcnsY7lOIQMPIKUoRG6ABsmd4W5McrHiCnOkokuW7MryHlxzG39D3RF8KchYmrCQ1SqFVb8GUqbeaOp43TizIUqYsBMPUxfE6zGH0WYBDPmYUQRONSNXj2A0XpISg346ISEgEpMt5SvXurEWH1Jlks86A5MMx50QoTtzccMKF26FbleSTwwUrwGWuOlNqvBX57+5MNbix/BXgkvRHyKnLfNcfOvtOLzlyL+8duWhTSwN1xRt34cYTHSB/UrldoBcPX277vY+p+AZjdbPgCFScudCIhCPZX9kwwmvAJbNZfsdaWStZctWKnQJRAXjOGJ2/0ws1Thqb9eSg4i81iHHUdcQw9BJKqSdVQjUBVFZagrKqQNW8WTeKWjBV7skTASmGEvTj5K7fvPSYkKHv12CYRVSovDf2HG4jqDIZHXPF1fQzLSFIqYsOG9o6sU8ZvMcw+UE5MSfM+90krAiLzhq3HHFNzWuE8cMHfn3kJJb3cSGYV9HwYP8qlWYRchBxtQxE/eUvGKl7YlH5JzbKZGMLvEbA7l9zFeQxWzRBtS&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;base64&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;YdV5pME05/0=&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;ifH2inpKQnhMl4LOHo1Ju2ez1N+KoaFFKXVrzpbuk3DqFsOTSeY8tRFnrOz+s3/hnxPD9sU0cEsI2YVOQ424u0LkYQ6rSvGfjaj0WjXNRgc66zMdUgJIYbKbf/PMtFYh+OAg/s3CiopW8jTyoov5iGx6WsI33oNnrnfFdLJ/y9VFcEte6JdR0ZnpbMLy96xT2h9E9WpDw8k5eSfglHDXjl7V39TKwp6Bk+rga900n166Tc6lrCboOXLMQre6Vv/ZX1UpRDnHHvs1I4VZiSBqt4mkCRkHPDGtoAiCFApWTlmrI/K4N3IVLYFJEoA6RX9gbufjL/h3GJbhKwz2n4cTKmQGjycA5L0ow/RJXTSaRRKNrVrMaVihOVtkmiBh36fEgPL8itVRqPG0G/f0x7zvDmuTQynsWxiGgM4nIVn4QuSBS01YQOZeHjeMecuzYrVKHwclV8PfVn423kBzrS6DiErNeNiTWLsjQZ420bF5qcv0XxIy6q/iy/cSseaxz2L51RFunRGZv9SWafe8tq190nVS4aiTHESyPL4X/jAHIdGEB0uOvzB0XlSOF0TUjkuVcCiBe1t7oL/rk1m6Grz6cVmX7eBk0tUUV+jdD8Hc1YZarTRk0SVG3T10BC4AMs49/T3zPka3gQSf1yid6P5vsSBsTg96C3+sAdhzloxwoq32K0dtVc7erf1YFWaabAw7ROHt/0Kqfbolr72q/ccT1aEoI/nOV2x7ZAjKSAoQlFYJfnzaP1txZ5xfVIuhwy6fzRjHuyzVRTenA//FyZ1ahFTE3aZKmxyXrT6uKWNwywexIotp38RToc5VLgWKmHlbuc7Ug+sBSWd2HK91CYz69cJepFf6iFAXTprlfq1rv7Pttq15fyEP2lHrPRVGFFbfqY0/PdW0WFpiEUzIR1DMizPOE1UL1emmy11mO1uUL0KeiHL8myWwBO74wKPvJKtZfBAmOpBdVOnuHWBHRYCRZL4A3rZLKYE9M5wpVJVu1JsOGTQA/zwzzGMPrOewmvidGQN9VrTcM4MvwoisTbwRthwo9UtDV4bU0vPnVc9CUblFUgmCYf0VC1doaVNXQ65UuWZbj0/pJZnmciYY8VEtfIlYe78pGewZelECSK2QujOs9xrMR0mcU0CAktU0aWZlOLCzUX6CgziINSnyWEfeLJAO/xVK5Uzqg/tR4xh7TcImMY8V/2I/+uiXtYSeajFoi7mBiJxiGY4iPkw9yHGkTvRFDsITFA4Z3Q44fTZaAsi9rpiM3eZWrC9PyeIEaIX/PIQmx+XcFUE7VuTh9BGqrs1kWATJxZY0zEMdaQkzE1e98Y4bxEjC7M82bSm0oythOuwQywMsSB6QB43cRnF0YKZ5zr8WKMJuHVrmM0CbIhnw8IWD5mWpAvmGv1+UdLEw1Puombjhm8UE0QitqkIqDGzu3rTByhEr+nItG/VoIyLG5P1jl8tRliZ1zj38GmVRjjxvRwMEjNDd7S8zBLNDWmBZ9ZKDtUheYcCpMciyNqq9zEj67tC/9l77YHtgc+VpGqDXy4vmqKAj7ZuepRc1G/RpZ2WJIwhCs75gxFTomjN1RslEKy6vn/qT9Hd7xRrgOqaqOlkJk7Uo0wWUV+RicYn+T93BJmqn+ASg3KPJdh26s1ECDaKFqGeQodbdeOtp183YMAmZPErBTr6+SgDtFrycBTxDdwYH+8u4u0PxWJYM4ZqDpxwMI/4Yq3J0MMidEiB2a/cfAk/Rg0O/Jmq6qGL9feptC4PhxpzLSUsXV1PGAB5XdjxB7N50YIRmdHjZ22Ep8ulkWlDBSt5AiHi8Co0MhQF6yc/kn4+3dsQ76nXyuUb/v1431AeuNKniQtR05/dTByqKwd7EJ65+RzUC6vdlRSG1gVvrBc4Wg1n4T4eQcxG9FcopE7V6Jp07TVzq7127k5EuzKWqYBAIZVvGAcuAWDDltEid6jj+sm8dD0n6E5h/WJ34e4TG9UQhd183cAYSGuuGw1kuB5rx6W/HHy1Dlp5GMIvHNmklRbI5o0athMCl7+65CS09wi1snkVDjq98rb0xYWUTxWMTuI7wMZzkvOkjuX41&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;base64&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;NHC+6IJ8vUA=&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RUNTIME" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML-HEX" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;STATIC&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-aes-256&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;CBC&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME-Clear Request-Encrypted Response" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;secure_payload&quot;:&quot;{\&quot;request_id\&quot;: \&quot;${__changeCase(${__UUID},UPPER,)}\&quot;,\&quot;request_datetime\&quot;: \&quot;${__time(${iso8601_datetime_format},)}\&quot;,\&quot;sender_system_id\&quot;: \&quot;${sender_system_id}\&quot;,\&quot;sender_system_user_id\&quot;: \&quot;${sender_system_user_id}\&quot;,\&quot;request_priority\&quot;: ${request_priority},\&quot;test_indicator\&quot;: ${__changeCase(${test_indicator},LOWER,)},\&quot;client_code\&quot;: \&quot;${client_code}\&quot;,\&quot;virtual_account_number\&quot;: \&quot;${virtual_account_number}\&quot;,\&quot;transaction_amount\&quot;: ${transaction_amount},\&quot;currency_code\&quot;: \&quot;${currency_code}\&quot;,\&quot;payment_mode\&quot;: \&quot;${payment_mode_neft}\&quot;,\&quot;transaction_id\&quot;: \&quot;${transaction_id}\&quot;,\&quot;transaction_id_type\&quot;: \&quot;${transaction_id_type_utr}\&quot;,\&quot;transaction_datetime\&quot;: \&quot;${__timeShift(${timeshift_datetime_format},,P0DT-0H-5m-10s,,)}\&quot;,\&quot;sender_name\&quot;: \&quot;${sender_name}\&quot;,\&quot;sender_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;sender_account_number\&quot;: \&quot;${sender_account_number}\&quot;,\&quot;sender_bank_name\&quot;: \&quot;${sender_bank_name}\&quot;,\&quot;sender_ifsc_code\&quot;: \&quot;${sender_ifsc_code}\&quot;,\&quot;client_account_name\&quot;: \&quot;${client_account_name}\&quot;,\&quot;client_mobile_communication_number\&quot; : \&quot;9880001010\&quot;,\&quot;client_account_number\&quot;: \&quot;${client_account_number}\&quot;,\&quot;client_bank_name\&quot;: \&quot;${client_bank_name}\&quot;,\&quot;client_ifsc_code\&quot;: \&quot;${client_ifsc_code}\&quot;,\&quot;narration_1\&quot;: \&quot;${narration_1}\&quot;,\&quot;narration_2\&quot;: \&quot;${narration_2}\&quot;,\&quot;informational_message\&quot;: \&quot;${informational_message}\&quot;\r\n}&quot;,&#xd;
	&quot;secure_encoding&quot;:&quot;${secure_encoding}&quot;,&#xd;
	&quot;security_config&quot;: {&#xd;
		&quot;secret_gen&quot;:&quot;RUNTIME&quot;, &#xd;
		&quot;secret_key_alias&quot;:&quot;acme-des-256&quot;,&#xd;
		&quot;secure_secret_key&quot;:&quot;20afd3718ef00256a2b2de31e2e...&quot;,&#xd;
		&quot;secret_security_config&quot;: {&#xd;
			&quot;cipher_algo&quot;:&quot;RSA&quot;, &#xd;
			&quot;cipher_mode&quot;:&quot;None&quot;,&#xd;
			&quot;cipher_padding&quot;:&quot;PKCS1Padding&quot;,&#xd;
			&quot;cipher_iv&quot;:&quot;3483981280028292202393&quot;,&#xd;
			&quot;public_key_alias&quot;:&quot;acme-rsa-1024&quot;&#xd;
		},&#xd;
		&quot;cipher_algo&quot;:&quot;AES&quot;,&#xd;
		&quot;cipher_mode&quot;:&quot;ECB&quot;,&#xd;
		&quot;cipher_padding&quot;:&quot;PKCS7Padding&quot;,&#xd;
		&quot;cipher_iv&quot;:&quot;00dff92ab202393&quot;&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="STATIC" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;020a6ed4f23242a9235a3738dbe46d2e6635fccd98f2d083960808ce6195cdce0cca40c307f9b671f2aed3f63abfafeb3152f1d1e23e111dd6a229a006e807d79adf370f7171a715447d9195f2a688358e1237cc786c1973c4f990537d54324d7a23474de95a7f47c9851c23bfc76b7e2dee3d24f1f9f5a2d1d577baab6cbaafcef6c423e2dd80a4adeba9d67c38d48f0470c62f5ed88aef0fa9e828a3d759366a0b214b9aa52e1ba95aa41cdead57501bf76ae0a52e31c3076d5f3ec1ad9a3c817248cf6fe407d7d8258d7b1c5840ee89e448e4bf82c79dedf8a3148250b3c92348ef43295cb8a4f2bfa7370e38208f32e56ffdcbad17397f441241972163e5a4a2a513aca149a3bff65f1f7d70852faf9930dccc975e40dc89166c5685e47b9d9658fbffa745b865d6cf5f5828aeda5bc77034a6121e7261fee2dff2910bd3b98a49259048f509815eda77d6b5b6a1eac9c3fb2083d2f9c57a6c850f3fd1c216fc10c0dacb79bc9604d183ec62ea32279c132ddf977156bc82990306f2b1c575c94a9921ea4f73662d8e3b453e9b880ff8a73794ad5795065468440295a8827567e7ee1c3bfa5f883699876c2bdf402d84d951305db87e8abaa71209dc17143d7a862c6572579673a4b100906ab1e8925b57ba61a3e7f87376b8146cff404c5f65378610f2defb26caea54e40376ac64d9e1b0f09fdcba7f996823336e929eb05d72a2e8651414f29e57216cffaa028b172870cfcd064a082d09fae1b7b625cbd1368f576628525df7d980fc734a8fade5b84395aa6fd009833914f4b6e11e780cafe0fb74c2934f118105993f9f09e0e275598718a2fd712d7846d7d6161f39f76f428910961f763770ca8feff122a1c3c3de871de64a4dfe406629da73d11f2d085ae7e2f8a654f37d1c12711a78734ac1dafc1389d3a8afdeabec5afab10ec800960c3be978e386ed1b05ef3580988e164db49f9bfc3dee6025fa3256f448c9cf629d23fcdb16e483debe8fbecd383eca36892320dbf2775620728614602b2e09b3c959b837dc7e9c5c367cb22ae819ec6e6e5e3798c24911e5e8113758566f0d2e26997bb19497f0b14ee214a476953ac219b1b2a1ff1befd0bd699410fe7d2c82abbb421084ac15cd7619da48bec769f736d9c09fff290570deb66bf438c119ca10210447429f1275b0e5878062331a22401b3c7d1471ca7257959c65cda347693ba5f5d43647ab1c70e8a73647a71dfbc14e8bdc2dfca37ecccdf2ed915277c50d35cf7f8ee8075aea13d21472722cbdc2701b53d56d31fd104eb7e1b3f813c81c7fcf4eb0d76acd907216bbbb20b441e4400e7d2c5ea705250e35e2a37df25ec6de0748cc388ccdca5def11347e9acb14979224c911ba04b2f6015e66d9a28ae631a85a36d7255f4c29afee070a5f24c409b580514c0c769ebbbd9065ffecc672d047bfef185acd23313efd19bde8813d03e3bd69c4479c9815a21d936a9e96323c59a1ed6efc3b83f7122d6c9c28ebd239ed418c6caa6739012c9511658c5432ed9d30768a5bd23cc26b42f55618b63c1227438ad5bb4977802a8c51692947dfebba76edd92b58318d5462401f735d105a65a8ad156ce0251745b4003afad0690ed99b8fa185a328de73238a1f92bcd8afd529f4afbc4d5026b998f5964f3de942f53985b8ff991aedab752996cc9a94d54b23dd61107478392d514b729e5396cbd80a25c64d954bffd72c1e0d7589d7af3c3e687a3f3c0592c3719c681f5f5c2a65cb7c8114e05cab3433616742e0ebc529628bbb80d4b1da65131eb15b1f145fab3ee82023ecfce8745063cc75a0a34c9fc0a74ff263ba923da7788fb8dff7d3db826b71641f65d4705926f9ba8677e1b2d8f5224dc614696357cb2ab8a9291b47b6a65601ae9ce3c4aa7a18dc397a008996b92fcdc10e6bea5eb22705bf4b1690f67ae4d453ae607acbe0406d1facbbac9ec6ea430b00d4f69b19916a49eebd61924247cc28f3e45758a3ea23e46788f84f29ae17b0cd1434ecab52b7f1a7c4a0078640546654d1e9dd5dd0433b3f8cfd7fcf64a4fcf31b6dd109f7078b3208b2af56b9b59e059c569a03e15377bbdca29f1f296a49d6983b93&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;hex&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;3b1e18e4bdb8862c&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;4d78678fc1133abba88c6c6a77d055c688eacbdeb5a1bee72dfbf66511f3ac974e49b1f5bf447d4d477b13a478d499e9d297c1fcab2806ca41f6c51aba94a255c0f7d73e05fc55ef8b66ac4e13c24215caaf754901ea087603f061fe1e8da1db1473515e3389e67a73b047954249964af50e5b0d66cd7f9cbcb099eef09aa1d9e5929afdf236f416acbe65193029ef6b0a2637c0def76aad8b31c982003057b9dca08f9c2a7d115bae8397f6a24aecb465487c75678896d24dfa0ec490e5ca84b4c0de862eed43e844ca14328f7bb68b8676917c3ded711db60c80bbbec56fdde15b21ce7797fc3abb1a9710430b1e37898ce7b6d49833606a8d4a08694f2e38ea4d377c0e3dab972d0435df72e512c6c3ad20c3c9e756f42684ed47d521d4115b1479383b7872d58443f48e5e6869a3098c44a85252bb12c3381352ecdadc83d24085b2c0ea4e2c3bf9cfef7a953125bab7f67cc409ea3c08510eecedd8bfe55047e8a6eab14ec1568b14aa17895ace68d69f2335827c7102dfb1e42ec3b6b5dace4c6b8402c813f1555a51e0ebba82c41b18fc54a2fc464f0ec6db802d576cd4dadefb14800a7ed24d4bf16b268a02e2ed4c0208429354f577d161696c5aab842f77ba3cfc5f473ae9cb2894aa85aecfdead4fb0b3ac0b1c16762f1269286a9a66e61e6b775465f3e93fcd45b229ceb7e958d727e7bf7dc512ccad0a33db5de89d78f29d5feb974bcdf1dc163d5b7ffbe68e546d991f4c8356e8da04f4f6138ae63cf7312ab59179d0bcfbe1866f4d59ba93d7fdd75a78d82009ceae7aeb6701e3587439d4b6849643b379b0cf6cde6a2f1d0b8fc6273bfa1b4c4872fdd0388754638f5724340537e9f32bb1fda21107a21430b964b53a80209dd437d32f8e222dd690109a90b6ac8d740b119699d63c5e77834c490bdc0135225abf4469241aa41730fa585cd885e621ec787d507ed5a5337e9defa7088f0830d759e55fca777f28b3086072949caf88684bc586e14b5f806ccfd5a4d9ac5d580d12f9d1e02f59c09113598798b289c323f4ede8de016d6d3e9b03e2b549f3eb2df460f23f305cbceb9b6309662c5f70721448caf7f728198d3b23c5a55dfba34889217a43478c389d292eec7e9bfd8be496d028dec0e8520b050927aaf29c91ad7134f8d71ce72a292992dfa93cdd18e1eb749a020871710ae6ba829e1a09849259a8619457bc2ef64526ea2f401ba68b893dc3b3be2eb53da496d430ea3f1e23991028d25c1edcb2e64acf95e697298d4a1f7391ebb0c5f1023c0e1d20be626e4469a14d7e979583129f17d881b935702af8936eb2d5b402a9476635b5333add7311dffe9f8893c558258afd54618162d7f2c6a31fbce6ce38609bbb0c6cc0299d3371edd716ac633da206cd35e254da0ea5e1c3787d66ee7a1967612fc574d607b22b7214bece65ad91979d5945a09911d9cbb386ef99020111514ab9128fdbc8dece46f242bbff00a5c5d746202532623a8bb1e62ba38f36a818a733a49c028a7e771a4fca63704021c7e9fcb8f779a5bfdbd47b8c7023072ad7390c5966b8281bf45ad2b8c34558d75bf81255a24b5e57bc2782e9299c176ad7b82b99abbf3c25ca5580c314ce69ba8fab87c2d40e7cf1a5b235b8a924b57bb988c7486910a086a36d27c8383b4ee71f36810af09627a7cfee99baa687126956710083570165956948e5c86bf55e8087c5fc757f48491471ac4475c4ee7dd7760176cfa4cfc06f4f02c57040666b740d0dbc084dc4a21fec7f44bc458b587eee438816ca01e4ac6395624514670005797962695171385e5cddd4c7e53a6ea192a10a2a1c92cf7d017a56670415164222ba0ec2f3152f5d120f71192d464ab300396c879ce87b286023005352ba3e630770138ee523b4fc9cbb330fecdc6bbc36941a4a97a9959961d54f6dea4be4d1864b45276a40cb860632ad2e581f6f43f8c070f9d7a927781a02fe4b618d6a444aa5991525c08adb70f2a8e96f152d4c9c48677dc7f86bd5eacf0b608f71de9764645ecdc3388d6a993c377e0d38fd9f6c2ff2ae3cfb5429c0d0767f0c2163a04467f8506354929f6041072931f2723cc70dbd189d63d3629068ee1c6e5654553cded05871be4afa44f97557890dc21e61c6e7b10ed79a8dee7c9779fd2310cf393bfdd33abf6bee8ebf068cb3ce49bb260ae9322169c7a666f669b89df1cac7ba4eee1e74bc0495963f024a590d014c67ff6f2b49535270d9756cdaf7baafaf4d5d7f5b0c0126df2ac229b4a7ff598227cc4226de63b7b55a0881d539d38be6c38770677ad4ee8ead6853c7ad388677b27ef3dc3f6a643d16aed7333cc8755caac375dfc4b25de0ec42e34f93ecd9fd1ca35b4fce5de1b68ab37e8d1846f8fb800468cb78c1466cad9865f62657d745f9ae6c39552ee30ead9663e62e9a5c42ea45a5ea5aefafffc892a4076fc685bb1a1d4cb965a601b7b82c2dbdb106e92200b9eae81c9afd6e96d1b60710b3b60e9d37b938b166bc7e9d98dc2383f2bd06628e1a6c07d526ee593947f8c6c1284d678a4455702b151205bdaef8a434738974e0303ab736f8da68117db17b89da84ffea671d200fee8c0a03598caf83418b5682e2285664d48075f3fd09f4b48100fd0100074bf3577d1aefa13c09e4361f8de79f12c7075235cff83841e553086972723bf64741496262bd45046508a048e26c25c9c77f0e89d9eaeb7a7404b9d8ad20&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;hex&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;06a379db9690d833&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;4e8948db2af6bcc6b2477dccfc0e0043cc25342278eb106e13e9290e8a176d6035d104c83711451892d6be9b1fd041bce0a9234ef347f3ef955b9a6028be9ba750538d04d3fb7bc1b2249c58ad4e042a77d6fccaf2f1f4acdfb78e1e81c915ccdf71fb1074eaa3b6f534f99c4d45e0b3143d81ce99fdf402d621afeea78ff3b4bdf9ddb9c0ba79cdf02bd771cf855b4c9af3b35688b669047e23ebb0f7f13da93fcfc67049c468edce64755f1f1d2093e30934cd4f66ac00253c97689f7607d685ad0872af2b4a012b1c9b4e3d18486858ae1a1f51dbf7891b2d7fde383ca2a4b53cf40288b82f51f225e30c4ae235db010233bac40a61397e8540642859bfae77e954832079f3c98d63a91c540655dd44cac751ed03a1322ad69e69762a6f37f6e4cc922cbc0fe3075f980a8ed0dd22866fa081d39afcbd0cd31bb1f5b5f4ca0bbe33bbe80ac82ef0532c8f57276bee087f574c0a8e430f57e2846b86861a3648a51d7b91e4db46f527f53877b9fc993749dba06aea5a62236c403125a295daad5b1cd5f2d39ace2895c6ea7863563d535f53de890fd5e479d34e6832baf0cbd8d612bba79a9b3c511faf3c45ff2e0a075063d111536886dcb6dfcd494c622589eeedfbed230c5e90e9e290e0fda6a22f6b16a9ffffed7fa78c57be1b66190ed943615bbcb51baa5947a55ffe60d37193bacb6d3d8420f7eac925384363b7086133a013a714dde9b5884887645e8c5c710c649ad34f086dbd8f99dae1bdad56b5e62480475df9006cf4f41451a575ccd6e4ada8132e91ef87c31eb4999b03d63fd0eb62f970d6a22a02f361957c36ddda80e2b988f917b78b2e51ef5eceb71aae11e36cf6b25467634cd09d3a8f05131ab806e7b6aea1f0df3bc87499cbfa17a744adac27a22a4022ce0e38a1fb52588190b54a8bfaf2542c48070e5613264edf0880dab4ec1230fe77f6b2bc05edb15f2d3b89ed66a2ab46793bc6af11828ce12ce6bbde235f4a7bc50646dd61038c002dc7fcc31bffd3a95a1120ac72c20b3c5bf241a1583945aac6953181df289b3022798177ea7bce53e3dd5db8cce807c80bfde695dc664acc36fbc9812280aac99f6791f425526be1938d44e925817d0c4304468b8680aebdca81e24e33d9e09990427d970ead02c2e7320166653d0af119b5c0ca54ad3f2eed875e4c0170978dfcc5a2353a8bdc63c330cce551f2d15b80822e267ec37314bfb3ed78d723fe6d07a9b4f9e6436972976c11fb800ec97a1078e7865f6f4517e3928fdb22dc7b9b5a89fa768d9df1485e1964b5fcb916bf4db86a77c2dce7ae357750bfddd34b33586bf9fde7ebddf716e1bbaeca1c7c27bcd53dcf2883c78491e6df3311e4c6aa2d57e1c0b57cb9c8d01e834e24b8526a33ebbff929e4f17d3baa1aaa1902f57fe4946a869d8b6b9acf8e5abcd94dfd085bebb7ed1fdb7933d06f9f19003e8967621ccffd0b04a3d0d0efeb51eede55df91c44ee6fe36de3c1c6467b2a3738246fef2dce5a7ace3ba94f30d054d98614d4aa2c4f115faccd61201a5ec7dde3d6709ec5b8dc1227aa9b53b8fae2d89fd68d28c3384c4768ea5cc5d44a057946a2cc27925b83d8b85d30ffd70d69ae28dd44bb88275eb9def1b76b8b9987e0ffa9d6ace47702dd2fadb4190bbb5bbd7f1a91069f5afc8af0d686104706c1d9d0ba5d6378683843b4affb960369a3fdac7a45fbba2055cc2f15e887e3cde21c0586e2293d05074ca270e538485225aefde5284b25195c4cd9009603f9ef40838d4cbf812175eef6a06faad417ea13feea7bdf186b7e70a525d5e7f38a8df9e4b023da4c576732b6a49a442e91500e57e17cf186448be48b3fd181cedfd87e5b08d14f7eb68318733ae184f7bc30912b0f4d6b39f6de53bbb34b70526e6bb9ae029480b25265fce2b6e9f01befe4ac0488f40ff84f53065861a1d6914d269b22094a1a6628588909773ff5577b3ecb256bc1cfb482c29da5177b9706b29aa4df85ac783d1d99b788955685b3e0f06476c1c73cb29581b9cefba16c0994aae5fac498c8fc790a86719f6973783d8f62db418e75630bc2a11c986b9f511d956f0791a9f448386ec1d4d2dd478dab0b2f5123178511be07014f41cc3ad8e5364e766deb6463d5f07efedd45154957867c272e1773375f4229a41ecdfc510df987aefeaa07884cf2b0aa64f&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;hex&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;86ce7cf8d1132226&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-STATIC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;secure_request&gt;&#xd;
    &lt;secure_payload&gt;e803d56c7452e80be4ebba7b2e4892bea2e1067460bbc6930f3f769ded99bfe16cab19ed7501c4f0d0fe57c32dfabfe60d51878aa79c1791b343f1f13549d93e8621d75b7701880796afeb128de3ffc6f52c5dd011777cb6f05f347bc7afdfcff0b2f5f30c10e5fde015de8928965b40c30ed06e98a292b5a68d86065d4bfe1fc069882f34796a5de68462376ded74ab4463ec788866ad485c93489d31a5f9a1e9d8ca166f00cf6e640c020800e8d146e91a4529fa0720e2e8aa0b4339bcc54a4f914548397a5a60958919b68c31a36aa6b0fe68fbbef7fb7e697b772716d8d8ef88d58794bce20536cb596f5a1e0d9cf42f7b0f3fe6a510b40564dd8b60408bf7bad298e3e84f19de3a92a11b4decfb15a36af7c09adfbdd93b6bf8bd892e63dc422450c79a058b8f6af5fa0c9ef942e41a155ea2cdafd975634e6f1176bf0ad5ac874e25a40b61f2d91b7dae3be820d7002a799e0a26167fb33d3691f21dc7c4e1ba640145a8b8ceaf21a5dcd43c1eca31bfd97b047d7c6863619a0def5ac2748ff7daf1713d162369f9fe49975d4af79b6e710c8577a6351fef7fe13a24199e036376b69333b896dda9286b8fba2e1d2440401119febd78455511ce6c51a817c44a622d2119fbc654714d8807d9a81eb024607017664c42def8b6251539650bd7850822fef392d9d0f97fea6c179b55707bb43f34fbe79a045f39b0de61c5b60a4bc688b2b69e1792a1feeb92bef1657d7fab4c5c797121fcc2db4beeee9d1e20c393141cfeede9b0eab6ed6aa2dd9232c3944df53808c2cef96aa9ab4c11739eb1786e49c9a105360d7dc542621499d3a6bfc5fd519edb8219e11c40ef3f0db502f315b2b6c244608d52230644ac784f7092db99d9912cc5933d64aabd316a2de982a889d87c80a7d6ef2357dae2a7d91adf619112ec69b7bcd24db7550a17a2b4d6add2827767d2405a7d0767e70fe640744feaf1aae35d803e0a6a384014681cce3986cbf9ff9598c7bf8eba53004fbeefb5a55ade0b375c5e42895a302083211163cf773617c290ebde0907604c474182628b1e829e84c38be2a7be5fd2394d9ef25c71226ac656a6ed5e4b6956c35cc6b2e7656f1882e2d041d24a8405dc768207ca55a582882503c88a404f8212c95b0fe31fee59969040ac94f8ac31e623cd2354be8ef66c26e945fa743f9f53db11c67c8d32095de2cffacfed56648d076336e64ea76203808043efaf041afab32ec5b91bab07ef3c05ca83ba2aa0d0e9ce8507db90112caac89ad4b924c3d6347dd134bdd5b99593f352b3eee85391361d7476cbc26e5e8c930837fabfc3d835f83fdaddf96f35eee10982a849ed5db4ca6c0dfba1f8090fb8919f62342c042c2d6d990b9a67cccf057dacd2b3c7a5c1bef6fdc09b61536c443d4182780fa6c22816235c922ad0e91b08034cc1cc2cc15c4477669f45bfb885c42db86dae9fa739d11e96a3541a6a1adc431cecc8df63c169e1517a9599f32db7b6d88b83f63c3fd8da9bd0c93273f47375a54db5002a1c6a58bd6fdb4a43125205a36e10e4fd74ca1712e5d5dc87ca01e72eddd470d0576ad843aca718a385bb0d413d4373dd7c7ceada8e53a3c9e0daa721b4df643753dc48c6d822a5c3a7ccb325478f0a1de9cd8d7f5eddb1895457593e14ca81522236b43b48d7c3def4a3aebc7d3d3e9cb44de5e6d8c9948dc09dc5d4fcca4c9c2f1f3f913f1afef6887833095191cd6cd6bca7289a1d619566171b14c0c155d37b4511e0d8602dcc5f86aff8cc09b875caab9f5d2dab442b51e626f204ae4a7bd2e872c25a6e40330b0efd1bf25150707f132a2fd93dbef8afdd9c4a9a32f6f1d44085eb6aa9d1a29681358d9c3ef2bb5622c63ba27f73e6edd8492d7a9b0ca789e7f5ef79e3e12ea0a26da14b9476a0455e04a20a1f9b7ddabb66563c17fe3abee1c59fb7b4694cd030b60df8dacfd5b6e52ea562b5eaea04dfa12540a748e0050ec0d4de394c21789a8af63ab5b0d1131e34e588875e85359d12058e9906bc8658757f109e40a4bb80b6d95494f9a853a1804809e626b17dbe40e8c8efe8cc2b84b270daa3eb947242f48d13106eefd8113b9ef4195dcdf32a006389cbcc3dda2ca9d4545c096f38862859e59f4c655ef981cd91487976215ae39bcff5b6e022c038557ec08aca3f16c1d91b931f461820ea05ae&lt;/secure_payload&gt;&#xd;
    &lt;secure_encoding&gt;hex&lt;/secure_encoding&gt;&#xd;
    &lt;security_config&gt;&#xd;
        &lt;secret_gen&gt;STATIC&lt;/secret_gen&gt;&#xd;
        &lt;secret_key_alias&gt;acme-aes-192&lt;/secret_key_alias&gt;&#xd;
        &lt;cipher_algo&gt;DESede&lt;/cipher_algo&gt;&#xd;
        &lt;cipher_mode&gt;CFB&lt;/cipher_mode&gt;&#xd;
        &lt;cipher_padding&gt;PKCS7Padding&lt;/cipher_padding&gt;&#xd;
        &lt;cipher_iv&gt;96e27c7013a0bfa7&lt;/cipher_iv&gt;&#xd;
    &lt;/security_config&gt;&#xd;
&lt;/secure_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RUNTIME" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resent Request-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction Accepted-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Attempt-Transaction-Rejected-RUNTIME" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Secure-Requests-Simple-Confidentiality" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-SimpleConfidentialityValidator" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">SimpleConfidentialityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-only</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="DEBUG" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DEBUG Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;SWoWgVhMVb7DJu+6vjF+AxdzqJawK3UKFQzV3LKoE0zRQ6BZL6EWAmjlvjbbZhkHS66ywl84kbUqjEabONtx9cg8nV48CzzOtkAvqh8jDyxX3DRaR2F4HrkddlWzbBTKJdVaxycEYaojh3T/X96jItTYEq+5m3eyA+TByYM3tfk=&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;ODEMJM+cKwk9Flx5pmX092fyT/89bkkqJbSqWlTv0sUYOmnZ7U1lyh/pn1V/gGs++WlzyhnK6mWny4bU+f6Vy8FU7O/qKQLOcrDWHMd5QlRfm3AQJxp6Kk+wnx2gzQU/33SRqQOsfJwbRrfFZqtovL8FO6GEAZOaIvTGEQB2Qsg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;lW/ioZS8ybvots4eBzyMZspRa5m4yecYMZhszji6/ftsWCWT01oKhDSo5yQEJhzlAZTCUMGxBKdhb9SPLzJLCgCBUw85kuLqZHj/vAhJwlTiOQZ1ySSLWbz2CooHz/Mye6wcg1J5yNWrZdaGUAF4C6pqna5kAjMX9lBCnH8b9wU=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;eNRd+3TzMhOJ97+UQ3/7gP3J+v6sqd3sUHPpEbA15LxQsjCpWNIngOjBv0b4YJW/3z03ZPKTaA+9Gn4Z/wz4SAe8GPGWflWE+lbE4jD5ZPgdvQPKByPAMHtsrvf2p29qzaloNRJ9iaMhbn6ajgiqQilFQaIRmnbWxUFZHNggncY=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;ORSMs1EIV2odE0Efi1nk1DalMXRPUPDqHHpHzv4z4g0/FiFFDIXB/ZbK325ZGAqzjMaeyU8Pfuir4TTlKjVD1lVpq6loD0oVAyv0gWUpMSPh4rGm3upqqz5NHrhYxsznYCb7HXqHoRBR6LFU6ibmubtZkDdStXH0jmKoM/18KVQ=&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;oGSxzhIMptK127GO80tmZBM748I6FQ//U7aJE+V65WMmU9qEsLgWQeJ8F3zVJGMvSXN4tO83CBEb0JvNYItiudK+wdUIAg8sMPDBI8WoY34tisljVq/1E8odcmF4/PBul75XVbRFMBbsyH1ZapfcHeb+qs7uWp6tWjf4AawO87g=&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;FNDlWv0yok2263s50FiJhMU1kdX8DEFh2RAXgub2C/NQGDQllwaoJSl3i5Fu/bPMZ2gBpBaD+RhXhq2lhcQ45ev7pA9FaJBQgXaqQj9J6W+PfLbQCo3LOSBj0CjamovQFhzQTznfgvTQhTk6ZpM0mx1s2IwXhiYGKguAB8Z0iA8=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;XMm090T44E0dYnoQMksKsptUvgoHTrvhuTTUR2bJOJUVjklqwbjzr40KdZrAEXy6vs4Sop9jL4nQIut4S5wHtiy6UWDveqZnpxKlp2gekIiwpDUJw6jCrffWvcRba4JlMW1HM06U5A4PM2wWxmrm0JYOkrXAHIKJtd2bf0sMtPQ=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;lHjKPqFF0+XRpz4GJGM1esjvLZBctE5PloleuGuOdRNVIQMwrE7Fb6TMRppgX1N0lXn19pUbk3qZnRzxuIKQfAR4tQ85yv4kEdb7wuv3h6fHNg2eAQZgtvuwRhrh4AASk1n1ybGBdJUxXDa6SGgcFIuUqxSSa9+idYnLLcHphyA=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;RjKMrlfoAEPBEVm/Z9dx0mfkHqj4TOY1i0zfLrXFhvXjP6osvfWygATn2sc2lG/+z2Rdl26r+VR9eyc8FMSI/o5pffSgE3TbJviRNDqj+F4nBrOJtMIJRWAvUMZmI77ITM0ESnZDwPceVdfdmL5pEI6x66NKT4T5NR194GJySE8=&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;dEKnv8PfRXmzwM7x+sepGNVomwUE6Rbr1UJp4YJtAMpzIReG20NYzCS/b7GJA6NpM5KIP7lhKZUE3RcKqz7pkDgMnD9XPA5wQ/5PV2CK2Im4v07uVV5grpj26CuUQJzoJDvTKPgqic+8SbxWptcUhddwSBj0XiMuvL9tmLhSpbs=&quot;,&#xd;
  &quot;currency_code&quot;: &quot;jLNpVegL+zT8iLbbpSAoG7vcMHmNlF9nOf3ykpGXa+ZPkw2wDF8PQxphCWzVXdHzsJmvX1G1oZSyUHkrYdJtO12GeOV4tzIFlIxwa+YOr2feIg/rzZ6XW2LVJBa0WFk8JQZG6wEXUAxFmn/mBbQzGxiLFgQ/zMMqLI4HRtzwyxc=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;kSHrcB1RfCzFNs6BmC9Xj5sYLnE3i5Pr1GkMwm0RPncGWbmXkr60aFru5SB0G0RUTxV1k/jxzmN884BATHJQWHwgvdQweIbEKKVmP905Zr8o1Q2tdfGMQ7QLgnXre6uxa++B4UOoLYoQ7llruNCDuSAsqXog62WiEsuEC5nnXFA=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;dHkmzZvgzXjtlsU+3Ig/YMANI2LodcMtqDiO73S5YFostLuVFlib34OppsNvVMoY8m6xh7qW/2VdRB/Fk6PKFk59hWPqHkRqRhh7bV2Cim3Czhsl8d5ziFP9M0fyBnSvA5aYKZLOcmnOQH72eR4sn9lCUDpA2YCUxr1OHQDSHvE=&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;EcrVY3pDJKFhPqNEXl5YTFO2ORYVlZRvfN4Tt3Lk3w46sxPJWf/SMFQCGfyhSGFj/KFtGVj8Hh28958rFzSrjS8UJW7mCG5faCPtft9JF/jozocuSiF6VFrNvOpz0Yy5ccPlrWPHRxx95GLX0+WCsLnUwZJHYD64oSxxdgmdYsM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;kWS3S+XiB7zocJJX9cztWq6KhdGNLrD/TscrjTdjYbLyYkhkvzaf5AXpxqhy1u5FrJJbyVOi+9QwY8OrgLzM5/G3yA1tG29nhaAY697bdAj/2vSdGbU274dEraYh/6Ahh7p9sDb9NTh583pQd6qTnOy+suMZbPZc1vOv0O55n28=&quot;,&#xd;
  &quot;sender_name&quot;: &quot;MSiJZi7vGZLsOx2L9+JK8Zbi8hPSEdD8OYfViUCkBzh+HiYYAdVq7NxOurCMGm7VczIjDPm0Q0pTrCcyrBcyNaFgKOUHJAymonrf41S8p0uochJOgfnOZwIDFkTpE7dLgX3yqnFyIzQlXnCQJ9pVpAKHWY5RPHoB3XYpnVBYgQ8=&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;EkmNYuJUzUKbyC+PkDIbYP8cwHjWLBnORszga8KHwnxg+cyavwaTq65qFSwimeZwHzySID6+NVEPFcfi4oU+dKSX3Rs5lkqJYzjzLkWsYD2OF2gEnyUygaSnerTOEo64lPKA8eftDTeF3OVG9qsleDmXjUM3h1bOYaCoFXWSHyg=&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VyZSgzxKCDrZmcOxRJjK9W1cMAwNuzuPintqcTZVCpKcH1uA436k5Rbqwn7dVxoyWU1IltVeQ5RM5qqOSY7ak6lwhSqhFTW3j6vW4+cVHmWUb7J8BpSRpfvU68JQMxs4lLqKOsNOoIuBGXbuBK5Dm98BVPkMQocjxK0gwy/mrYs=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;L5hYkl95AapzbY4u3sNVL3GbrF3gqYm5BqkuZc/CHCit9M0jAlqgNjm2/2bAXvpixsu48nHHRuQ3KFnHQ1Q8kNIjQBiDlgHAPLtfibmUyxeTG4zO7hmZgUb7BY2P74KJQkGlBuqaYNJFUAQdIhgU0RWQG/H6uzfEZZuWmez2zbw=&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;ltY4kJXbz2/WyEAQ/czAWhBYkOFeOkXt6Y/y2zTIBOGmSbTsFk0+/UYWDT1NxpQ4TPpRJ0MQTfRQqvwovUHsGGaCFyGiFTV366MJhVZ0ACRBPLuejIUXYPLSGYBYcrBw1EjVDsl7gCqARB0EZesOkA4XTcaf5H9qXegE2AsrZmw=&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;SolTxY/nQMLIl5bPM66gT+5/g8nOjvj06/Rs7+BhOlXFX8tuFGBcbTad55g5fRgVpFDVH+q0kTKsnYxE+BIJxvkFSrib22JzlgGwZSX8ioHzZF3o5tCjkJePmxcf7O1D8bTf0Wwmr33MtSdsdHiZadb3X8LwvswZSimwMmcPKnY=&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;HBOobsG3MDkRTOIicTgQonSTONrqMrK9yKgUgsYM6NwANH4yDmPVYkVGeS9xpYQPO5r7KK0Mu48KAzIPt7RJ+RdZXTYry26bKlUFaWKiHV99vvi5bhYcT26aq+HVLLzrmO+NTUsn3PvvvGHMH2/X6eAUeK+PcW3mIrszsycCIqQ=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;EnCqLIGJxZIpzlKcqvAQ00SlCvnlFX7IEG0xd4KvUwNVbZdRlgWUkhv/Fh+rhsRIch4cHhT9zucOfdgJUy9Kk3F6MKPVy3EAB7ZXLWzBBZDbREEgMxuS8uIVCbIDG6kEJaUTPCAKC0hH/7GgLxSmWxuTirLNcgeAIdbbJuDHB7Y=&quot;,&#xd;
  &quot;narration_1&quot;: &quot;D1DRuwMqeXaI2uEJ/ruTepqniHQqR0wJ5tQ7FH4RsPH7ffojFIzRvue9Dt0KFGqG+CJtuFLHbnht8IjtCRxeAR+myrsiUJAQIc5sxoxowodY1U1YAG6znfLIKX4mpjqfsA+0I+lIfVMkzmjJiiww7OWA3xsF5EMaOyt/0llXL/w=&quot;,&#xd;
  &quot;narration_2&quot;: &quot;P/nkX3JAtYweL7dy0MoJJZYoHM9+wuZ/S+yCheSXKLTGybEuEIIC22fWuCqjcRvJ4PT5asczagTPqJINN3NAYQSZwTQPX4+un030TYZVKLyUc8vYERtrZyENgVeHncEuiLkSBU4TppuLG48OKCua4B9y4wTmVsu2JIR/2m8rBCE=&quot;,&#xd;
  &quot;informational_message&quot;: &quot;kLw/QofrYrClKaAPPmSDsRwur22oSaQApUyhzhUT1LVRhOh7A0bqLS5ZjyBalZ9USG1jyL+vGo5Vx7VC0s9wvTVGV/zuXKlOtmvPt1CGk3yCmA7MXkIMg2/xBeB0GvHjYc+LS9UXHoPAiQ0siG6fkanVOX+w18F2LFnnjA0hsdw=&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">RSA</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">ECB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS1Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">public_key_alias</stringProp>
                      <stringProp name="Header.value">acme-rsa-1024</stringProp>
                    </elementProp>
                    <elementProp name="confidentiality-variant" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">RSA_ECB_PKCS1Padding_acme-rsa-1024</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX DEBUG Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;7922b76253b9dcf0f3fae0d7855b9f8c0f4476483992400dfb0bad99ef46a86a&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;3844dd043a90b082&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;7f31af663993b381&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;7b31bb6055fe99ef1ae50ad1684c4829effb9c4d6ef0b626&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;3f44dd043a90b082&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;6d22b6705894b486&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;4a0097463993b381&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;4a079b4d65a784b4e9602d1981d1b165&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;397be2330db987b56b50e2f461e3f20c&quot;,&#xd;
  &quot;currency_code&quot;: &quot;420d88063892b280&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;45069c573993b381&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;3973e8330fa787b54ff60c275cbb4220&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;5e1788063892b280&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2894feddee4883cee11c&quot;,&#xd;
  &quot;sender_name&quot;: &quot;5f31a36a52f997c9c0be4b3ae13a58e3de321b360cce196c&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;3b74eb330ca780bd1d682f9d3ee9b47a&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;580193063892b280&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;5801934d0da787b5b8579f52567c2006&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;4a27bb6d54b7e7e026d4a1b03ee5e95b00c8950285f97844&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;3b73e2320fa785b7c3acfe7b99806847&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;420093407494b486&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;420093400da787b5ad7ed918cd3e7777&quot;,&#xd;
  &quot;narration_1&quot;: &quot;4522a8715ce3deea9f03e702496877f6&quot;,&#xd;
  &quot;narration_2&quot;: &quot;4522a8715ce3deea9f03e402496877f6&quot;,&#xd;
  &quot;informational_message&quot;: &quot;4a63ab7654f4dca59e212605a722248611d0906f08d0fb6c32d71f74c406c4e770dc72eb08954e0e0db4888db5774162&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">hex</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">19c36f212a85f0a9</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DEBUG Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;dTrHG2bNmXPfJYe0K+yVDSNKKOLVKq0y+WZFQxCdKvg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;NFytfQ/k9QE=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;cynfHwzn9gI=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;dynLGWCK3GxQZtzr+B1LkDqQuYN8qQN1&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;M1ytfQ/k9QE=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;YTrGCW3g8QU=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;RhjnPwzn9gI=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;Rh/rNFDTwTd2tLmgaKVtog==&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;NWOSSjjNwjairz8vHcZEjg==&quot;,&#xd;
  &quot;currency_code&quot;: &quot;ThX4fw3m9wM=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;SR7sLgzn9gI=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;NWuYSjrTwjbngY0QN2O5aw==&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;Ug/4fw3m9wM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLXhpNKsoGc50Ff&quot;,&#xd;
  &quot;sender_name&quot;: &quot;UynTE2eN0kofTBmPcdxWPWFmlMfp3TVC&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;N2ybSjnTxT7lYe02KX/mnw==&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VBnjfw3m9wM=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;VBnjNDjTwjaW3RmOuVbf0w==&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;Rj/LFGHDomMSZarshqC+j3rixi7j35eE&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;N2uSSzrTwDQqveW+4/SIYw==&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;ThjjOUHg8QU=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;ThjjOTjTwjYzlaGvdmKHJA==&quot;,&#xd;
  &quot;narration_1&quot;: &quot;STrYCGmXm2nRmevek13GPg==&quot;,&#xd;
  &quot;narration_2&quot;: &quot;STrYCGmXm2nRmejek13GPg==&quot;,&#xd;
  &quot;informational_message&quot;: &quot;RnvbD2GAmSZZ3AxfPU4Dr5ygmQX2i+5SPR8YZ/AT9hOt3wSjMc4PG6e90HVf2+kB&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">R/qpF6B3lgI=</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;Z2uc3MbSaeLj4y4cSVMVKIddPMLUf4u9OvH8DfRJXWWqxSow5rIjVwLsQ4MbO3Nf/N1OQ3CUKtdGH78jTvXggj2+xen1jkm5T/atUcfuSgq0irym2XuRCcoJjZ9P1Jx9RY6XEIqy/868OuZroJc7i+Ji88+logMQ7/NAaAU2uFI=&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;SmqzXuig+uBJ5+fNxSjuumWruWbzO7lpc2A/pINM9v/MErrH+c+2RvTNofU8sH8jzfr0jiN5ZJB4KCvtLbausQbyEjIfEoM7Dp3VphYFXtXOCKksFblPqvZlVBaOuGr/89HKBvYMZkfxc8gsHui25kAW4gyJAlPE4YTID+SsGwY=&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;SWoWgVhMVb7DJu+6vjF+AxdzqJawK3UKFQzV3LKoE0zRQ6BZL6EWAmjlvjbbZhkHS66ywl84kbUqjEabONtx9cg8nV48CzzOtkAvqh8jDyxX3DRaR2F4HrkddlWzbBTKJdVaxycEYaojh3T/X96jItTYEq+5m3eyA+TByYM3tfk=&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;ODEMJM+cKwk9Flx5pmX092fyT/89bkkqJbSqWlTv0sUYOmnZ7U1lyh/pn1V/gGs++WlzyhnK6mWny4bU+f6Vy8FU7O/qKQLOcrDWHMd5QlRfm3AQJxp6Kk+wnx2gzQU/33SRqQOsfJwbRrfFZqtovL8FO6GEAZOaIvTGEQB2Qsg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;lW/ioZS8ybvots4eBzyMZspRa5m4yecYMZhszji6/ftsWCWT01oKhDSo5yQEJhzlAZTCUMGxBKdhb9SPLzJLCgCBUw85kuLqZHj/vAhJwlTiOQZ1ySSLWbz2CooHz/Mye6wcg1J5yNWrZdaGUAF4C6pqna5kAjMX9lBCnH8b9wU=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;eNRd+3TzMhOJ97+UQ3/7gP3J+v6sqd3sUHPpEbA15LxQsjCpWNIngOjBv0b4YJW/3z03ZPKTaA+9Gn4Z/wz4SAe8GPGWflWE+lbE4jD5ZPgdvQPKByPAMHtsrvf2p29qzaloNRJ9iaMhbn6ajgiqQilFQaIRmnbWxUFZHNggncY=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;Jrhu6DlUvrxa1NNSnKTx6X3rV/ZdqRzDhjeRn5PQge2u7AM4ix/1MrjsNg5b/jV36U3lCWDf83Vb0ogfSzyD4Sa6fOyC3IbaNlxD+UfQO5QpqXZwJbol7Ce6/TWHTqUJKh5lElZZ60zV3jRbo8ImQs3lMUp3LF9VUnJeMY1CK1s=&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;Ck8ICSarnJTDyeD8JJ6hazL9RaMsxQuG7Lyvm8s3f9eaji8zlNx5Aa3Jm76wVIL9TC59Gci6vJ1Vta9b9WBxU0qudhQQpvtlBmT/ORdPS4XbANOWre/UxLPjOCnduT1IxjCvibR9Na9czY/9cmzhtgiEUN/YFPy570Mh0YMuWnE=&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;ORSMs1EIV2odE0Efi1nk1DalMXRPUPDqHHpHzv4z4g0/FiFFDIXB/ZbK325ZGAqzjMaeyU8Pfuir4TTlKjVD1lVpq6loD0oVAyv0gWUpMSPh4rGm3upqqz5NHrhYxsznYCb7HXqHoRBR6LFU6ibmubtZkDdStXH0jmKoM/18KVQ=&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;oGSxzhIMptK127GO80tmZBM748I6FQ//U7aJE+V65WMmU9qEsLgWQeJ8F3zVJGMvSXN4tO83CBEb0JvNYItiudK+wdUIAg8sMPDBI8WoY34tisljVq/1E8odcmF4/PBul75XVbRFMBbsyH1ZapfcHeb+qs7uWp6tWjf4AawO87g=&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;FNDlWv0yok2263s50FiJhMU1kdX8DEFh2RAXgub2C/NQGDQllwaoJSl3i5Fu/bPMZ2gBpBaD+RhXhq2lhcQ45ev7pA9FaJBQgXaqQj9J6W+PfLbQCo3LOSBj0CjamovQFhzQTznfgvTQhTk6ZpM0mx1s2IwXhiYGKguAB8Z0iA8=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;XMm090T44E0dYnoQMksKsptUvgoHTrvhuTTUR2bJOJUVjklqwbjzr40KdZrAEXy6vs4Sop9jL4nQIut4S5wHtiy6UWDveqZnpxKlp2gekIiwpDUJw6jCrffWvcRba4JlMW1HM06U5A4PM2wWxmrm0JYOkrXAHIKJtd2bf0sMtPQ=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;lHjKPqFF0+XRpz4GJGM1esjvLZBctE5PloleuGuOdRNVIQMwrE7Fb6TMRppgX1N0lXn19pUbk3qZnRzxuIKQfAR4tQ85yv4kEdb7wuv3h6fHNg2eAQZgtvuwRhrh4AASk1n1ybGBdJUxXDa6SGgcFIuUqxSSa9+idYnLLcHphyA=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;RjKMrlfoAEPBEVm/Z9dx0mfkHqj4TOY1i0zfLrXFhvXjP6osvfWygATn2sc2lG/+z2Rdl26r+VR9eyc8FMSI/o5pffSgE3TbJviRNDqj+F4nBrOJtMIJRWAvUMZmI77ITM0ESnZDwPceVdfdmL5pEI6x66NKT4T5NR194GJySE8=&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;dEKnv8PfRXmzwM7x+sepGNVomwUE6Rbr1UJp4YJtAMpzIReG20NYzCS/b7GJA6NpM5KIP7lhKZUE3RcKqz7pkDgMnD9XPA5wQ/5PV2CK2Im4v07uVV5grpj26CuUQJzoJDvTKPgqic+8SbxWptcUhddwSBj0XiMuvL9tmLhSpbs=&quot;,&#xd;
  &quot;currency_code&quot;: &quot;jLNpVegL+zT8iLbbpSAoG7vcMHmNlF9nOf3ykpGXa+ZPkw2wDF8PQxphCWzVXdHzsJmvX1G1oZSyUHkrYdJtO12GeOV4tzIFlIxwa+YOr2feIg/rzZ6XW2LVJBa0WFk8JQZG6wEXUAxFmn/mBbQzGxiLFgQ/zMMqLI4HRtzwyxc=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;kSHrcB1RfCzFNs6BmC9Xj5sYLnE3i5Pr1GkMwm0RPncGWbmXkr60aFru5SB0G0RUTxV1k/jxzmN884BATHJQWHwgvdQweIbEKKVmP905Zr8o1Q2tdfGMQ7QLgnXre6uxa++B4UOoLYoQ7llruNCDuSAsqXog62WiEsuEC5nnXFA=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;dHkmzZvgzXjtlsU+3Ig/YMANI2LodcMtqDiO73S5YFostLuVFlib34OppsNvVMoY8m6xh7qW/2VdRB/Fk6PKFk59hWPqHkRqRhh7bV2Cim3Czhsl8d5ziFP9M0fyBnSvA5aYKZLOcmnOQH72eR4sn9lCUDpA2YCUxr1OHQDSHvE=&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;EcrVY3pDJKFhPqNEXl5YTFO2ORYVlZRvfN4Tt3Lk3w46sxPJWf/SMFQCGfyhSGFj/KFtGVj8Hh28958rFzSrjS8UJW7mCG5faCPtft9JF/jozocuSiF6VFrNvOpz0Yy5ccPlrWPHRxx95GLX0+WCsLnUwZJHYD64oSxxdgmdYsM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;kWS3S+XiB7zocJJX9cztWq6KhdGNLrD/TscrjTdjYbLyYkhkvzaf5AXpxqhy1u5FrJJbyVOi+9QwY8OrgLzM5/G3yA1tG29nhaAY697bdAj/2vSdGbU274dEraYh/6Ahh7p9sDb9NTh583pQd6qTnOy+suMZbPZc1vOv0O55n28=&quot;,&#xd;
  &quot;sender_name&quot;: &quot;MSiJZi7vGZLsOx2L9+JK8Zbi8hPSEdD8OYfViUCkBzh+HiYYAdVq7NxOurCMGm7VczIjDPm0Q0pTrCcyrBcyNaFgKOUHJAymonrf41S8p0uochJOgfnOZwIDFkTpE7dLgX3yqnFyIzQlXnCQJ9pVpAKHWY5RPHoB3XYpnVBYgQ8=&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;EkmNYuJUzUKbyC+PkDIbYP8cwHjWLBnORszga8KHwnxg+cyavwaTq65qFSwimeZwHzySID6+NVEPFcfi4oU+dKSX3Rs5lkqJYzjzLkWsYD2OF2gEnyUygaSnerTOEo64lPKA8eftDTeF3OVG9qsleDmXjUM3h1bOYaCoFXWSHyg=&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VyZSgzxKCDrZmcOxRJjK9W1cMAwNuzuPintqcTZVCpKcH1uA436k5Rbqwn7dVxoyWU1IltVeQ5RM5qqOSY7ak6lwhSqhFTW3j6vW4+cVHmWUb7J8BpSRpfvU68JQMxs4lLqKOsNOoIuBGXbuBK5Dm98BVPkMQocjxK0gwy/mrYs=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;L5hYkl95AapzbY4u3sNVL3GbrF3gqYm5BqkuZc/CHCit9M0jAlqgNjm2/2bAXvpixsu48nHHRuQ3KFnHQ1Q8kNIjQBiDlgHAPLtfibmUyxeTG4zO7hmZgUb7BY2P74KJQkGlBuqaYNJFUAQdIhgU0RWQG/H6uzfEZZuWmez2zbw=&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;ltY4kJXbz2/WyEAQ/czAWhBYkOFeOkXt6Y/y2zTIBOGmSbTsFk0+/UYWDT1NxpQ4TPpRJ0MQTfRQqvwovUHsGGaCFyGiFTV366MJhVZ0ACRBPLuejIUXYPLSGYBYcrBw1EjVDsl7gCqARB0EZesOkA4XTcaf5H9qXegE2AsrZmw=&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;SolTxY/nQMLIl5bPM66gT+5/g8nOjvj06/Rs7+BhOlXFX8tuFGBcbTad55g5fRgVpFDVH+q0kTKsnYxE+BIJxvkFSrib22JzlgGwZSX8ioHzZF3o5tCjkJePmxcf7O1D8bTf0Wwmr33MtSdsdHiZadb3X8LwvswZSimwMmcPKnY=&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;HBOobsG3MDkRTOIicTgQonSTONrqMrK9yKgUgsYM6NwANH4yDmPVYkVGeS9xpYQPO5r7KK0Mu48KAzIPt7RJ+RdZXTYry26bKlUFaWKiHV99vvi5bhYcT26aq+HVLLzrmO+NTUsn3PvvvGHMH2/X6eAUeK+PcW3mIrszsycCIqQ=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;EnCqLIGJxZIpzlKcqvAQ00SlCvnlFX7IEG0xd4KvUwNVbZdRlgWUkhv/Fh+rhsRIch4cHhT9zucOfdgJUy9Kk3F6MKPVy3EAB7ZXLWzBBZDbREEgMxuS8uIVCbIDG6kEJaUTPCAKC0hH/7GgLxSmWxuTirLNcgeAIdbbJuDHB7Y=&quot;,&#xd;
  &quot;narration_1&quot;: &quot;D1DRuwMqeXaI2uEJ/ruTepqniHQqR0wJ5tQ7FH4RsPH7ffojFIzRvue9Dt0KFGqG+CJtuFLHbnht8IjtCRxeAR+myrsiUJAQIc5sxoxowodY1U1YAG6znfLIKX4mpjqfsA+0I+lIfVMkzmjJiiww7OWA3xsF5EMaOyt/0llXL/w=&quot;,&#xd;
  &quot;narration_2&quot;: &quot;P/nkX3JAtYweL7dy0MoJJZYoHM9+wuZ/S+yCheSXKLTGybEuEIIC22fWuCqjcRvJ4PT5asczagTPqJINN3NAYQSZwTQPX4+un030TYZVKLyUc8vYERtrZyENgVeHncEuiLkSBU4TppuLG48OKCua4B9y4wTmVsu2JIR/2m8rBCE=&quot;,&#xd;
  &quot;informational_message&quot;: &quot;kLw/QofrYrClKaAPPmSDsRwur22oSaQApUyhzhUT1LVRhOh7A0bqLS5ZjyBalZ9USG1jyL+vGo5Vx7VC0s9wvTVGV/zuXKlOtmvPt1CGk3yCmA7MXkIMg2/xBeB0GvHjYc+LS9UXHoPAiQ0siG6fkanVOX+w18F2LFnnjA0hsdw=&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">RSA</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">ECB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS1Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">public_key_alias</stringProp>
                      <stringProp name="Header.value">acme-rsa-1024</stringProp>
                    </elementProp>
                    <elementProp name="confidentiality-variant" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">RSA_ECB_PKCS1Padding_acme-rsa-1024</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;RBqTSUnXtEPLaaybFwr7Roau4Ew6qqmYlqzgT/tc7HT9JGZV9NHu6w==&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLUg0DlKBv6lDjYht6Z0Y3R0cU=&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;dTrHG2bNmXPfJYe0K+yVDSNKKOLVKq0y+WZFQxCdKvg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;NFytfQ/k9QE=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;cynfHwzn9gI=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;RWqZSDDTsUCVyjcN7YAtG26ggGynN7nuRIDhpA0WQC5bADsTI+JHtA==&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;NWuYSiXTyiv4sdlDh3LUg4LFZXKJHvwW&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;dynLGWCK3GxQZtzr+B1LkDqQuYN8qQN1&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;M1ytfQ/k9QE=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;YTrGCW3g8QU=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;RhjnPwzn9gI=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;Rh/rNFDTwTd2tLmgaKVtog==&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;NWOSSjjNwjairz8vHcZEjg==&quot;,&#xd;
  &quot;currency_code&quot;: &quot;ThX4fw3m9wM=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;SR7sLgzn9gI=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;NWuYSjrTwjbngY0QN2O5aw==&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;Ug/4fw3m9wM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLXhpNKsoGc50Ff&quot;,&#xd;
  &quot;sender_name&quot;: &quot;UynTE2eN0kofTBmPcdxWPWFmlMfp3TVC&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;N2ybSjnTxT7lYe02KX/mnw==&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VBnjfw3m9wM=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;VBnjNDjTwjaW3RmOuVbf0w==&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;Rj/LFGHDomMSZarshqC+j3rixi7j35eE&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;N2uSSzrTwDQqveW+4/SIYw==&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;ThjjOUHg8QU=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;ThjjOTjTwjYzlaGvdmKHJA==&quot;,&#xd;
  &quot;narration_1&quot;: &quot;STrYCGmXm2nRmevek13GPg==&quot;,&#xd;
  &quot;narration_2&quot;: &quot;STrYCGmXm2nRmejek13GPg==&quot;,&#xd;
  &quot;informational_message&quot;: &quot;RnvbD2GAmSZZ3AxfPU4Dr5ygmQX2i+5SPR8YZ/AT9hOt3wSjMc4PG6e90HVf2+kB&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">R/qpF6B3lgI=</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;4802e3307ca3f1c0540dfa55a2dc7732bd4a7d5133e20fde3d770307a1bd71d1518dabf210b9a7ad&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2b91a127c38257d085a7bcc5204a95498c33&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;7922b76253b9dcf0f3fae0d7855b9f8c0f4476483992400dfb0bad99ef46a86a&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;3844dd043a90b082&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;7f31af663993b381&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;4972e93105a7f4c31404cff42b8516c4862621dd3fb8ea85da3616bd8e59b87f379468841ae7c475&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;3973e83310a78fa80afe62e51aed2b9163c9267a0d083b7d&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;7b31bb6055fe99ef1ae50ad1684c4829effb9c4d6ef0b626&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;3f44dd043a90b082&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;6d22b6705894b486&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;4a0097463993b381&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;4a079b4d65a784b4e9602d1981d1b165&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;397be2330db987b56b50e2f461e3f20c&quot;,&#xd;
  &quot;currency_code&quot;: &quot;420d88063892b280&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;45069c573993b381&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;3973e8330fa787b54ff60c275cbb4220&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;5e1788063892b280&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2894feddee4883cee11c&quot;,&#xd;
  &quot;sender_name&quot;: &quot;5f31a36a52f997c9c0be4b3ae13a58e3de321b360cce196c&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;3b74eb330ca780bd1d682f9d3ee9b47a&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;580193063892b280&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;5801934d0da787b5b8579f52567c2006&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;4a27bb6d54b7e7e026d4a1b03ee5e95b00c8950285f97844&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;3b73e2320fa785b7c3acfe7b99806847&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;420093407494b486&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;420093400da787b5ad7ed918cd3e7777&quot;,&#xd;
  &quot;narration_1&quot;: &quot;4522a8715ce3deea9f03e702496877f6&quot;,&#xd;
  &quot;narration_2&quot;: &quot;4522a8715ce3deea9f03e402496877f6&quot;,&#xd;
  &quot;informational_message&quot;: &quot;4a63ab7654f4dca59e212605a722248611d0906f08d0fb6c32d71f74c406c4e770dc72eb08954e0e0db4888db5774162&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">hex</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">19c36f212a85f0a9</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="DEBUG" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DEBUG Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Ru4E8IP/fdp628gTdquLjBuhpq7SHQWq5ISl6SS09XW44Z9pw/Q8kzygkyAFgRDz/lVKcErp7q8k4hX/BiyGSCVsDbefcti3f5/70RfswcepHq9Lo6+2xBvTQQyNcqsYLuneONeRf3rhMBODG79uJ7/3rsFn0N1Ovauj8I+nZxI=&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;MGEfBJj9TTrt6fAwaKzDg/fZOujuUFj6oWj4cxW1KChRXQ6LUiWpDWo5jEU8VjxWy7qRAO1ZulxPNWDct5aPN2cXruS6vZge0MZF5Z23o2UC/K0C9BLrw/mwk7qUfol0pOol8yL6DrbEZ6RHrUu1Y07dQfej+PkKXivvJ18yJhA=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;ZwzldpzuukotL1qaAtRbTVYU9C9wbVNrSHm3jk07SVzId1qo3vP8h1l63uKUpuOusdfmnfOFYIYj0IZ6cNy3s4r0hOEEgiju/3EWyV2rw/LtSoUrXtxuVVAiMhWQ3MledAl87WF/FRUWgTW3EdZ9cTG03SgxulN101xnsLuVBB0=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;aejyO55KFHjjeLm0Vrrsp0NqbRLagIqGZJdKm5QKOuxR9+8o5b4yIl0Wj57OkQF/4Hz0VnQZDCtVSIs9A4lH5C/3DHUeGne5t1tnRefz5Ka16eIM7x4TVieF1Pu71p3Tmp3Us8CdJj6wfkLrOLQQFlnB83+jb6N+5eA1PBQ5ZuE=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;fvj1J4XT/bW+SWl5sAvTekvx/WReMWeUXNpGnjV+n7m8Ubag9CH6eG06358YzZHmkBUIfRZzRF3TACLyAVRzNehgzgJMJgs1Pt7YE875EGqcKzM8evoyCCqltSqnNhWUN+ib+0BBUHBLXMXFm48YxJnF+/kGa/JjLbk/mC6x61Q=&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;M2s2OGeRNE65QM0S5AhF/dqNdRbNQj6e6Ima/EW9OBs3unWCYZJTYtqMi2UyhnK+UuCshdlBU2tZf/wLjY2ynGnreExKBPbCCVvCiCjsFer1D2jvqRy8ZXt3ZeVkDopLUL+VZwx7oO5giGuBwUh1eRPw496yMAyCpWaSh6Vsgo0=&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;HHcYkYC0DZnid24Q2fwPAmO1xvpR50u5IwbKrc1icWet+pdIimObsCJpNKXa6J3UAcZt33PFKdKXcV4GTFxyaE342Q7FGq0SSb/gY41SMpt5Gvrm0qzBK7p9q3xc1rpX7BcuJj+nK2Sr03RoBRk99mBGZGoEK2X29zZnSUjbMBA=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;SRjo5831LB+Q49d77cA1oUk/xLVlPHjYvFwffuJ0GLey12mUufTLLhLNQRgi4VdAqre/82pfGI2CREGzJGyAaQZ6ot10kUptBvQDe+rXvxTGLm/vQSf2ZsmHTTnjrCv/9L4pDX/V8f1Q6f0a0F66oA8vbusTp5ns5XPhiqQvOXo=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;bXb57l1UWzcbYsPDddq4JjyExI8N7y87CrqVRWgO00BHqwpqGgwGX8ZjHCHPfnpMeX1uvwSfaf1mEw5Z5nr1JETYBS+/O4re4/SjevueKLmp2J9nvey+T7b8o1u4bapnLr8BInkzQjKR+TLb9KYgEH/tugcea9Rs1I8O7S3ZoQs=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;NKwVGm5XpUAKD3PZr+NA9m9l+vEyWsE4La3LvG//GSq88zv7+uf/+xEPGgn4C0hcaZY2HSTnpx91Nm2TjcXTJZSiBeNiQuTuJM1rFoDWk1dX4Z1tjTpDaDEhNw2zsqskuojK8XbFuVMhLJwjLWKzzhmn8+dtvojraMmkBUyheck=&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;mVssuzVnc1e7Ae0oRKqHzxo17s/nE3ceAZ2NqdgcYhFCB2TZ7vZvcake7V/ZrTKH+KnZtFmminRwnYVGRNVpNkI7w4hxNM5sYMOxvEIvfcBvggPlqrmkaXLmVmpn6Sho5H6zjuNSbT5mad/JTxZJzkqNFZCIEXI73+l5zA2Q7Aw=&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;ZwWorNnYQCffafQddpX/l3p7hWW108XE3/NZBSocnhLOdhdOKAvaYhEoBZ50sCLoqGblCkmO7CcLiqsOLBdNZkCGyFoe2AlM/ZTLKnpHydaGxTD3xFO0MR03mPHpmVD3IfiYxI4uCguo+89CudyEM/c4NZf7rcGeO+wX+tRekBg=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;AZ/A89xegxR7piKYsqp+csfR5B+jjNqR3nMFbVt2iqc6TKmvWuWklASKxxCsRvh56dHB1fIpoEAZLOPYfb7tRb6Nz7/7QjqPU2AJ+3OfZSne9FjPbHc976XNWxePCJVcvEdLw1BP08FqaqxrYqJ6pQY/wdSM87OZgIQEu/9fsB4=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;KRpPAP74eigOR0/MDF9MNwcA4osGWF7mS8iwji1meuijb5Pd+BVC9xbz6cTyAFJY0x6iyl672yqkqEMyUxHxeFlJsQYjiY0L2yrB/6I9V46StopPwqYj2f5fbVamuoGKcSXGP1iBVrJrAI2JorloxWQDr94Jpayq7RivGxSSKdw=&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;nk0hUnoWaEbfFCZ6vYmYq9Dg4ZZ//MuI1S/aJSlsqUNb9+mlcuNFsEQHBhwd28x3gsI76bpsQSGqZdCdc4a2YeKosQReKZIFrkPeHBstZO7iOL75nndYqgDYpky1MaNsPiFVDd43YWP18bTc6nqifbJFlIEKorHG5Pq0fp2Ovi0=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;GR5/fM3XwNGYrqpRVMdSByPkYF8Dpyr64Ns3diBLapFWGoHWF/oB8452C3SUeqr6Kbn9S0VqyYRdrjMqZEyC5PKb5NqxpNFArNH+eMLDngruCkD9zKGijmFv8OPyiLr/k9xoB/c89a6egOeKmkE8QKurt4YA5rdO/iRW9rb12Is=&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;TO/DpMPJPQe6rIU6L0VB5YrjDMlLDzrWYxfutYPfTRrIw+ExK6ToqdEmbuaWcnOXzGnx+ys7RoMIANM/QSsZNZBDH67hUT7PSZlWp7KDL123RD0LPQPgiLp6S1LNOa1UCJVgOJTnN2mj397K0NfyDxcq7w6WOdbMuEkZ0cEy3uQ=&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;ZXvoXt6av5zyVubXMu+QwvkxaZvPIs7b7hB0MkWLWwbUqQtxIARMHcZmuwYzCdZ7W+DeORGApA3ugNC9rNE1tD2Igm3WKz8QCleF3zKN6MecFRDsh9LhG3mXBN87zgoLXzZ0jnlg3wqpSAHdwStuB3H0T3+9I1y8OMslUZlZpP4=&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;QPSk1dT4sKPlF3ONVq+TWlA3J+Y8bQ39hcYVKCpo9ISKuRyexrn+s+WqUMMyn3DDjyJIQ8yR1Q1j6DL+k8+9gWvI4AhR4AJaYAFAskDhD58H4It6t0//MPoAEYktEtEuQuZ0qNBD2DTbkolmk4aLlp614aZs4O0F4fJLB69WbVk=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;L1/m0Uv4zx4BCiq8VILrd+aNG1qgrtOMDXsFesy5q51vKDpQUJGaqi4ui4AxZwasz3SCRLO7Ltatz/o1BqCPAlVYiP+1Ty/k11mYp6jKA1SzOrvzNHnnp0p2D8FPDwOjM2AC2iyveb71fe549/MiY2fKsp6+qG3BAQO3z+ya9WA=&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;SXrR33FBqF9G18m9aijjWid0f4iagR3d/CIVm/3iYUQsNk1MYcYXPzYQCqdNY0599rMIoPe/gfuMIddkXXgZGDGVwv0lfFxJ7TasIpnLBwtA2wRYzuHwhQjTOA8Q540xwA82HbWLIcPSk7R89fBhcOzIx5vTu2M5NhBPty/9sz8=&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;B9oHKTvoMNhd5mC90DGtufPLO1NBdFEQ79E2BaFNCIr85gHfJcCvBFZ27aAf82RoDew1jgu1p2iQE+4q2h/oplSTuxzkR/CYtknKlVKndFQMexYD/SqOwJbcdNRI5n8pGHpfLJmt11qjEBRTl5LF0fmn015cLcBFPioDGi7HdBk=&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;J+8AbhVQAbQUZcXIBShtZYBB3UJjOp4lClQeWcPb7+NNNP/fGHG1WxGl3cpMgsHNb7E+duQo19z8GgQXozHtGk62VMhNUwjkTC6C4RX2IDERD+TmJWW5Yt/87xHtxMfjLHVqsKCz8BpFC4X0LGlVpNt8MTseSU13r+yejYC75xk=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;ZVYlr3eddOppygWyIggCG6INvzKAU+taj0DAO4NFDl5a3fKsipzehTrBqmv3EJ+I1rQ0jZ2ZN6+XICgpGUvP0cXxI6SZ7MZhnbuvmD/hQQIy48D6SMBhMKNrSrDmj4swArkg6xvKIspB8icPXWq6jp6qyYBIREGqBLcP/2Oyy94=&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;b/zJujxnS/ZjHyU6E1cbrpEV8jTGWlWdvceqNaCT/kFYRyrncH72YU68+P2DhfGdmNxQEoZczGYbIpaTJFDZZKqD58vYijowCvRZWPoSyAvALBtN6gDsK2PPGkpHCg0au5+g7a26IeTdInFKXG02CFkC0n3R3umHo3yPlXEYXS4=&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;PZexz/SeS7ArRXMzz1dQjvJC2/q3F6xdsL021Gk/KKbK2AidUdNRYKA+u2MXiYUAY6e9vpTFzBjiUvpitpuQiDIJp2Xe1hDxApH6VugpicpF0Gj6n0ajxbWDpESMJOxKy7HVGTimFvwGMEEdNFtf2mcMXw8UcykTwmK8cfLjRxE=&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;C90RkJYgLmhWGLfD7xRERmXGs65YILu20dZng5YXvA5XB+11wDdFSHsNfQ/zaVGy6MhgEyVyKoGmsCpXIimUy12M/6AutEu/IUgRfXHD7gplBXuexriS5F8szAnPueBxs6l58IAPeetD9+bzvmSwcEUnxBDT+2akLR0+cjmQ6Cs=&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">RSA</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">ECB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS1Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">public_key_alias</stringProp>
                      <stringProp name="Header.value">acme-rsa-1024</stringProp>
                    </elementProp>
                    <elementProp name="confidentiality-variant" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">RSA_ECB_PKCS1Padding_acme-rsa-1024</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DEBUG Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;f62pilap6odBA9Ko03AV7BD/TwlIxGJRBQd/sg5ySGs=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;PsvD7D+AhvU=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;eb6xjjyDhfY=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;fb6liFDur5jtZG5TTFACMdO8lPIsE57N&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;OcvD7D+AhvU=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;a62omF2EgvE=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;TI+JrjyDhfY=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;TIiFpWC3ssN87Ewlu98bqw==&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;P/T82wipscJk2yciSUJwfw==&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;RIKW7j2ChPc=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;Q4mCvzyDhfY=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;P/z22wq3scKW7hpq3ZRr0g==&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;WJiW7j2ChPc=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;P/z22xW3ud9qOlX48CsqJVWTphctNZuG&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;Wb69glfpob7JeOEDw+85xX8CgAXaRdLw&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;Pfv12wm3tsrZRof6jKr+qg==&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;Xo6N7j2ChPc=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;Xo6NpQi3scJ2YXGojhQZbQ==&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;TKilhVGn0ZdG6dkj/H2ENVRaCRaafhbb&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;Pfz82gq3s8A7X3vDKgu42w==&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;RI+NqHGEgvE=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;RI+NqAi3scJFBx4DQJhbLQ==&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;Q622mVnz6J23g064ANBXDA==&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;Q622mVnz6J23g024ANBXDA==&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;TOy1nlHk6tLbZdPpNNusRZxByV+Zh+5ksg2ykaL0nGfa/2jNoLO33L/mJW93yUr4&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">fyLkarKWRoI=</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX DEBUG Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;79af604d33b090910003d5f3ff157b6295b29a2d68ffa46ec405451a1d2b303e&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;38c90a2b5a99fce3&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;7fbc7849599affe0&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;7bbc6c4f35f7d58ec62cdedbb1db2205fd7ca695049a3228&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;3fc90a2b5a99fce3&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;6daf615f389df8e7&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;4a8d4069599affe0&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;4a8a4c6205aec8d5d1e17893631c9bcd&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;39f6351c6db0cbd4c52a3fc68a5db9fc&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;42805f29589bfee1&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;458b4b78599affe0&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;39fe3f1c6faecbd4d1e857302c14726f&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;5e9a5f29589bfee1&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;39fe3f1c70aec3c976c512b4a33638b40ce2ef5388ff09a4&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;5fbc744532f0dba82d358401be38381f12e37c54f33299d8&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;3bf93c1c6caeccdca49829a2c5eb560f&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;588c4429589bfee1&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;588c44626daecbd41aeebfa9fca6a6a3&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;4aaa6c4234beab814215c0667ff21ed0ffe44acf4feaf6e7&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;3bfe351d6faec9d694ee873818c83309&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;428d446f149df8e7&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;428d446f6daecbd4890daa885f22b743&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;45af7f5e3cea928b21278ec17cd6d004&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;45af7f5e3cea928b21278dc17cd6d004&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;4aee7c5934fd90c4b31f33912bc2966d9c85a967f3dc7690bec2a0a04c0f3d12a48888da9f497df31e9a00dd665a81af&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">hex</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">ce0e92ade61e480e</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">debug</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;eRscWv/eVWzE9WrggBOHesT/EfeD0E7YV3uXz5UJYN1oEXHWoPmZ6a1Ut1LKM7bNfB5qO/cmzBfhwGIDcy16nvq2F8wR4MrtMTa+osZcYIlZE6Q0TCrqMeUdE3g1shj+IbjDwg22cDU3esbY8LMrz/J0gv2A1tTzUShaJe8ihEc=&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;DCJma4dWZHFljKPpxTGMJcOIi2QZwkVvhWvb+7alMFGJP0RRQ7XZYSY5TeBCFJie5q2x9UoBJzoWmDFwSg5mjOmVO7aqPLo29tonyCfUqJYAeSYn/n+9572doun4abP9AYUjK5znu+CScDq0rWHXLLmRSr89B893CEUteehEKAg=&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Ru4E8IP/fdp628gTdquLjBuhpq7SHQWq5ISl6SS09XW44Z9pw/Q8kzygkyAFgRDz/lVKcErp7q8k4hX/BiyGSCVsDbefcti3f5/70RfswcepHq9Lo6+2xBvTQQyNcqsYLuneONeRf3rhMBODG79uJ7/3rsFn0N1Ovauj8I+nZxI=&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;MGEfBJj9TTrt6fAwaKzDg/fZOujuUFj6oWj4cxW1KChRXQ6LUiWpDWo5jEU8VjxWy7qRAO1ZulxPNWDct5aPN2cXruS6vZge0MZF5Z23o2UC/K0C9BLrw/mwk7qUfol0pOol8yL6DrbEZ6RHrUu1Y07dQfej+PkKXivvJ18yJhA=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;ZwzldpzuukotL1qaAtRbTVYU9C9wbVNrSHm3jk07SVzId1qo3vP8h1l63uKUpuOusdfmnfOFYIYj0IZ6cNy3s4r0hOEEgiju/3EWyV2rw/LtSoUrXtxuVVAiMhWQ3MledAl87WF/FRUWgTW3EdZ9cTG03SgxulN101xnsLuVBB0=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;aejyO55KFHjjeLm0Vrrsp0NqbRLagIqGZJdKm5QKOuxR9+8o5b4yIl0Wj57OkQF/4Hz0VnQZDCtVSIs9A4lH5C/3DHUeGne5t1tnRefz5Ka16eIM7x4TVieF1Pu71p3Tmp3Us8CdJj6wfkLrOLQQFlnB83+jb6N+5eA1PBQ5ZuE=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;lKuMLBb++/M9HZ+Anfm4agDOd8eReT65BOKy6jVoVuwQYUiRWKfFgGLUpP0twrYz1a1EGpBsJiEGXNeN2s7AwQlTrNWSxl65o+naObhfBUoMhXNyc9k3c/AqtEYMY2eTZGZtAJN+3Fs1sm1MWGFKWr5w4YMqpqRNe/dLiVaupjw=&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;MJXYO8pwheYFas2FCLa/EMpyQgtUK3DdicE5mhmNisRtDQpJ7f9TZH3ISOsjZ1irtZ8qJmT8zQKgdwnTqI4IdNLyaIUUcRbbRjlC5DPcdyPwlgS3oFHjCU3PVzycDutIzL5H6nSZFNFXs2n7KNl2l1Z4EFSbRs8e+W9iiCKlJSU=&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;fvj1J4XT/bW+SWl5sAvTekvx/WReMWeUXNpGnjV+n7m8Ubag9CH6eG06358YzZHmkBUIfRZzRF3TACLyAVRzNehgzgJMJgs1Pt7YE875EGqcKzM8evoyCCqltSqnNhWUN+ib+0BBUHBLXMXFm48YxJnF+/kGa/JjLbk/mC6x61Q=&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;M2s2OGeRNE65QM0S5AhF/dqNdRbNQj6e6Ima/EW9OBs3unWCYZJTYtqMi2UyhnK+UuCshdlBU2tZf/wLjY2ynGnreExKBPbCCVvCiCjsFer1D2jvqRy8ZXt3ZeVkDopLUL+VZwx7oO5giGuBwUh1eRPw496yMAyCpWaSh6Vsgo0=&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;HHcYkYC0DZnid24Q2fwPAmO1xvpR50u5IwbKrc1icWet+pdIimObsCJpNKXa6J3UAcZt33PFKdKXcV4GTFxyaE342Q7FGq0SSb/gY41SMpt5Gvrm0qzBK7p9q3xc1rpX7BcuJj+nK2Sr03RoBRk99mBGZGoEK2X29zZnSUjbMBA=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;SRjo5831LB+Q49d77cA1oUk/xLVlPHjYvFwffuJ0GLey12mUufTLLhLNQRgi4VdAqre/82pfGI2CREGzJGyAaQZ6ot10kUptBvQDe+rXvxTGLm/vQSf2ZsmHTTnjrCv/9L4pDX/V8f1Q6f0a0F66oA8vbusTp5ns5XPhiqQvOXo=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;bXb57l1UWzcbYsPDddq4JjyExI8N7y87CrqVRWgO00BHqwpqGgwGX8ZjHCHPfnpMeX1uvwSfaf1mEw5Z5nr1JETYBS+/O4re4/SjevueKLmp2J9nvey+T7b8o1u4bapnLr8BInkzQjKR+TLb9KYgEH/tugcea9Rs1I8O7S3ZoQs=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;NKwVGm5XpUAKD3PZr+NA9m9l+vEyWsE4La3LvG//GSq88zv7+uf/+xEPGgn4C0hcaZY2HSTnpx91Nm2TjcXTJZSiBeNiQuTuJM1rFoDWk1dX4Z1tjTpDaDEhNw2zsqskuojK8XbFuVMhLJwjLWKzzhmn8+dtvojraMmkBUyheck=&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;mVssuzVnc1e7Ae0oRKqHzxo17s/nE3ceAZ2NqdgcYhFCB2TZ7vZvcake7V/ZrTKH+KnZtFmminRwnYVGRNVpNkI7w4hxNM5sYMOxvEIvfcBvggPlqrmkaXLmVmpn6Sho5H6zjuNSbT5mad/JTxZJzkqNFZCIEXI73+l5zA2Q7Aw=&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;ZwWorNnYQCffafQddpX/l3p7hWW108XE3/NZBSocnhLOdhdOKAvaYhEoBZ50sCLoqGblCkmO7CcLiqsOLBdNZkCGyFoe2AlM/ZTLKnpHydaGxTD3xFO0MR03mPHpmVD3IfiYxI4uCguo+89CudyEM/c4NZf7rcGeO+wX+tRekBg=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;AZ/A89xegxR7piKYsqp+csfR5B+jjNqR3nMFbVt2iqc6TKmvWuWklASKxxCsRvh56dHB1fIpoEAZLOPYfb7tRb6Nz7/7QjqPU2AJ+3OfZSne9FjPbHc976XNWxePCJVcvEdLw1BP08FqaqxrYqJ6pQY/wdSM87OZgIQEu/9fsB4=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;KRpPAP74eigOR0/MDF9MNwcA4osGWF7mS8iwji1meuijb5Pd+BVC9xbz6cTyAFJY0x6iyl672yqkqEMyUxHxeFlJsQYjiY0L2yrB/6I9V46StopPwqYj2f5fbVamuoGKcSXGP1iBVrJrAI2JorloxWQDr94Jpayq7RivGxSSKdw=&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;nk0hUnoWaEbfFCZ6vYmYq9Dg4ZZ//MuI1S/aJSlsqUNb9+mlcuNFsEQHBhwd28x3gsI76bpsQSGqZdCdc4a2YeKosQReKZIFrkPeHBstZO7iOL75nndYqgDYpky1MaNsPiFVDd43YWP18bTc6nqifbJFlIEKorHG5Pq0fp2Ovi0=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;GR5/fM3XwNGYrqpRVMdSByPkYF8Dpyr64Ns3diBLapFWGoHWF/oB8452C3SUeqr6Kbn9S0VqyYRdrjMqZEyC5PKb5NqxpNFArNH+eMLDngruCkD9zKGijmFv8OPyiLr/k9xoB/c89a6egOeKmkE8QKurt4YA5rdO/iRW9rb12Is=&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;TO/DpMPJPQe6rIU6L0VB5YrjDMlLDzrWYxfutYPfTRrIw+ExK6ToqdEmbuaWcnOXzGnx+ys7RoMIANM/QSsZNZBDH67hUT7PSZlWp7KDL123RD0LPQPgiLp6S1LNOa1UCJVgOJTnN2mj397K0NfyDxcq7w6WOdbMuEkZ0cEy3uQ=&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;ZXvoXt6av5zyVubXMu+QwvkxaZvPIs7b7hB0MkWLWwbUqQtxIARMHcZmuwYzCdZ7W+DeORGApA3ugNC9rNE1tD2Igm3WKz8QCleF3zKN6MecFRDsh9LhG3mXBN87zgoLXzZ0jnlg3wqpSAHdwStuB3H0T3+9I1y8OMslUZlZpP4=&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;QPSk1dT4sKPlF3ONVq+TWlA3J+Y8bQ39hcYVKCpo9ISKuRyexrn+s+WqUMMyn3DDjyJIQ8yR1Q1j6DL+k8+9gWvI4AhR4AJaYAFAskDhD58H4It6t0//MPoAEYktEtEuQuZ0qNBD2DTbkolmk4aLlp614aZs4O0F4fJLB69WbVk=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;L1/m0Uv4zx4BCiq8VILrd+aNG1qgrtOMDXsFesy5q51vKDpQUJGaqi4ui4AxZwasz3SCRLO7Ltatz/o1BqCPAlVYiP+1Ty/k11mYp6jKA1SzOrvzNHnnp0p2D8FPDwOjM2AC2iyveb71fe549/MiY2fKsp6+qG3BAQO3z+ya9WA=&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;SXrR33FBqF9G18m9aijjWid0f4iagR3d/CIVm/3iYUQsNk1MYcYXPzYQCqdNY0599rMIoPe/gfuMIddkXXgZGDGVwv0lfFxJ7TasIpnLBwtA2wRYzuHwhQjTOA8Q540xwA82HbWLIcPSk7R89fBhcOzIx5vTu2M5NhBPty/9sz8=&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;B9oHKTvoMNhd5mC90DGtufPLO1NBdFEQ79E2BaFNCIr85gHfJcCvBFZ27aAf82RoDew1jgu1p2iQE+4q2h/oplSTuxzkR/CYtknKlVKndFQMexYD/SqOwJbcdNRI5n8pGHpfLJmt11qjEBRTl5LF0fmn015cLcBFPioDGi7HdBk=&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;J+8AbhVQAbQUZcXIBShtZYBB3UJjOp4lClQeWcPb7+NNNP/fGHG1WxGl3cpMgsHNb7E+duQo19z8GgQXozHtGk62VMhNUwjkTC6C4RX2IDERD+TmJWW5Yt/87xHtxMfjLHVqsKCz8BpFC4X0LGlVpNt8MTseSU13r+yejYC75xk=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;ZVYlr3eddOppygWyIggCG6INvzKAU+taj0DAO4NFDl5a3fKsipzehTrBqmv3EJ+I1rQ0jZ2ZN6+XICgpGUvP0cXxI6SZ7MZhnbuvmD/hQQIy48D6SMBhMKNrSrDmj4swArkg6xvKIspB8icPXWq6jp6qyYBIREGqBLcP/2Oyy94=&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;b/zJujxnS/ZjHyU6E1cbrpEV8jTGWlWdvceqNaCT/kFYRyrncH72YU68+P2DhfGdmNxQEoZczGYbIpaTJFDZZKqD58vYijowCvRZWPoSyAvALBtN6gDsK2PPGkpHCg0au5+g7a26IeTdInFKXG02CFkC0n3R3umHo3yPlXEYXS4=&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;PZexz/SeS7ArRXMzz1dQjvJC2/q3F6xdsL021Gk/KKbK2AidUdNRYKA+u2MXiYUAY6e9vpTFzBjiUvpitpuQiDIJp2Xe1hDxApH6VugpicpF0Gj6n0ajxbWDpESMJOxKy7HVGTimFvwGMEEdNFtf2mcMXw8UcykTwmK8cfLjRxE=&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;C90RkJYgLmhWGLfD7xRERmXGs65YILu20dZng5YXvA5XB+11wDdFSHsNfQ/zaVGy6MhgEyVyKoGmsCpXIimUy12M/6AutEu/IUgRfXHD7gplBXuexriS5F8szAnPueBxs6l58IAPeetD9+bzvmSwcEUnxBDT+2akLR0+cjmQ6Cs=&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">RSA</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">ECB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS1Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">public_key_alias</stringProp>
                      <stringProp name="Header.value">acme-rsa-1024</stringProp>
                    </elementProp>
                    <elementProp name="confidentiality-variant" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">RSA_ECB_PKCS1Padding_acme-rsa-1024</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;OvSGqQi2uceomns67itLVsnKaDiUPi23OWNEXSm0CbbCTSADVmS+cw==&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;P/z22xW3ud9qOlX48CspIg+kCN4FMXqYuDB219/MwYw=&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;f62pilap6odBA9Ko03AV7BD/TwlIxGJRBQd/sg5ySGs=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;PsvD7D+AhvU=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;eb6xjjyDhfY=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;PY+H0nm3ucDEKMcSrFu+q6rzppjeDSAIEowZZjdB5yW8+2M2AIx9GQ==&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;P/z22xW3ud9qOlX48yspIpOgqf7DhoNB&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;fb6liFDur5jtZG5TTFACMdO8lPIsE57N&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;OcvD7D+AhvU=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;a62omF2EgvE=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;TI+JrjyDhfY=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;TIiFpWC3ssN87Ewlu98bqw==&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;P/T82wipscJk2yciSUJwfw==&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;RIKW7j2ChPc=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;Q4mCvzyDhfY=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;P/z22wq3scKW7hpq3ZRr0g==&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;WJiW7j2ChPc=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;P/z22xW3ud9qOlX48CsqJVWTphctNZuG&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;Wb69glfpob7JeOEDw+85xX8CgAXaRdLw&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;Pfv12wm3tsrZRof6jKr+qg==&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;Xo6N7j2ChPc=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;Xo6NpQi3scJ2YXGojhQZbQ==&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;TKilhVGn0ZdG6dkj/H2ENVRaCRaafhbb&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;Pfz82gq3s8A7X3vDKgu42w==&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;RI+NqHGEgvE=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;RI+NqAi3scJFBx4DQJhbLQ==&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;Q622mVnz6J23g064ANBXDA==&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;Q622mVnz6J23g024ANBXDA==&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;TOy1nlHk6tLbZdPpNNusRZxByV+Zh+5ksg2ykaL0nGfa/2jNoLO33L/mJW93yUr4&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">${secure_encoding}</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">fyLkarKWRoI=</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;3cf64f6e6dafc3d160b0e5caf8df1fb1a68db35a9140e1889ac9f60a99c7a1c3d35521820f3928d7&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;39fe3f1c70aec3c976c512b4a3363bb39ce44de218178829d546c25eb162843f&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;79af604d33b090910003d5f3ff157b6295b29a2d68ffa46ec405451a1d2b303e&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;38c90a2b5a99fce3&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;7fbc7849599affe0&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;3b8d4e151caec3d69e4db208006c5cd0cad0f5e7851aaf0a926376eb765b1feb93a62641bc051961&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;39fe3f1c70aec3c976c512b4a0363bb31aebe7ae4a24fc33&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;7bbc6c4f35f7d58ec62cdedbb1db2205fd7ca695049a3228&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;3fc90a2b5a99fce3&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;6daf615f389df8e7&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;4a8d4069599affe0&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;4a8a4c6205aec8d5d1e17893631c9bcd&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;39f6351c6db0cbd4c52a3fc68a5db9fc&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;42805f29589bfee1&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;458b4b78599affe0&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;39fe3f1c6faecbd4d1e857302c14726f&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;5e9a5f29589bfee1&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;39fe3f1c70aec3c976c512b4a33638b40ce2ef5388ff09a4&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;5fbc744532f0dba82d358401be38381f12e37c54f33299d8&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;3bf93c1c6caeccdca49829a2c5eb560f&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;588c4429589bfee1&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;588c44626daecbd41aeebfa9fca6a6a3&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;4aaa6c4234beab814215c0667ff21ed0ffe44acf4feaf6e7&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;3bfe351d6faec9d694ee873818c83309&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;428d446f149df8e7&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;428d446f6daecbd4890daa885f22b743&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;45af7f5e3cea928b21278ec17cd6d004&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;45af7f5e3cea928b21278dc17cd6d004&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;4aee7c5934fd90c4b31f33912bc2966d9c85a967f3dc7690bec2a0a04c0f3d12a48888da9f497df31e9a00dd665a81af&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">enforced-policy-list</stringProp>
                      <stringProp name="Header.value">UserAuthentication|SimpleConfidentialityValidator</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                      <stringProp name="Header.value">request-response</stringProp>
                    </elementProp>
                    <elementProp name="secure_encoding" elementType="Header">
                      <stringProp name="Header.name">secure_encoding</stringProp>
                      <stringProp name="Header.value">hex</stringProp>
                    </elementProp>
                    <elementProp name="secret_gen" elementType="Header">
                      <stringProp name="Header.name">secret_gen</stringProp>
                      <stringProp name="Header.value">STATIC</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_algo" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_algo</stringProp>
                      <stringProp name="Header.value">DESede</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_mode" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_mode</stringProp>
                      <stringProp name="Header.value">CFB</stringProp>
                    </elementProp>
                    <elementProp name="payload_cipher_padding" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_padding</stringProp>
                      <stringProp name="Header.value">PKCS7Padding</stringProp>
                    </elementProp>
                    <elementProp name="public_key_alias" elementType="Header">
                      <stringProp name="Header.name">secret_key_alias</stringProp>
                      <stringProp name="Header.value">acme-aes-192</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">payload_cipher_iv</stringProp>
                      <stringProp name="Header.value">ce0e92ade61e480e</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">confidentiality-variant</stringProp>
                      <stringProp name="Header.value">basic</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Secure-Requests-Simple-Confidentiality-All Fields-Preconfigured Defaults" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;Z2uc3MbSaeLj4y4cSVMVKIddPMLUf4u9OvH8DfRJXWWqxSow5rIjVwLsQ4MbO3Nf/N1OQ3CUKtdGH78jTvXggj2+xen1jkm5T/atUcfuSgq0irym2XuRCcoJjZ9P1Jx9RY6XEIqy/868OuZroJc7i+Ji88+logMQ7/NAaAU2uFI=&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;SmqzXuig+uBJ5+fNxSjuumWruWbzO7lpc2A/pINM9v/MErrH+c+2RvTNofU8sH8jzfr0jiN5ZJB4KCvtLbausQbyEjIfEoM7Dp3VphYFXtXOCKksFblPqvZlVBaOuGr/89HKBvYMZkfxc8gsHui25kAW4gyJAlPE4YTID+SsGwY=&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;SWoWgVhMVb7DJu+6vjF+AxdzqJawK3UKFQzV3LKoE0zRQ6BZL6EWAmjlvjbbZhkHS66ywl84kbUqjEabONtx9cg8nV48CzzOtkAvqh8jDyxX3DRaR2F4HrkddlWzbBTKJdVaxycEYaojh3T/X96jItTYEq+5m3eyA+TByYM3tfk=&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;ODEMJM+cKwk9Flx5pmX092fyT/89bkkqJbSqWlTv0sUYOmnZ7U1lyh/pn1V/gGs++WlzyhnK6mWny4bU+f6Vy8FU7O/qKQLOcrDWHMd5QlRfm3AQJxp6Kk+wnx2gzQU/33SRqQOsfJwbRrfFZqtovL8FO6GEAZOaIvTGEQB2Qsg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;lW/ioZS8ybvots4eBzyMZspRa5m4yecYMZhszji6/ftsWCWT01oKhDSo5yQEJhzlAZTCUMGxBKdhb9SPLzJLCgCBUw85kuLqZHj/vAhJwlTiOQZ1ySSLWbz2CooHz/Mye6wcg1J5yNWrZdaGUAF4C6pqna5kAjMX9lBCnH8b9wU=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;eNRd+3TzMhOJ97+UQ3/7gP3J+v6sqd3sUHPpEbA15LxQsjCpWNIngOjBv0b4YJW/3z03ZPKTaA+9Gn4Z/wz4SAe8GPGWflWE+lbE4jD5ZPgdvQPKByPAMHtsrvf2p29qzaloNRJ9iaMhbn6ajgiqQilFQaIRmnbWxUFZHNggncY=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;Jrhu6DlUvrxa1NNSnKTx6X3rV/ZdqRzDhjeRn5PQge2u7AM4ix/1MrjsNg5b/jV36U3lCWDf83Vb0ogfSzyD4Sa6fOyC3IbaNlxD+UfQO5QpqXZwJbol7Ce6/TWHTqUJKh5lElZZ60zV3jRbo8ImQs3lMUp3LF9VUnJeMY1CK1s=&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;Ck8ICSarnJTDyeD8JJ6hazL9RaMsxQuG7Lyvm8s3f9eaji8zlNx5Aa3Jm76wVIL9TC59Gci6vJ1Vta9b9WBxU0qudhQQpvtlBmT/ORdPS4XbANOWre/UxLPjOCnduT1IxjCvibR9Na9czY/9cmzhtgiEUN/YFPy570Mh0YMuWnE=&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;ORSMs1EIV2odE0Efi1nk1DalMXRPUPDqHHpHzv4z4g0/FiFFDIXB/ZbK325ZGAqzjMaeyU8Pfuir4TTlKjVD1lVpq6loD0oVAyv0gWUpMSPh4rGm3upqqz5NHrhYxsznYCb7HXqHoRBR6LFU6ibmubtZkDdStXH0jmKoM/18KVQ=&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;oGSxzhIMptK127GO80tmZBM748I6FQ//U7aJE+V65WMmU9qEsLgWQeJ8F3zVJGMvSXN4tO83CBEb0JvNYItiudK+wdUIAg8sMPDBI8WoY34tisljVq/1E8odcmF4/PBul75XVbRFMBbsyH1ZapfcHeb+qs7uWp6tWjf4AawO87g=&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;FNDlWv0yok2263s50FiJhMU1kdX8DEFh2RAXgub2C/NQGDQllwaoJSl3i5Fu/bPMZ2gBpBaD+RhXhq2lhcQ45ev7pA9FaJBQgXaqQj9J6W+PfLbQCo3LOSBj0CjamovQFhzQTznfgvTQhTk6ZpM0mx1s2IwXhiYGKguAB8Z0iA8=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;XMm090T44E0dYnoQMksKsptUvgoHTrvhuTTUR2bJOJUVjklqwbjzr40KdZrAEXy6vs4Sop9jL4nQIut4S5wHtiy6UWDveqZnpxKlp2gekIiwpDUJw6jCrffWvcRba4JlMW1HM06U5A4PM2wWxmrm0JYOkrXAHIKJtd2bf0sMtPQ=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;lHjKPqFF0+XRpz4GJGM1esjvLZBctE5PloleuGuOdRNVIQMwrE7Fb6TMRppgX1N0lXn19pUbk3qZnRzxuIKQfAR4tQ85yv4kEdb7wuv3h6fHNg2eAQZgtvuwRhrh4AASk1n1ybGBdJUxXDa6SGgcFIuUqxSSa9+idYnLLcHphyA=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;RjKMrlfoAEPBEVm/Z9dx0mfkHqj4TOY1i0zfLrXFhvXjP6osvfWygATn2sc2lG/+z2Rdl26r+VR9eyc8FMSI/o5pffSgE3TbJviRNDqj+F4nBrOJtMIJRWAvUMZmI77ITM0ESnZDwPceVdfdmL5pEI6x66NKT4T5NR194GJySE8=&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;dEKnv8PfRXmzwM7x+sepGNVomwUE6Rbr1UJp4YJtAMpzIReG20NYzCS/b7GJA6NpM5KIP7lhKZUE3RcKqz7pkDgMnD9XPA5wQ/5PV2CK2Im4v07uVV5grpj26CuUQJzoJDvTKPgqic+8SbxWptcUhddwSBj0XiMuvL9tmLhSpbs=&quot;,&#xd;
  &quot;currency_code&quot;: &quot;jLNpVegL+zT8iLbbpSAoG7vcMHmNlF9nOf3ykpGXa+ZPkw2wDF8PQxphCWzVXdHzsJmvX1G1oZSyUHkrYdJtO12GeOV4tzIFlIxwa+YOr2feIg/rzZ6XW2LVJBa0WFk8JQZG6wEXUAxFmn/mBbQzGxiLFgQ/zMMqLI4HRtzwyxc=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;kSHrcB1RfCzFNs6BmC9Xj5sYLnE3i5Pr1GkMwm0RPncGWbmXkr60aFru5SB0G0RUTxV1k/jxzmN884BATHJQWHwgvdQweIbEKKVmP905Zr8o1Q2tdfGMQ7QLgnXre6uxa++B4UOoLYoQ7llruNCDuSAsqXog62WiEsuEC5nnXFA=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;dHkmzZvgzXjtlsU+3Ig/YMANI2LodcMtqDiO73S5YFostLuVFlib34OppsNvVMoY8m6xh7qW/2VdRB/Fk6PKFk59hWPqHkRqRhh7bV2Cim3Czhsl8d5ziFP9M0fyBnSvA5aYKZLOcmnOQH72eR4sn9lCUDpA2YCUxr1OHQDSHvE=&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;EcrVY3pDJKFhPqNEXl5YTFO2ORYVlZRvfN4Tt3Lk3w46sxPJWf/SMFQCGfyhSGFj/KFtGVj8Hh28958rFzSrjS8UJW7mCG5faCPtft9JF/jozocuSiF6VFrNvOpz0Yy5ccPlrWPHRxx95GLX0+WCsLnUwZJHYD64oSxxdgmdYsM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;kWS3S+XiB7zocJJX9cztWq6KhdGNLrD/TscrjTdjYbLyYkhkvzaf5AXpxqhy1u5FrJJbyVOi+9QwY8OrgLzM5/G3yA1tG29nhaAY697bdAj/2vSdGbU274dEraYh/6Ahh7p9sDb9NTh583pQd6qTnOy+suMZbPZc1vOv0O55n28=&quot;,&#xd;
  &quot;sender_name&quot;: &quot;MSiJZi7vGZLsOx2L9+JK8Zbi8hPSEdD8OYfViUCkBzh+HiYYAdVq7NxOurCMGm7VczIjDPm0Q0pTrCcyrBcyNaFgKOUHJAymonrf41S8p0uochJOgfnOZwIDFkTpE7dLgX3yqnFyIzQlXnCQJ9pVpAKHWY5RPHoB3XYpnVBYgQ8=&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;EkmNYuJUzUKbyC+PkDIbYP8cwHjWLBnORszga8KHwnxg+cyavwaTq65qFSwimeZwHzySID6+NVEPFcfi4oU+dKSX3Rs5lkqJYzjzLkWsYD2OF2gEnyUygaSnerTOEo64lPKA8eftDTeF3OVG9qsleDmXjUM3h1bOYaCoFXWSHyg=&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VyZSgzxKCDrZmcOxRJjK9W1cMAwNuzuPintqcTZVCpKcH1uA436k5Rbqwn7dVxoyWU1IltVeQ5RM5qqOSY7ak6lwhSqhFTW3j6vW4+cVHmWUb7J8BpSRpfvU68JQMxs4lLqKOsNOoIuBGXbuBK5Dm98BVPkMQocjxK0gwy/mrYs=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;L5hYkl95AapzbY4u3sNVL3GbrF3gqYm5BqkuZc/CHCit9M0jAlqgNjm2/2bAXvpixsu48nHHRuQ3KFnHQ1Q8kNIjQBiDlgHAPLtfibmUyxeTG4zO7hmZgUb7BY2P74KJQkGlBuqaYNJFUAQdIhgU0RWQG/H6uzfEZZuWmez2zbw=&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;ltY4kJXbz2/WyEAQ/czAWhBYkOFeOkXt6Y/y2zTIBOGmSbTsFk0+/UYWDT1NxpQ4TPpRJ0MQTfRQqvwovUHsGGaCFyGiFTV366MJhVZ0ACRBPLuejIUXYPLSGYBYcrBw1EjVDsl7gCqARB0EZesOkA4XTcaf5H9qXegE2AsrZmw=&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;SolTxY/nQMLIl5bPM66gT+5/g8nOjvj06/Rs7+BhOlXFX8tuFGBcbTad55g5fRgVpFDVH+q0kTKsnYxE+BIJxvkFSrib22JzlgGwZSX8ioHzZF3o5tCjkJePmxcf7O1D8bTf0Wwmr33MtSdsdHiZadb3X8LwvswZSimwMmcPKnY=&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;HBOobsG3MDkRTOIicTgQonSTONrqMrK9yKgUgsYM6NwANH4yDmPVYkVGeS9xpYQPO5r7KK0Mu48KAzIPt7RJ+RdZXTYry26bKlUFaWKiHV99vvi5bhYcT26aq+HVLLzrmO+NTUsn3PvvvGHMH2/X6eAUeK+PcW3mIrszsycCIqQ=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;EnCqLIGJxZIpzlKcqvAQ00SlCvnlFX7IEG0xd4KvUwNVbZdRlgWUkhv/Fh+rhsRIch4cHhT9zucOfdgJUy9Kk3F6MKPVy3EAB7ZXLWzBBZDbREEgMxuS8uIVCbIDG6kEJaUTPCAKC0hH/7GgLxSmWxuTirLNcgeAIdbbJuDHB7Y=&quot;,&#xd;
  &quot;narration_1&quot;: &quot;D1DRuwMqeXaI2uEJ/ruTepqniHQqR0wJ5tQ7FH4RsPH7ffojFIzRvue9Dt0KFGqG+CJtuFLHbnht8IjtCRxeAR+myrsiUJAQIc5sxoxowodY1U1YAG6znfLIKX4mpjqfsA+0I+lIfVMkzmjJiiww7OWA3xsF5EMaOyt/0llXL/w=&quot;,&#xd;
  &quot;narration_2&quot;: &quot;P/nkX3JAtYweL7dy0MoJJZYoHM9+wuZ/S+yCheSXKLTGybEuEIIC22fWuCqjcRvJ4PT5asczagTPqJINN3NAYQSZwTQPX4+un030TYZVKLyUc8vYERtrZyENgVeHncEuiLkSBU4TppuLG48OKCua4B9y4wTmVsu2JIR/2m8rBCE=&quot;,&#xd;
  &quot;informational_message&quot;: &quot;kLw/QofrYrClKaAPPmSDsRwur22oSaQApUyhzhUT1LVRhOh7A0bqLS5ZjyBalZ9USG1jyL+vGo5Vx7VC0s9wvTVGV/zuXKlOtmvPt1CGk3yCmA7MXkIMg2/xBeB0GvHjYc+LS9UXHoPAiQ0siG6fkanVOX+w18F2LFnnjA0hsdw=&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;RBqTSUnXtEPLaaybFwr7Roau4Ew6qqmYlqzgT/tc7HT9JGZV9NHu6w==&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLUg0DlKBv6lDjYht6Z0Y3R0cU=&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;dTrHG2bNmXPfJYe0K+yVDSNKKOLVKq0y+WZFQxCdKvg=&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;NFytfQ/k9QE=&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;cynfHwzn9gI=&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;RWqZSDDTsUCVyjcN7YAtG26ggGynN7nuRIDhpA0WQC5bADsTI+JHtA==&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;NWuYSiXTyiv4sdlDh3LUg4LFZXKJHvwW&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;VynFHH2NlnUzIRx4nff8eQ==&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;dynLGWCK3GxQZtzr+B1LkDqQuYN8qQN1&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;M1ytfQ/k9QE=&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;YTrGCW3g8QU=&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;RhjnPwzn9gI=&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;Rh/rNFDTwTd2tLmgaKVtog==&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;NWOSSjjNwjairz8vHcZEjg==&quot;,&#xd;
  &quot;currency_code&quot;: &quot;ThX4fw3m9wM=&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;SR7sLgzn9gI=&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;NWuYSjrTwjbngY0QN2O5aw==&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;Ug/4fw3m9wM=&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLXhpNKsoGc50Ff&quot;,&#xd;
  &quot;sender_name&quot;: &quot;UynTE2eN0kofTBmPcdxWPWFmlMfp3TVC&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;N2ybSjnTxT7lYe02KX/mnw==&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;VBnjfw3m9wM=&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;VBnjNDjTwjaW3RmOuVbf0w==&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;Rj/LFGHDomMSZarshqC+j3rixi7j35eE&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;N2uSSzrTwDQqveW+4/SIYw==&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;ThjjOUHg8QU=&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;ThjjOTjTwjYzlaGvdmKHJA==&quot;,&#xd;
  &quot;narration_1&quot;: &quot;STrYCGmXm2nRmevek13GPg==&quot;,&#xd;
  &quot;narration_2&quot;: &quot;STrYCGmXm2nRmejek13GPg==&quot;,&#xd;
  &quot;informational_message&quot;: &quot;RnvbD2GAmSZZ3AxfPU4Dr5ygmQX2i+5SPR8YZ/AT9hOt3wSjMc4PG6e90HVf2+kB&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">R/qpF6B3lgI=</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;request_id&quot;: &quot;4802e3307ca3f1c0540dfa55a2dc7732bd4a7d5133e20fde3d770307a1bd71d1518dabf210b9a7ad&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2b91a127c38257d085a7bcc5204a95498c33&quot;,&#xd;
  &quot;parent_request_id&quot;: null,&#xd;
  &quot;parent_request_datetime&quot;: null,&#xd;
  &quot;channel_id&quot;: null,&#xd;
  &quot;sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;7922b76253b9dcf0f3fae0d7855b9f8c0f4476483992400dfb0bad99ef46a86a&quot;,&#xd;
  &quot;sender_system_user_id_type&quot;: null,&#xd;
  &quot;request_priority&quot;: &quot;3844dd043a90b082&quot;,&#xd;
  &quot;resent_indicator&quot;: &quot;7f31af663993b381&quot;,&#xd;
  &quot;original_request_id&quot;: &quot;4972e93105a7f4c31404cff42b8516c4862621dd3fb8ea85da3616bd8e59b87f379468841ae7c475&quot;,&#xd;
  &quot;original_request_datetime&quot;: &quot;3973e83310a78fa80afe62e51aed2b9163c9267a0d083b7d&quot;,&#xd;
  &quot;original_channel_id&quot;: null,&#xd;
  &quot;original_sender_system_id&quot;: &quot;5b31b56548f9d3f69a697ad554ce3517&quot;,&#xd;
  &quot;original_sender_system_user_id&quot;: &quot;7b31bb6055fe99ef1ae50ad1684c4829effb9c4d6ef0b626&quot;,&#xd;
  &quot;original_sender_system_user_id_type&quot;: null,&#xd;
  &quot;original_request_priority&quot;: &quot;3f44dd043a90b082&quot;,&#xd;
  &quot;test_indicator&quot;: &quot;6d22b6705894b486&quot;,&#xd;
  &quot;application_context&quot;: null,&#xd;
  &quot;client_code&quot;: &quot;4a0097463993b381&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;4a079b4d65a784b4e9602d1981d1b165&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;397be2330db987b56b50e2f461e3f20c&quot;,&#xd;
  &quot;currency_code&quot;: &quot;420d88063892b280&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;45069c573993b381&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;3973e8330fa787b54ff60c275cbb4220&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;5e1788063892b280&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2894feddee4883cee11c&quot;,&#xd;
  &quot;sender_name&quot;: &quot;5f31a36a52f997c9c0be4b3ae13a58e3de321b360cce196c&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot;: null,&#xd;
  &quot;sender_account_number&quot;: &quot;3b74eb330ca780bd1d682f9d3ee9b47a&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;580193063892b280&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;5801934d0da787b5b8579f52567c2006&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;4a27bb6d54b7e7e026d4a1b03ee5e95b00c8950285f97844&quot;,&#xd;
  &quot;client_mobile_communication_number&quot;: null,&#xd;
  &quot;client_account_number&quot;: &quot;3b73e2320fa785b7c3acfe7b99806847&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;420093407494b486&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;420093400da787b5ad7ed918cd3e7777&quot;,&#xd;
  &quot;narration_1&quot;: &quot;4522a8715ce3deea9f03e702496877f6&quot;,&#xd;
  &quot;narration_2&quot;: &quot;4522a8715ce3deea9f03e402496877f6&quot;,&#xd;
  &quot;informational_message&quot;: &quot;4a63ab7654f4dca59e212605a722248611d0906f08d0fb6c32d71f74c406c4e770dc72eb08954e0e0db4888db5774162&quot;,&#xd;
  &quot;external_system_reference_1&quot;: null,&#xd;
  &quot;external_system_reference_2&quot;: null,&#xd;
  &quot;client_data_ext&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">19c36f212a85f0a9</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;eRscWv/eVWzE9WrggBOHesT/EfeD0E7YV3uXz5UJYN1oEXHWoPmZ6a1Ut1LKM7bNfB5qO/cmzBfhwGIDcy16nvq2F8wR4MrtMTa+osZcYIlZE6Q0TCrqMeUdE3g1shj+IbjDwg22cDU3esbY8LMrz/J0gv2A1tTzUShaJe8ihEc=&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;DCJma4dWZHFljKPpxTGMJcOIi2QZwkVvhWvb+7alMFGJP0RRQ7XZYSY5TeBCFJie5q2x9UoBJzoWmDFwSg5mjOmVO7aqPLo29tonyCfUqJYAeSYn/n+9572doun4abP9AYUjK5znu+CScDq0rWHXLLmRSr89B893CEUteehEKAg=&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Ru4E8IP/fdp628gTdquLjBuhpq7SHQWq5ISl6SS09XW44Z9pw/Q8kzygkyAFgRDz/lVKcErp7q8k4hX/BiyGSCVsDbefcti3f5/70RfswcepHq9Lo6+2xBvTQQyNcqsYLuneONeRf3rhMBODG79uJ7/3rsFn0N1Ovauj8I+nZxI=&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;MGEfBJj9TTrt6fAwaKzDg/fZOujuUFj6oWj4cxW1KChRXQ6LUiWpDWo5jEU8VjxWy7qRAO1ZulxPNWDct5aPN2cXruS6vZge0MZF5Z23o2UC/K0C9BLrw/mwk7qUfol0pOol8yL6DrbEZ6RHrUu1Y07dQfej+PkKXivvJ18yJhA=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;ZwzldpzuukotL1qaAtRbTVYU9C9wbVNrSHm3jk07SVzId1qo3vP8h1l63uKUpuOusdfmnfOFYIYj0IZ6cNy3s4r0hOEEgiju/3EWyV2rw/LtSoUrXtxuVVAiMhWQ3MledAl87WF/FRUWgTW3EdZ9cTG03SgxulN101xnsLuVBB0=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;aejyO55KFHjjeLm0Vrrsp0NqbRLagIqGZJdKm5QKOuxR9+8o5b4yIl0Wj57OkQF/4Hz0VnQZDCtVSIs9A4lH5C/3DHUeGne5t1tnRefz5Ka16eIM7x4TVieF1Pu71p3Tmp3Us8CdJj6wfkLrOLQQFlnB83+jb6N+5eA1PBQ5ZuE=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;lKuMLBb++/M9HZ+Anfm4agDOd8eReT65BOKy6jVoVuwQYUiRWKfFgGLUpP0twrYz1a1EGpBsJiEGXNeN2s7AwQlTrNWSxl65o+naObhfBUoMhXNyc9k3c/AqtEYMY2eTZGZtAJN+3Fs1sm1MWGFKWr5w4YMqpqRNe/dLiVaupjw=&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;MJXYO8pwheYFas2FCLa/EMpyQgtUK3DdicE5mhmNisRtDQpJ7f9TZH3ISOsjZ1irtZ8qJmT8zQKgdwnTqI4IdNLyaIUUcRbbRjlC5DPcdyPwlgS3oFHjCU3PVzycDutIzL5H6nSZFNFXs2n7KNl2l1Z4EFSbRs8e+W9iiCKlJSU=&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;fvj1J4XT/bW+SWl5sAvTekvx/WReMWeUXNpGnjV+n7m8Ubag9CH6eG06358YzZHmkBUIfRZzRF3TACLyAVRzNehgzgJMJgs1Pt7YE875EGqcKzM8evoyCCqltSqnNhWUN+ib+0BBUHBLXMXFm48YxJnF+/kGa/JjLbk/mC6x61Q=&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;M2s2OGeRNE65QM0S5AhF/dqNdRbNQj6e6Ima/EW9OBs3unWCYZJTYtqMi2UyhnK+UuCshdlBU2tZf/wLjY2ynGnreExKBPbCCVvCiCjsFer1D2jvqRy8ZXt3ZeVkDopLUL+VZwx7oO5giGuBwUh1eRPw496yMAyCpWaSh6Vsgo0=&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;HHcYkYC0DZnid24Q2fwPAmO1xvpR50u5IwbKrc1icWet+pdIimObsCJpNKXa6J3UAcZt33PFKdKXcV4GTFxyaE342Q7FGq0SSb/gY41SMpt5Gvrm0qzBK7p9q3xc1rpX7BcuJj+nK2Sr03RoBRk99mBGZGoEK2X29zZnSUjbMBA=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;SRjo5831LB+Q49d77cA1oUk/xLVlPHjYvFwffuJ0GLey12mUufTLLhLNQRgi4VdAqre/82pfGI2CREGzJGyAaQZ6ot10kUptBvQDe+rXvxTGLm/vQSf2ZsmHTTnjrCv/9L4pDX/V8f1Q6f0a0F66oA8vbusTp5ns5XPhiqQvOXo=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;bXb57l1UWzcbYsPDddq4JjyExI8N7y87CrqVRWgO00BHqwpqGgwGX8ZjHCHPfnpMeX1uvwSfaf1mEw5Z5nr1JETYBS+/O4re4/SjevueKLmp2J9nvey+T7b8o1u4bapnLr8BInkzQjKR+TLb9KYgEH/tugcea9Rs1I8O7S3ZoQs=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;NKwVGm5XpUAKD3PZr+NA9m9l+vEyWsE4La3LvG//GSq88zv7+uf/+xEPGgn4C0hcaZY2HSTnpx91Nm2TjcXTJZSiBeNiQuTuJM1rFoDWk1dX4Z1tjTpDaDEhNw2zsqskuojK8XbFuVMhLJwjLWKzzhmn8+dtvojraMmkBUyheck=&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;mVssuzVnc1e7Ae0oRKqHzxo17s/nE3ceAZ2NqdgcYhFCB2TZ7vZvcake7V/ZrTKH+KnZtFmminRwnYVGRNVpNkI7w4hxNM5sYMOxvEIvfcBvggPlqrmkaXLmVmpn6Sho5H6zjuNSbT5mad/JTxZJzkqNFZCIEXI73+l5zA2Q7Aw=&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;ZwWorNnYQCffafQddpX/l3p7hWW108XE3/NZBSocnhLOdhdOKAvaYhEoBZ50sCLoqGblCkmO7CcLiqsOLBdNZkCGyFoe2AlM/ZTLKnpHydaGxTD3xFO0MR03mPHpmVD3IfiYxI4uCguo+89CudyEM/c4NZf7rcGeO+wX+tRekBg=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;AZ/A89xegxR7piKYsqp+csfR5B+jjNqR3nMFbVt2iqc6TKmvWuWklASKxxCsRvh56dHB1fIpoEAZLOPYfb7tRb6Nz7/7QjqPU2AJ+3OfZSne9FjPbHc976XNWxePCJVcvEdLw1BP08FqaqxrYqJ6pQY/wdSM87OZgIQEu/9fsB4=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;KRpPAP74eigOR0/MDF9MNwcA4osGWF7mS8iwji1meuijb5Pd+BVC9xbz6cTyAFJY0x6iyl672yqkqEMyUxHxeFlJsQYjiY0L2yrB/6I9V46StopPwqYj2f5fbVamuoGKcSXGP1iBVrJrAI2JorloxWQDr94Jpayq7RivGxSSKdw=&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;nk0hUnoWaEbfFCZ6vYmYq9Dg4ZZ//MuI1S/aJSlsqUNb9+mlcuNFsEQHBhwd28x3gsI76bpsQSGqZdCdc4a2YeKosQReKZIFrkPeHBstZO7iOL75nndYqgDYpky1MaNsPiFVDd43YWP18bTc6nqifbJFlIEKorHG5Pq0fp2Ovi0=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;GR5/fM3XwNGYrqpRVMdSByPkYF8Dpyr64Ns3diBLapFWGoHWF/oB8452C3SUeqr6Kbn9S0VqyYRdrjMqZEyC5PKb5NqxpNFArNH+eMLDngruCkD9zKGijmFv8OPyiLr/k9xoB/c89a6egOeKmkE8QKurt4YA5rdO/iRW9rb12Is=&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;TO/DpMPJPQe6rIU6L0VB5YrjDMlLDzrWYxfutYPfTRrIw+ExK6ToqdEmbuaWcnOXzGnx+ys7RoMIANM/QSsZNZBDH67hUT7PSZlWp7KDL123RD0LPQPgiLp6S1LNOa1UCJVgOJTnN2mj397K0NfyDxcq7w6WOdbMuEkZ0cEy3uQ=&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;ZXvoXt6av5zyVubXMu+QwvkxaZvPIs7b7hB0MkWLWwbUqQtxIARMHcZmuwYzCdZ7W+DeORGApA3ugNC9rNE1tD2Igm3WKz8QCleF3zKN6MecFRDsh9LhG3mXBN87zgoLXzZ0jnlg3wqpSAHdwStuB3H0T3+9I1y8OMslUZlZpP4=&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;QPSk1dT4sKPlF3ONVq+TWlA3J+Y8bQ39hcYVKCpo9ISKuRyexrn+s+WqUMMyn3DDjyJIQ8yR1Q1j6DL+k8+9gWvI4AhR4AJaYAFAskDhD58H4It6t0//MPoAEYktEtEuQuZ0qNBD2DTbkolmk4aLlp614aZs4O0F4fJLB69WbVk=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;L1/m0Uv4zx4BCiq8VILrd+aNG1qgrtOMDXsFesy5q51vKDpQUJGaqi4ui4AxZwasz3SCRLO7Ltatz/o1BqCPAlVYiP+1Ty/k11mYp6jKA1SzOrvzNHnnp0p2D8FPDwOjM2AC2iyveb71fe549/MiY2fKsp6+qG3BAQO3z+ya9WA=&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;SXrR33FBqF9G18m9aijjWid0f4iagR3d/CIVm/3iYUQsNk1MYcYXPzYQCqdNY0599rMIoPe/gfuMIddkXXgZGDGVwv0lfFxJ7TasIpnLBwtA2wRYzuHwhQjTOA8Q540xwA82HbWLIcPSk7R89fBhcOzIx5vTu2M5NhBPty/9sz8=&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;B9oHKTvoMNhd5mC90DGtufPLO1NBdFEQ79E2BaFNCIr85gHfJcCvBFZ27aAf82RoDew1jgu1p2iQE+4q2h/oplSTuxzkR/CYtknKlVKndFQMexYD/SqOwJbcdNRI5n8pGHpfLJmt11qjEBRTl5LF0fmn015cLcBFPioDGi7HdBk=&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;J+8AbhVQAbQUZcXIBShtZYBB3UJjOp4lClQeWcPb7+NNNP/fGHG1WxGl3cpMgsHNb7E+duQo19z8GgQXozHtGk62VMhNUwjkTC6C4RX2IDERD+TmJWW5Yt/87xHtxMfjLHVqsKCz8BpFC4X0LGlVpNt8MTseSU13r+yejYC75xk=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;ZVYlr3eddOppygWyIggCG6INvzKAU+taj0DAO4NFDl5a3fKsipzehTrBqmv3EJ+I1rQ0jZ2ZN6+XICgpGUvP0cXxI6SZ7MZhnbuvmD/hQQIy48D6SMBhMKNrSrDmj4swArkg6xvKIspB8icPXWq6jp6qyYBIREGqBLcP/2Oyy94=&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;b/zJujxnS/ZjHyU6E1cbrpEV8jTGWlWdvceqNaCT/kFYRyrncH72YU68+P2DhfGdmNxQEoZczGYbIpaTJFDZZKqD58vYijowCvRZWPoSyAvALBtN6gDsK2PPGkpHCg0au5+g7a26IeTdInFKXG02CFkC0n3R3umHo3yPlXEYXS4=&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;PZexz/SeS7ArRXMzz1dQjvJC2/q3F6xdsL021Gk/KKbK2AidUdNRYKA+u2MXiYUAY6e9vpTFzBjiUvpitpuQiDIJp2Xe1hDxApH6VugpicpF0Gj6n0ajxbWDpESMJOxKy7HVGTimFvwGMEEdNFtf2mcMXw8UcykTwmK8cfLjRxE=&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;C90RkJYgLmhWGLfD7xRERmXGs65YILu20dZng5YXvA5XB+11wDdFSHsNfQ/zaVGy6MhgEyVyKoGmsCpXIimUy12M/6AutEu/IUgRfXHD7gplBXuexriS5F8szAnPueBxs6l58IAPeetD9+bzvmSwcEUnxBDT+2akLR0+cjmQ6Cs=&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;OvSGqQi2uceomns67itLVsnKaDiUPi23OWNEXSm0CbbCTSADVmS+cw==&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;P/z22xW3ud9qOlX48CspIg+kCN4FMXqYuDB219/MwYw=&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;f62pilap6odBA9Ko03AV7BD/TwlIxGJRBQd/sg5ySGs=&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;PsvD7D+AhvU=&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;eb6xjjyDhfY=&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;PY+H0nm3ucDEKMcSrFu+q6rzppjeDSAIEowZZjdB5yW8+2M2AIx9GQ==&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;P/z22xW3ud9qOlX48yspIpOgqf7DhoNB&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;Xb6rjU3p5YGvlsP0jXg1bA==&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;fb6liFDur5jtZG5TTFACMdO8lPIsE57N&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;OcvD7D+AhvU=&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;a62omF2EgvE=&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;TI+JrjyDhfY=&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;TIiFpWC3ssN87Ewlu98bqw==&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;P/T82wipscJk2yciSUJwfw==&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;RIKW7j2ChPc=&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;Q4mCvzyDhfY=&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;P/z22wq3scKW7hpq3ZRr0g==&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;WJiW7j2ChPc=&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;P/z22xW3ud9qOlX48CsqJVWTphctNZuG&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;Wb69glfpob7JeOEDw+85xX8CgAXaRdLw&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;Pfv12wm3tsrZRof6jKr+qg==&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;Xo6N7j2ChPc=&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;Xo6NpQi3scJ2YXGojhQZbQ==&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;TKilhVGn0ZdG6dkj/H2ENVRaCRaafhbb&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;Pfz82gq3s8A7X3vDKgu42w==&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;RI+NqHGEgvE=&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;RI+NqAi3scJFBx4DQJhbLQ==&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;Q622mVnz6J23g064ANBXDA==&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;Q622mVnz6J23g024ANBXDA==&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;TOy1nlHk6tLbZdPpNNusRZxByV+Zh+5ksg2ykaL0nGfa/2jNoLO33L/mJW93yUr4&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">fyLkarKWRoI=</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
	&lt;request_id&gt;3cf64f6e6dafc3d160b0e5caf8df1fb1a68db35a9140e1889ac9f60a99c7a1c3d35521820f3928d7&lt;/request_id&gt;&#xd;
	&lt;request_datetime&gt;39fe3f1c70aec3c976c512b4a3363bb39ce44de218178829d546c25eb162843f&lt;/request_datetime&gt;&#xd;
	&lt;sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/sender_system_id&gt;&#xd;
	&lt;sender_system_user_id&gt;79af604d33b090910003d5f3ff157b6295b29a2d68ffa46ec405451a1d2b303e&lt;/sender_system_user_id&gt;&#xd;
	&lt;request_priority&gt;38c90a2b5a99fce3&lt;/request_priority&gt;&#xd;
	&lt;resent_indicator&gt;7fbc7849599affe0&lt;/resent_indicator&gt;&#xd;
	&lt;original_request_id&gt;3b8d4e151caec3d69e4db208006c5cd0cad0f5e7851aaf0a926376eb765b1feb93a62641bc051961&lt;/original_request_id&gt;&#xd;
	&lt;original_request_datetime&gt;39fe3f1c70aec3c976c512b4a0363bb31aebe7ae4a24fc33&lt;/original_request_datetime&gt;&#xd;
	&lt;original_sender_system_id&gt;5bbc624a28f09f9779cb783e2f8c7796&lt;/original_sender_system_id&gt;&#xd;
	&lt;original_sender_system_user_id&gt;7bbc6c4f35f7d58ec62cdedbb1db2205fd7ca695049a3228&lt;/original_sender_system_user_id&gt;&#xd;
	&lt;original_request_priority&gt;3fc90a2b5a99fce3&lt;/original_request_priority&gt;&#xd;
	&lt;test_indicator&gt;6daf615f389df8e7&lt;/test_indicator&gt;&#xd;
	&lt;client_code&gt;4a8d4069599affe0&lt;/client_code&gt;&#xd;
	&lt;virtual_account_number&gt;4a8a4c6205aec8d5d1e17893631c9bcd&lt;/virtual_account_number&gt;&#xd;
	&lt;transaction_amount&gt;39f6351c6db0cbd4c52a3fc68a5db9fc&lt;/transaction_amount&gt;&#xd;
	&lt;currency_code&gt;42805f29589bfee1&lt;/currency_code&gt;&#xd;
	&lt;payment_mode&gt;458b4b78599affe0&lt;/payment_mode&gt;&#xd;
	&lt;transaction_id&gt;39fe3f1c6faecbd4d1e857302c14726f&lt;/transaction_id&gt;&#xd;
	&lt;transaction_id_type&gt;5e9a5f29589bfee1&lt;/transaction_id_type&gt;&#xd;
	&lt;transaction_datetime&gt;39fe3f1c70aec3c976c512b4a33638b40ce2ef5388ff09a4&lt;/transaction_datetime&gt;&#xd;
	&lt;sender_name&gt;5fbc744532f0dba82d358401be38381f12e37c54f33299d8&lt;/sender_name&gt;&#xd;
	&lt;sender_account_number&gt;3bf93c1c6caeccdca49829a2c5eb560f&lt;/sender_account_number&gt;&#xd;
	&lt;sender_bank_name&gt;588c4429589bfee1&lt;/sender_bank_name&gt;&#xd;
	&lt;sender_ifsc_code&gt;588c44626daecbd41aeebfa9fca6a6a3&lt;/sender_ifsc_code&gt;&#xd;
	&lt;client_account_name&gt;4aaa6c4234beab814215c0667ff21ed0ffe44acf4feaf6e7&lt;/client_account_name&gt;&#xd;
	&lt;client_account_number&gt;3bfe351d6faec9d694ee873818c83309&lt;/client_account_number&gt;&#xd;
	&lt;client_bank_name&gt;428d446f149df8e7&lt;/client_bank_name&gt;&#xd;
	&lt;client_ifsc_code&gt;428d446f6daecbd4890daa885f22b743&lt;/client_ifsc_code&gt;&#xd;
	&lt;narration_1&gt;45af7f5e3cea928b21278ec17cd6d004&lt;/narration_1&gt;&#xd;
	&lt;narration_2&gt;45af7f5e3cea928b21278dc17cd6d004&lt;/narration_2&gt;&#xd;
	&lt;informational_message&gt;4aee7c5934fd90c4b31f33912bc2966d9c85a967f3dc7690bec2a0a04c0f3d12a48888da9f497df31e9a00dd665a81af&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">ce0e92ade61e480e</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Secure-Requests-Simple-Confidentiality-Select Fields-Preconfigured Defaults" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-JSON" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;dEKnv8PfRXmzwM7x+sepGNVomwUE6Rbr1UJp4YJtAMpzIReG20NYzCS/b7GJA6NpM5KIP7lhKZUE3RcKqz7pkDgMnD9XPA5wQ/5PV2CK2Im4v07uVV5grpj26CuUQJzoJDvTKPgqic+8SbxWptcUhddwSBj0XiMuvL9tmLhSpbs=&quot;,&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;dHkmzZvgzXjtlsU+3Ig/YMANI2LodcMtqDiO73S5YFostLuVFlib34OppsNvVMoY8m6xh7qW/2VdRB/Fk6PKFk59hWPqHkRqRhh7bV2Cim3Czhsl8d5ziFP9M0fyBnSvA5aYKZLOcmnOQH72eR4sn9lCUDpA2YCUxr1OHQDSHvE=&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;kWS3S+XiB7zocJJX9cztWq6KhdGNLrD/TscrjTdjYbLyYkhkvzaf5AXpxqhy1u5FrJJbyVOi+9QwY8OrgLzM5/G3yA1tG29nhaAY697bdAj/2vSdGbU274dEraYh/6Ahh7p9sDb9NTh583pQd6qTnOy+suMZbPZc1vOv0O55n28=&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;EkmNYuJUzUKbyC+PkDIbYP8cwHjWLBnORszga8KHwnxg+cyavwaTq65qFSwimeZwHzySID6+NVEPFcfi4oU+dKSX3Rs5lkqJYzjzLkWsYD2OF2gEnyUygaSnerTOEo64lPKA8eftDTeF3OVG9qsleDmXjUM3h1bOYaCoFXWSHyg=&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;SolTxY/nQMLIl5bPM66gT+5/g8nOjvj06/Rs7+BhOlXFX8tuFGBcbTad55g5fRgVpFDVH+q0kTKsnYxE+BIJxvkFSrib22JzlgGwZSX8ioHzZF3o5tCjkJePmxcf7O1D8bTf0Wwmr33MtSdsdHiZadb3X8LwvswZSimwMmcPKnY=&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;NWOSSjjNwjairz8vHcZEjg==&quot;,&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;NWuYSjrTwjbngY0QN2O5aw==&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;NWuYSiXTyiv4sdlDhHLXhpNKsoGc50Ff&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;N2ybSjnTxT7lYe02KX/mnw==&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;N2uSSzrTwDQqveW+4/SIYw==&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">R/qpF6B3lgI=</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;request_id&quot;: &quot;${__changeCase(${__UUID},UPPER,)}&quot;,&#xd;
  &quot;request_datetime&quot;: &quot;${__time(${iso8601_datetime_format},)}&quot;,&#xd;
  &quot;sender_system_id&quot;: &quot;${sender_system_id}&quot;,&#xd;
  &quot;sender_system_user_id&quot;: &quot;${sender_system_user_id}&quot;,&#xd;
  &quot;request_priority&quot;: ${request_priority},&#xd;
  &quot;test_indicator&quot;: ${__changeCase(${test_indicator},LOWER,)},&#xd;
  &quot;client_code&quot;: &quot;${client_code}&quot;,&#xd;
  &quot;virtual_account_number&quot;: &quot;${virtual_account_number}&quot;,&#xd;
  &quot;transaction_amount&quot;: &quot;397be2330db987b56b50e2f461e3f20c&quot;,&#xd;
  &quot;currency_code&quot;: &quot;${currency_code}&quot;,&#xd;
  &quot;payment_mode&quot;: &quot;${payment_mode_neft}&quot;,&#xd;
  &quot;transaction_id&quot;: &quot;3973e8330fa787b54ff60c275cbb4220&quot;,&#xd;
  &quot;transaction_id_type&quot;: &quot;${transaction_id_type_utr}&quot;,&#xd;
  &quot;transaction_datetime&quot;: &quot;3973e83310a78fa80afe62e519ed2894feddee4883cee11c&quot;,&#xd;
  &quot;sender_name&quot;: &quot;${sender_name}&quot;,&#xd;
  &quot;sender_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;sender_account_number&quot;: &quot;3b74eb330ca780bd1d682f9d3ee9b47a&quot;,&#xd;
  &quot;sender_bank_name&quot;: &quot;${sender_bank_name}&quot;,&#xd;
  &quot;sender_ifsc_code&quot;: &quot;${sender_ifsc_code}&quot;,&#xd;
  &quot;client_account_name&quot;: &quot;${client_account_name}&quot;,&#xd;
  &quot;client_mobile_communication_number&quot; : &quot;9880001010&quot;,&#xd;
  &quot;client_account_number&quot;: &quot;3b73e2320fa785b7c3acfe7b99806847&quot;,&#xd;
  &quot;client_bank_name&quot;: &quot;${client_bank_name}&quot;,&#xd;
  &quot;client_ifsc_code&quot;: &quot;${client_ifsc_code}&quot;,&#xd;
  &quot;narration_1&quot;: &quot;${narration_1}&quot;,&#xd;
  &quot;narration_2&quot;: &quot;${narration_2}&quot;,&#xd;
  &quot;informational_message&quot;: &quot;${informational_message}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">19c36f212a85f0a9</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Valid-Requests-XML" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="NORMAL" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_RSA_ECB_PKCS1Padding_acme-rsa-1024" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;mVssuzVnc1e7Ae0oRKqHzxo17s/nE3ceAZ2NqdgcYhFCB2TZ7vZvcake7V/ZrTKH+KnZtFmminRwnYVGRNVpNkI7w4hxNM5sYMOxvEIvfcBvggPlqrmkaXLmVmpn6Sho5H6zjuNSbT5mad/JTxZJzkqNFZCIEXI73+l5zA2Q7Aw=&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;KRpPAP74eigOR0/MDF9MNwcA4osGWF7mS8iwji1meuijb5Pd+BVC9xbz6cTyAFJY0x6iyl672yqkqEMyUxHxeFlJsQYjiY0L2yrB/6I9V46StopPwqYj2f5fbVamuoGKcSXGP1iBVrJrAI2JorloxWQDr94Jpayq7RivGxSSKdw=&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;GR5/fM3XwNGYrqpRVMdSByPkYF8Dpyr64Ns3diBLapFWGoHWF/oB8452C3SUeqr6Kbn9S0VqyYRdrjMqZEyC5PKb5NqxpNFArNH+eMLDngruCkD9zKGijmFv8OPyiLr/k9xoB/c89a6egOeKmkE8QKurt4YA5rdO/iRW9rb12Is=&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;ZXvoXt6av5zyVubXMu+QwvkxaZvPIs7b7hB0MkWLWwbUqQtxIARMHcZmuwYzCdZ7W+DeORGApA3ugNC9rNE1tD2Igm3WKz8QCleF3zKN6MecFRDsh9LhG3mXBN87zgoLXzZ0jnlg3wqpSAHdwStuB3H0T3+9I1y8OMslUZlZpP4=&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;B9oHKTvoMNhd5mC90DGtufPLO1NBdFEQ79E2BaFNCIr85gHfJcCvBFZ27aAf82RoDew1jgu1p2iQE+4q2h/oplSTuxzkR/CYtknKlVKndFQMexYD/SqOwJbcdNRI5n8pGHpfLJmt11qjEBRTl5LF0fmn015cLcBFPioDGi7HdBk=&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;P/T82wipscJk2yciSUJwfw==&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;P/z22wq3scKW7hpq3ZRr0g==&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;P/z22xW3ud9qOlX48CsqJVWTphctNZuG&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;Pfv12wm3tsrZRof6jKr+qg==&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;Pfz82gq3s8A7X3vDKgu42w==&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">fyLkarKWRoI=</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HEX BASIC Simple_ST_DESede_CFB_PKCS7Padding_acme-aes-192" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;intimation_request&gt;&#xd;
   &lt;api_version&gt;${api_version}&lt;/api_version&gt;&#xd;
   &lt;request_id&gt;${__changeCase(${__UUID},UPPER,)}&lt;/request_id&gt;&#xd;
   &lt;request_datetime&gt;${__time(${iso8601_datetime_format},)}&lt;/request_datetime&gt;&#xd;
   &lt;sender_system_id&gt;${sender_system_id}&lt;/sender_system_id&gt;&#xd;
   &lt;sender_system_user_id&gt;${sender_system_user_id}&lt;/sender_system_user_id&gt;&#xd;
   &lt;request_priority&gt;${request_priority}&lt;/request_priority&gt;&#xd;
   &lt;test_indicator&gt;${__changeCase(${test_indicator},LOWER,)}&lt;/test_indicator&gt;&#xd;
   &lt;client_code&gt;${client_code}&lt;/client_code&gt;&#xd;
   &lt;virtual_account_number&gt;${virtual_account_number}&lt;/virtual_account_number&gt;&#xd;
   &lt;transaction_amount&gt;39f6351c6db0cbd4c52a3fc68a5db9fc&lt;/transaction_amount&gt;&#xd;
   &lt;currency_code&gt;${currency_code}&lt;/currency_code&gt;&#xd;
   &lt;payment_mode&gt;${payment_mode}&lt;/payment_mode&gt;&#xd;
   &lt;transaction_id&gt;39fe3f1c6faecbd4d1e857302c14726f&lt;/transaction_id&gt;&#xd;
   &lt;transaction_id_type&gt;${transaction_id_type}&lt;/transaction_id_type&gt;&#xd;
   &lt;transaction_datetime&gt;39fe3f1c70aec3c976c512b4a33638b40ce2ef5388ff09a4&lt;/transaction_datetime&gt;&#xd;
   &lt;sender_name&gt;${sender_name}&lt;/sender_name&gt;&#xd;
   &lt;sender_account_number&gt;3bf93c1c6caeccdca49829a2c5eb560f&lt;/sender_account_number&gt;&#xd;
   &lt;sender_bank_name&gt;${sender_bank_name}&lt;/sender_bank_name&gt;&#xd;
   &lt;sender_ifsc_code&gt;${sender_ifsc_code}&lt;/sender_ifsc_code&gt;&#xd;
   &lt;client_account_name&gt;${client_account_name}&lt;/client_account_name&gt;&#xd;
   &lt;client_account_number&gt;3bfe351d6faec9d694ee873818c83309&lt;/client_account_number&gt;&#xd;
   &lt;client_bank_name&gt;${client_bank_name}&lt;/client_bank_name&gt;&#xd;
   &lt;client_ifsc_code&gt;${client_ifsc_code}&lt;/client_ifsc_code&gt;&#xd;
   &lt;narration_1&gt;${narration_1}&lt;/narration_1&gt;&#xd;
   &lt;narration_2&gt;${narration_2}&lt;/narration_2&gt;&#xd;
   &lt;informational_message&gt;${informational_message}&lt;/informational_message&gt;&#xd;
&lt;/intimation_request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-UserAuthentication, SimpleConfidentialityValidator" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">ACME-Cipher-IV</stringProp>
                      <stringProp name="Header.value">ce0e92ade61e480e</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">DESede_CFB_PKCS7Padding_acme-aes-192</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${ixc_api_build_id}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion-Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mock-MainThreadGroup-2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ixc_api_endpoint_hostname" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_hostname</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_hostname, localhost)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_endpoint_port_number" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_port_number</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_port_number, 9836)}</stringProp>
              <stringProp name="Argument.desc">Tomcat: Local: 8080, Container: 8836 (V 3.6), IBM ACE Local: 7800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_base_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_base_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_base_uri, api/eCollection/mis)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/intimate)}</stringProp>
              <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/intimate</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">http://localhost:8080/ixc-ecollection-profunds-api-v3.6-java-soap-webservice-0.0.1-SNAPSHOT/ws/eCollection/ACME               http://localhost:8080/</stringProp>
        </Arguments>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP-Authorization-Manager-Basic Authentication" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">mclaren</stringProp>
              <stringProp name="Authorization.password">pa55word@12</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_refund_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">tomcat</stringProp>
              <stringProp name="Authorization.password">pa55word@1</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="5xx-Series-Error-Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="52469">500</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message">Test case failure.</stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">12</intProp>
        </ResponseAssertion>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Payload-Confidentiality-On-Steroids" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">112</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Configrity" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="configrity_sample_request_store" elementType="Argument">
                <stringProp name="Argument.name">configrity_sample_request_store</stringProp>
                <stringProp name="Argument.value">C:/Workspaces/workspace-sts/ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme/src/test/resources/sample-messages/PayloadConfidential/transformed</stringProp>
                <stringProp name="Argument.desc">Location of the index file.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="configrity_sample_requests_index_filename" elementType="Argument">
                <stringProp name="Argument.name">configrity_sample_requests_index_filename</stringProp>
                <stringProp name="Argument.value">PayloadConfidentialityRequests.txt</stringProp>
                <stringProp name="Argument.desc">Index file containing names of the files containing request data (JSON or XML)  that need to be processed.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case" elementType="Argument">
                <stringProp name="Argument.name">test_case</stringProp>
                <stringProp name="Argument.value">NA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/ixc-ecollection-profunds-api-v3.6-java-soap-webservice-0.0.1-SNAPSHOT/ws/eCollection/ACME               http://localhost:8080/</stringProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-PayloadConfidentialityValidator" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">PayloadConfidentialityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Configrity-RequestFileIndex" enabled="true">
            <stringProp name="TestPlan.comments">File contains names of all the files that contain encrypted requests. These may either be XML or JSON.</stringProp>
            <stringProp name="filename">${configrity_sample_request_store}/${configrity_sample_requests_index_filename}</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">sample_request_filename</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${test_case}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request_payload}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-PickSampleRequests" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import org.apache.commons.io.FileUtils;
import org.apache.jmeter.protocol.http.control.Header;


// Directory to pick sample requests from.
String sampleRequestStore 	= vars.get(&quot;configrity_sample_request_store&quot;);
String sampleRequestFileName 	= vars.get(&quot;sample_request_filename&quot;);

log.info(&quot;Looking at &quot; + sampleRequestFileName);
String requestContentType = &quot;&quot;;
String skipIndicator = &quot;false&quot;;

if(!sampleRequestFileName.startsWith(&quot;#&quot;)) {
	if(sampleRequestFileName.endsWith(&quot;xml&quot;)) {
		requestContentType = &quot;application/xml&quot;;
	}
	else if(sampleRequestFileName.endsWith(&quot;json&quot;)) {	
		requestContentType = &quot;application/json&quot;;
	}
	else {
		skipIndicator = &quot;true&quot;;
	}
}
else { // filename starts with #, ignoring processing this file
	skipIndicator = &quot;true&quot;;
}

vars.put(&quot;skip_indicator&quot;, skipIndicator);

if(skipIndicator == &quot;false&quot;) {
	// Meta-data additions to the HTTP header.
	sampler.getHeaderManager().add(new Header(&quot;configrity-sample-request&quot;, sampleRequestFileName));

	sampler.getHeaderManager().removeHeaderNamed(&quot;Content-Type&quot;);
	sampler.getHeaderManager().removeHeaderNamed(&quot;Accept&quot;);

	sampler.getHeaderManager().add(new Header(&quot;Content-Type&quot;, requestContentType));
	sampler.getHeaderManager().add(new Header(&quot;Accept&quot;, requestContentType));

	try {
		log.info(&quot;Reading sample request file \&quot;&quot; + sampleRequestFileName + &quot;\&quot; within \&quot;&quot; + sampleRequestStore + &quot;\&quot; store.&quot;);

	    	String requestPayload = FileUtils.readFileToString(new File(sampleRequestStore + &quot;/&quot; + sampleRequestFileName));

		log.info(requestPayload);
		
		// Set the content
		vars.put(&quot;request_payload&quot;, requestPayload);
		vars.put(&quot;test_case&quot;, sampleRequestFileName);
	} 
	catch (Throwable ex) {
	    log.info(&quot;Unable to read sample request. Test script will abend.&quot;, ex);
	    throw ex;
	}
}
</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${ixc_api_build_id}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion-Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mock-MainThreadGroup-3-Compact-V3" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Environment" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ixc_api_endpoint_hostname" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_hostname</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_hostname, localhost)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_endpoint_port_number" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_endpoint_port_number</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_endpoint_port_number, 9836)}</stringProp>
              <stringProp name="Argument.desc">Tomcat: Local: 8080, Container: 8836 (V 3.6), IBM ACE Local: 7800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_base_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_base_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_base_uri, api/eCollection/mis)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ixc_api_intimation_uri" elementType="Argument">
              <stringProp name="Argument.name">ixc_api_intimation_uri</stringProp>
              <stringProp name="Argument.value">${__P(ixc_api_intimation_uri, ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme-2.0.0-configrity/resteasy/intimate)}</stringProp>
              <stringProp name="Argument.desc">Example: /api/eCollection/mis/ACME/remitter-validation-intermediary-account/intimate</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">http://localhost:8080/ixc-ecollection-profunds-api-v3.6-java-soap-webservice-0.0.1-SNAPSHOT/ws/eCollection/ACME               http://localhost:8080/</stringProp>
        </Arguments>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP-Authorization-Manager-Basic Authentication" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">mclaren</stringProp>
              <stringProp name="Authorization.password">pa55word@12</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${ixc_api_endpoint_hostname}:${ixc_api_endpoint_port_number}/${ixc_api_refund_intimation_uri}</stringProp>
              <stringProp name="Authorization.username">tomcat</stringProp>
              <stringProp name="Authorization.password">pa55word@1</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="5xx-Series-Error-Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="52469">500</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message">Test case failure.</stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">12</intProp>
        </ResponseAssertion>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Payload-Confidentiality-On-Steroids" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User-Defined-Variables-Configrity" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="configrity_sample_request_store" elementType="Argument">
                <stringProp name="Argument.name">configrity_sample_request_store</stringProp>
                <stringProp name="Argument.value">C:/Workspaces/workspace-sts/ixc-ecollection-profunds-api-v3.6-swaggerhub-jaxrs-resteasy-server-acme/src/test/resources/sample-messages/PayloadConfidential/transformed</stringProp>
                <stringProp name="Argument.desc">Location of the index file.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="configrity_sample_requests_index_filename" elementType="Argument">
                <stringProp name="Argument.name">configrity_sample_requests_index_filename</stringProp>
                <stringProp name="Argument.value">PayloadConfidentialityRequests.txt</stringProp>
                <stringProp name="Argument.desc">Index file containing names of the files containing request data (JSON or XML)  that need to be processed.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case" elementType="Argument">
                <stringProp name="Argument.name">test_case</stringProp>
                <stringProp name="Argument.value">NA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="use_case_static_base64_1" elementType="Argument">
                <stringProp name="Argument.name">use_case_static_base64_1</stringProp>
                <stringProp name="Argument.value">compact-v3-static-aes-cbc-pkcs7-base64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="use_case_static_hex_1" elementType="Argument">
                <stringProp name="Argument.name">use_case_static_hex_1</stringProp>
                <stringProp name="Argument.value">compact-v3-static-aes-cbc-pkcs7-hex</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="use_case_runtime_base64_1" elementType="Argument">
                <stringProp name="Argument.name">use_case_runtime_base64_1</stringProp>
                <stringProp name="Argument.value">compact-v3-runtime-aes-cbc-pkcs7-base64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="use_case_runtime_hex_1" elementType="Argument">
                <stringProp name="Argument.name">use_case_runtime_hex_1</stringProp>
                <stringProp name="Argument.value">compact-v3-runtime-aes-cbc-pkcs7-hex</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="use_case" elementType="Argument">
                <stringProp name="Argument.name">use_case</stringProp>
                <stringProp name="Argument.value">compact-v3-runtime-aes-cbc-pkcs7-base64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/ixc-ecollection-profunds-api-v3.6-java-soap-webservice-0.0.1-SNAPSHOT/ws/eCollection/ACME               http://localhost:8080/</stringProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP-Header-Manager-PayloadConfidentialityValidator" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">enforced-policy-list</stringProp>
                <stringProp name="Header.value">CompactPayloadsConfidentialityValidator</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">policy-enforcement-indicator</stringProp>
                <stringProp name="Header.value">request-response</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Configrity-RequestFileIndex" enabled="true">
            <stringProp name="TestPlan.comments">File contains names of all the files that contain encrypted requests. These may either be XML or JSON.</stringProp>
            <stringProp name="filename">${configrity_sample_request_store}/${use_case}/${configrity_sample_requests_index_filename}</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">sample_request_filename</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${test_case}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request_payload}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ixc_api_endpoint_hostname}</stringProp>
            <stringProp name="HTTPSampler.port">${ixc_api_endpoint_port_number}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ixc_api_intimation_uri}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">${connect_timeout_ms}</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223-Configrity-PickSampleRequests" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import org.apache.commons.io.FileUtils;
import org.apache.jmeter.protocol.http.control.Header;


// Directory to pick sample requests from.
String sampleRequestStore 	= vars.get(&quot;configrity_sample_request_store&quot;);
String usecase 			= vars.get(&quot;use_case&quot;);
String sampleRequestFileName 	= vars.get(&quot;sample_request_filename&quot;);

log.info(&quot;Looking at &quot; + sampleRequestFileName);
String requestContentType = &quot;&quot;;
String skipIndicator = &quot;false&quot;;

if(!sampleRequestFileName.startsWith(&quot;#&quot;)) {
	if(sampleRequestFileName.endsWith(&quot;xml&quot;)) {
		requestContentType = &quot;application/xml&quot;;
	}
	else if(sampleRequestFileName.endsWith(&quot;json&quot;)) {	
		requestContentType = &quot;application/json&quot;;
	}
	else {
		skipIndicator = &quot;true&quot;;
	}
}
else { // filename starts with #, ignoring processing this file
	skipIndicator = &quot;true&quot;;
}

vars.put(&quot;skip_indicator&quot;, skipIndicator);

if(skipIndicator == &quot;false&quot;) {
	// Meta-data additions to the HTTP header.
	sampler.getHeaderManager().add(new Header(&quot;configrity-sample-request&quot;, sampleRequestFileName));

	sampler.getHeaderManager().removeHeaderNamed(&quot;Content-Type&quot;);
	sampler.getHeaderManager().removeHeaderNamed(&quot;Accept&quot;);

	sampler.getHeaderManager().add(new Header(&quot;Content-Type&quot;, requestContentType));
	sampler.getHeaderManager().add(new Header(&quot;Accept&quot;, requestContentType));

	try {
		log.info(&quot;Reading sample request file \&quot;&quot; + sampleRequestFileName + &quot;\&quot; within \&quot;&quot; + sampleRequestStore + &quot;/&quot; + usecase + &quot;\&quot; store.&quot;);

	    	String requestPayload = FileUtils.readFileToString(new File(sampleRequestStore + &quot;/&quot; + usecase + &quot;/&quot; + sampleRequestFileName));

		log.info(requestPayload);
		
		// Set the content
		vars.put(&quot;request_payload&quot;, requestPayload);
		vars.put(&quot;test_case&quot;, sampleRequestFileName);
	} 
	catch (Throwable ex) {
	    log.info(&quot;Unable to read sample request. Test script will abend.&quot;, ex);
	    throw ex;
	}
}
</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View-Results-Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">${ixc_test_reports_nameprefix}_${ixc_api_build_id}_${__time(yyyyMMdd-HHmm,)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion-Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary-Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
